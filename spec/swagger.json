{
  "swagger": "2.0",
  "info": {
    "description": "The Cisco Intersight OpenAPI specification.",
    "version": "1.0.9-1295",
    "title": "Cisco Intersight OpenAPI specification."
  },
  "host": "intersight.com",
  "basePath": "/api/v1",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/aaa/AuditRecords": {
      "get": {
        "tags": [
          "aaaAuditRecord"
        ],
        "summary": "Read a 'aaa.AuditRecord' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of aaaAuditRecords for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/aaaAuditRecordList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/aaa/AuditRecords/{Moid}": {
      "get": {
        "tags": [
          "aaaAuditRecord"
        ],
        "summary": "Read a 'aaa.AuditRecord' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the aaaAuditRecord instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of aaaAuditRecord",
            "schema": {
              "$ref": "#/definitions/aaaAuditRecord"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/adapter/ConfigPolicies": {
      "get": {
        "tags": [
          "adapterConfigPolicy"
        ],
        "summary": "Read a 'adapter.ConfigPolicy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of adapterConfigPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/adapterConfigPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "adapterConfigPolicy"
        ],
        "summary": "Create a 'adapter.ConfigPolicy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "adapterConfigPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/adapterConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/adapter/ConfigPolicies/{Moid}": {
      "get": {
        "tags": [
          "adapterConfigPolicy"
        ],
        "summary": "Read a 'adapter.ConfigPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the adapterConfigPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of adapterConfigPolicy",
            "schema": {
              "$ref": "#/definitions/adapterConfigPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "adapterConfigPolicy"
        ],
        "summary": "Update a 'adapter.ConfigPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the adapterConfigPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "adapterConfigPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/adapterConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "adapterConfigPolicy"
        ],
        "summary": "Update a 'adapter.ConfigPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the adapterConfigPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "adapterConfigPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/adapterConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "adapterConfigPolicy"
        ],
        "summary": "Delete a 'adapter.ConfigPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the adapterConfigPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/adapter/ExtEthInterfaces": {
      "get": {
        "tags": [
          "adapterExtEthInterface"
        ],
        "summary": "Read a 'adapter.ExtEthInterface' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of adapterExtEthInterfaces for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/adapterExtEthInterfaceList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/adapter/ExtEthInterfaces/{Moid}": {
      "get": {
        "tags": [
          "adapterExtEthInterface"
        ],
        "summary": "Read a 'adapter.ExtEthInterface' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the adapterExtEthInterface instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of adapterExtEthInterface",
            "schema": {
              "$ref": "#/definitions/adapterExtEthInterface"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/adapter/HostEthInterfaces": {
      "get": {
        "tags": [
          "adapterHostEthInterface"
        ],
        "summary": "Read a 'adapter.HostEthInterface' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of adapterHostEthInterfaces for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/adapterHostEthInterfaceList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/adapter/HostEthInterfaces/{Moid}": {
      "get": {
        "tags": [
          "adapterHostEthInterface"
        ],
        "summary": "Read a 'adapter.HostEthInterface' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the adapterHostEthInterface instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of adapterHostEthInterface",
            "schema": {
              "$ref": "#/definitions/adapterHostEthInterface"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/adapter/HostFcInterfaces": {
      "get": {
        "tags": [
          "adapterHostFcInterface"
        ],
        "summary": "Read a 'adapter.HostFcInterface' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of adapterHostFcInterfaces for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/adapterHostFcInterfaceList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/adapter/HostFcInterfaces/{Moid}": {
      "get": {
        "tags": [
          "adapterHostFcInterface"
        ],
        "summary": "Read a 'adapter.HostFcInterface' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the adapterHostFcInterface instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of adapterHostFcInterface",
            "schema": {
              "$ref": "#/definitions/adapterHostFcInterface"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/adapter/HostIscsiInterfaces": {
      "get": {
        "tags": [
          "adapterHostIscsiInterface"
        ],
        "summary": "Read a 'adapter.HostIscsiInterface' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of adapterHostIscsiInterfaces for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/adapterHostIscsiInterfaceList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/adapter/HostIscsiInterfaces/{Moid}": {
      "get": {
        "tags": [
          "adapterHostIscsiInterface"
        ],
        "summary": "Read a 'adapter.HostIscsiInterface' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the adapterHostIscsiInterface instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of adapterHostIscsiInterface",
            "schema": {
              "$ref": "#/definitions/adapterHostIscsiInterface"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/adapter/Units": {
      "get": {
        "tags": [
          "adapterUnit"
        ],
        "summary": "Read a 'adapter.Unit' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of adapterUnits for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/adapterUnitList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/adapter/Units/{Moid}": {
      "get": {
        "tags": [
          "adapterUnit"
        ],
        "summary": "Read a 'adapter.Unit' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the adapterUnit instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of adapterUnit",
            "schema": {
              "$ref": "#/definitions/adapterUnit"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/appliance/Backups": {
      "get": {
        "tags": [
          "applianceBackup"
        ],
        "summary": "Read a 'appliance.Backup' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of applianceBackups for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/applianceBackupList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "applianceBackup"
        ],
        "summary": "Create a 'appliance.Backup' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "applianceBackup to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/applianceBackup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/appliance/Backups/{Moid}": {
      "get": {
        "tags": [
          "applianceBackup"
        ],
        "summary": "Read a 'appliance.Backup' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the applianceBackup instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of applianceBackup",
            "schema": {
              "$ref": "#/definitions/applianceBackup"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "applianceBackup"
        ],
        "summary": "Delete a 'appliance.Backup' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the applianceBackup instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/appliance/BackupPolicies": {
      "get": {
        "tags": [
          "applianceBackupPolicy"
        ],
        "summary": "Read a 'appliance.BackupPolicy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of applianceBackupPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/applianceBackupPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "applianceBackupPolicy"
        ],
        "summary": "Create a 'appliance.BackupPolicy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "applianceBackupPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/applianceBackupPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/appliance/BackupPolicies/{Moid}": {
      "get": {
        "tags": [
          "applianceBackupPolicy"
        ],
        "summary": "Read a 'appliance.BackupPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the applianceBackupPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of applianceBackupPolicy",
            "schema": {
              "$ref": "#/definitions/applianceBackupPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "applianceBackupPolicy"
        ],
        "summary": "Update a 'appliance.BackupPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the applianceBackupPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "applianceBackupPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/applianceBackupPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "applianceBackupPolicy"
        ],
        "summary": "Update a 'appliance.BackupPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the applianceBackupPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "applianceBackupPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/applianceBackupPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/appliance/CertificateSettings": {
      "get": {
        "tags": [
          "applianceCertificateSetting"
        ],
        "summary": "Read a 'appliance.CertificateSetting' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of applianceCertificateSettings for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/applianceCertificateSettingList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/appliance/CertificateSettings/{Moid}": {
      "get": {
        "tags": [
          "applianceCertificateSetting"
        ],
        "summary": "Read a 'appliance.CertificateSetting' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the applianceCertificateSetting instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of applianceCertificateSetting",
            "schema": {
              "$ref": "#/definitions/applianceCertificateSetting"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "applianceCertificateSetting"
        ],
        "summary": "Update a 'appliance.CertificateSetting' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the applianceCertificateSetting instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "applianceCertificateSetting to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/applianceCertificateSetting"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "applianceCertificateSetting"
        ],
        "summary": "Update a 'appliance.CertificateSetting' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the applianceCertificateSetting instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "applianceCertificateSetting to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/applianceCertificateSetting"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/appliance/DataExportPolicies": {
      "get": {
        "tags": [
          "applianceDataExportPolicy"
        ],
        "summary": "Read a 'appliance.DataExportPolicy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of applianceDataExportPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/applianceDataExportPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "applianceDataExportPolicy"
        ],
        "summary": "Create a 'appliance.DataExportPolicy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "applianceDataExportPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/applianceDataExportPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/appliance/DataExportPolicies/{Moid}": {
      "get": {
        "tags": [
          "applianceDataExportPolicy"
        ],
        "summary": "Read a 'appliance.DataExportPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the applianceDataExportPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of applianceDataExportPolicy",
            "schema": {
              "$ref": "#/definitions/applianceDataExportPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "applianceDataExportPolicy"
        ],
        "summary": "Update a 'appliance.DataExportPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the applianceDataExportPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "applianceDataExportPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/applianceDataExportPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "applianceDataExportPolicy"
        ],
        "summary": "Update a 'appliance.DataExportPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the applianceDataExportPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "applianceDataExportPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/applianceDataExportPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/appliance/DeviceClaims": {
      "get": {
        "tags": [
          "applianceDeviceClaim"
        ],
        "summary": "Read a 'appliance.DeviceClaim' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of applianceDeviceClaims for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/applianceDeviceClaimList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "applianceDeviceClaim"
        ],
        "summary": "Create a 'appliance.DeviceClaim' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "applianceDeviceClaim to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/applianceDeviceClaim"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/appliance/DeviceClaims/{Moid}": {
      "get": {
        "tags": [
          "applianceDeviceClaim"
        ],
        "summary": "Read a 'appliance.DeviceClaim' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the applianceDeviceClaim instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of applianceDeviceClaim",
            "schema": {
              "$ref": "#/definitions/applianceDeviceClaim"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/appliance/DiagSettings": {
      "post": {
        "tags": [
          "applianceDiagSetting"
        ],
        "summary": "Create a 'appliance.DiagSetting' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "applianceDiagSetting to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/applianceDiagSetting"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "applianceDiagSetting"
        ],
        "summary": "Read a 'appliance.DiagSetting' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of applianceDiagSettings for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/applianceDiagSettingList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/appliance/DiagSettings/{Moid}": {
      "post": {
        "tags": [
          "applianceDiagSetting"
        ],
        "summary": "Update a 'appliance.DiagSetting' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the applianceDiagSetting instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "applianceDiagSetting to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/applianceDiagSetting"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "applianceDiagSetting"
        ],
        "summary": "Update a 'appliance.DiagSetting' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the applianceDiagSetting instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "applianceDiagSetting to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/applianceDiagSetting"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "applianceDiagSetting"
        ],
        "summary": "Read a 'appliance.DiagSetting' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the applianceDiagSetting instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of applianceDiagSetting",
            "schema": {
              "$ref": "#/definitions/applianceDiagSetting"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/appliance/ImageBundles": {
      "get": {
        "tags": [
          "applianceImageBundle"
        ],
        "summary": "Read a 'appliance.ImageBundle' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of applianceImageBundles for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/applianceImageBundleList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/appliance/ImageBundles/{Moid}": {
      "get": {
        "tags": [
          "applianceImageBundle"
        ],
        "summary": "Read a 'appliance.ImageBundle' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the applianceImageBundle instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of applianceImageBundle",
            "schema": {
              "$ref": "#/definitions/applianceImageBundle"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/appliance/NodeInfos": {
      "get": {
        "tags": [
          "applianceNodeInfo"
        ],
        "summary": "Read a 'appliance.NodeInfo' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of applianceNodeInfos for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/applianceNodeInfoList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/appliance/NodeInfos/{Moid}": {
      "get": {
        "tags": [
          "applianceNodeInfo"
        ],
        "summary": "Read a 'appliance.NodeInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the applianceNodeInfo instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of applianceNodeInfo",
            "schema": {
              "$ref": "#/definitions/applianceNodeInfo"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/appliance/Restores": {
      "get": {
        "tags": [
          "applianceRestore"
        ],
        "summary": "Read a 'appliance.Restore' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of applianceRestores for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/applianceRestoreList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "applianceRestore"
        ],
        "summary": "Create a 'appliance.Restore' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "applianceRestore to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/applianceRestore"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/appliance/Restores/{Moid}": {
      "get": {
        "tags": [
          "applianceRestore"
        ],
        "summary": "Read a 'appliance.Restore' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the applianceRestore instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of applianceRestore",
            "schema": {
              "$ref": "#/definitions/applianceRestore"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "applianceRestore"
        ],
        "summary": "Delete a 'appliance.Restore' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the applianceRestore instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/appliance/SetupInfos": {
      "get": {
        "tags": [
          "applianceSetupInfo"
        ],
        "summary": "Read a 'appliance.SetupInfo' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of applianceSetupInfos for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/applianceSetupInfoList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/appliance/SetupInfos/{Moid}": {
      "get": {
        "tags": [
          "applianceSetupInfo"
        ],
        "summary": "Read a 'appliance.SetupInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the applianceSetupInfo instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of applianceSetupInfo",
            "schema": {
              "$ref": "#/definitions/applianceSetupInfo"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "applianceSetupInfo"
        ],
        "summary": "Update a 'appliance.SetupInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the applianceSetupInfo instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "applianceSetupInfo to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/applianceSetupInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "applianceSetupInfo"
        ],
        "summary": "Update a 'appliance.SetupInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the applianceSetupInfo instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "applianceSetupInfo to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/applianceSetupInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/appliance/SystemInfos": {
      "get": {
        "tags": [
          "applianceSystemInfo"
        ],
        "summary": "Read a 'appliance.SystemInfo' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of applianceSystemInfos for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/applianceSystemInfoList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/appliance/SystemInfos/{Moid}": {
      "get": {
        "tags": [
          "applianceSystemInfo"
        ],
        "summary": "Read a 'appliance.SystemInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the applianceSystemInfo instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of applianceSystemInfo",
            "schema": {
              "$ref": "#/definitions/applianceSystemInfo"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/appliance/Upgrades": {
      "get": {
        "tags": [
          "applianceUpgrade"
        ],
        "summary": "Read a 'appliance.Upgrade' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of applianceUpgrades for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/applianceUpgradeList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/appliance/Upgrades/{Moid}": {
      "get": {
        "tags": [
          "applianceUpgrade"
        ],
        "summary": "Read a 'appliance.Upgrade' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the applianceUpgrade instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of applianceUpgrade",
            "schema": {
              "$ref": "#/definitions/applianceUpgrade"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "applianceUpgrade"
        ],
        "summary": "Update a 'appliance.Upgrade' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the applianceUpgrade instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "applianceUpgrade to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/applianceUpgrade"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "applianceUpgrade"
        ],
        "summary": "Update a 'appliance.Upgrade' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the applianceUpgrade instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "applianceUpgrade to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/applianceUpgrade"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/appliance/UpgradePolicies": {
      "get": {
        "tags": [
          "applianceUpgradePolicy"
        ],
        "summary": "Read a 'appliance.UpgradePolicy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of applianceUpgradePolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/applianceUpgradePolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/appliance/UpgradePolicies/{Moid}": {
      "get": {
        "tags": [
          "applianceUpgradePolicy"
        ],
        "summary": "Read a 'appliance.UpgradePolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the applianceUpgradePolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of applianceUpgradePolicy",
            "schema": {
              "$ref": "#/definitions/applianceUpgradePolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "applianceUpgradePolicy"
        ],
        "summary": "Update a 'appliance.UpgradePolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the applianceUpgradePolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "applianceUpgradePolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/applianceUpgradePolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "applianceUpgradePolicy"
        ],
        "summary": "Update a 'appliance.UpgradePolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the applianceUpgradePolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "applianceUpgradePolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/applianceUpgradePolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/asset/ClusterMembers": {
      "get": {
        "tags": [
          "assetClusterMember"
        ],
        "summary": "Read a 'asset.ClusterMember' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of assetClusterMembers for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/assetClusterMemberList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/asset/ClusterMembers/{Moid}": {
      "get": {
        "tags": [
          "assetClusterMember"
        ],
        "summary": "Read a 'asset.ClusterMember' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the assetClusterMember instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of assetClusterMember",
            "schema": {
              "$ref": "#/definitions/assetClusterMember"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/asset/DeviceClaims": {
      "post": {
        "tags": [
          "assetDeviceClaim"
        ],
        "summary": "Create a 'asset.DeviceClaim' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "assetDeviceClaim to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/assetDeviceClaim"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/asset/DeviceClaims/{Moid}": {
      "delete": {
        "tags": [
          "assetDeviceClaim"
        ],
        "summary": "Delete a 'asset.DeviceClaim' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the assetDeviceClaim instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/asset/DeviceConfigurations": {
      "get": {
        "tags": [
          "assetDeviceConfiguration"
        ],
        "summary": "Read a 'asset.DeviceConfiguration' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of assetDeviceConfigurations for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/assetDeviceConfigurationList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/asset/DeviceConfigurations/{Moid}": {
      "get": {
        "tags": [
          "assetDeviceConfiguration"
        ],
        "summary": "Read a 'asset.DeviceConfiguration' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the assetDeviceConfiguration instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of assetDeviceConfiguration",
            "schema": {
              "$ref": "#/definitions/assetDeviceConfiguration"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "assetDeviceConfiguration"
        ],
        "summary": "Update a 'asset.DeviceConfiguration' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the assetDeviceConfiguration instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "assetDeviceConfiguration to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/assetDeviceConfiguration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "assetDeviceConfiguration"
        ],
        "summary": "Update a 'asset.DeviceConfiguration' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the assetDeviceConfiguration instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "assetDeviceConfiguration to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/assetDeviceConfiguration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/asset/DeviceConnectorManagers": {
      "get": {
        "tags": [
          "assetDeviceConnectorManager"
        ],
        "summary": "Read a 'asset.DeviceConnectorManager' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of assetDeviceConnectorManagers for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/assetDeviceConnectorManagerList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/asset/DeviceConnectorManagers/{Moid}": {
      "get": {
        "tags": [
          "assetDeviceConnectorManager"
        ],
        "summary": "Read a 'asset.DeviceConnectorManager' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the assetDeviceConnectorManager instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of assetDeviceConnectorManager",
            "schema": {
              "$ref": "#/definitions/assetDeviceConnectorManager"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/asset/DeviceContractInformations": {
      "get": {
        "tags": [
          "assetDeviceContractInformation"
        ],
        "summary": "Read a 'asset.DeviceContractInformation' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of assetDeviceContractInformations for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/assetDeviceContractInformationList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/asset/DeviceContractInformations/{Moid}": {
      "get": {
        "tags": [
          "assetDeviceContractInformation"
        ],
        "summary": "Read a 'asset.DeviceContractInformation' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the assetDeviceContractInformation instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of assetDeviceContractInformation",
            "schema": {
              "$ref": "#/definitions/assetDeviceContractInformation"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "assetDeviceContractInformation"
        ],
        "summary": "Update a 'asset.DeviceContractInformation' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the assetDeviceContractInformation instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "assetDeviceContractInformation to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/assetDeviceContractInformation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "assetDeviceContractInformation"
        ],
        "summary": "Update a 'asset.DeviceContractInformation' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the assetDeviceContractInformation instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "assetDeviceContractInformation to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/assetDeviceContractInformation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/asset/DeviceRegistrations": {
      "get": {
        "tags": [
          "assetDeviceRegistration"
        ],
        "summary": "Read a 'asset.DeviceRegistration' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of assetDeviceRegistrations for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/assetDeviceRegistrationList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/asset/DeviceRegistrations/{Moid}": {
      "get": {
        "tags": [
          "assetDeviceRegistration"
        ],
        "summary": "Read a 'asset.DeviceRegistration' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the assetDeviceRegistration instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of assetDeviceRegistration",
            "schema": {
              "$ref": "#/definitions/assetDeviceRegistration"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "assetDeviceRegistration"
        ],
        "summary": "Deletes the resource representing the device connector. All associated REST resources will be deleted. In particular, inventory and operational data associated with this device will be deleted.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the assetDeviceRegistration instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "assetDeviceRegistration"
        ],
        "summary": "Updates the resource representing the device connector. For example, this can be used to annotate the device connector resource with user-specified tags.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the assetDeviceRegistration instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "assetDeviceRegistration to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/assetDeviceRegistration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "assetDeviceRegistration"
        ],
        "summary": "Updates the resource representing the device connector. For example, this can be used to annotate the device connector resource with user-specified tags.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the assetDeviceRegistration instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "assetDeviceRegistration to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/assetDeviceRegistration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/asset/ManagedDevices": {
      "get": {
        "tags": [
          "assetManagedDevice"
        ],
        "summary": "Read a 'asset.ManagedDevice' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of assetManagedDevices for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/assetManagedDeviceList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "assetManagedDevice"
        ],
        "summary": "Create a 'asset.ManagedDevice' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "assetManagedDevice to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/assetManagedDevice"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/asset/ManagedDevices/{Moid}": {
      "get": {
        "tags": [
          "assetManagedDevice"
        ],
        "summary": "Read a 'asset.ManagedDevice' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the assetManagedDevice instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of assetManagedDevice",
            "schema": {
              "$ref": "#/definitions/assetManagedDevice"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "assetManagedDevice"
        ],
        "summary": "Delete a 'asset.ManagedDevice' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the assetManagedDevice instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "assetManagedDevice"
        ],
        "summary": "Update a 'asset.ManagedDevice' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the assetManagedDevice instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "assetManagedDevice to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/assetManagedDevice"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "assetManagedDevice"
        ],
        "summary": "Update a 'asset.ManagedDevice' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the assetManagedDevice instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "assetManagedDevice to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/assetManagedDevice"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/bios/BootModes": {
      "get": {
        "tags": [
          "biosBootMode"
        ],
        "summary": "Read a 'bios.BootMode' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of biosBootModes for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/biosBootModeList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/bios/BootModes/{Moid}": {
      "get": {
        "tags": [
          "biosBootMode"
        ],
        "summary": "Read a 'bios.BootMode' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the biosBootMode instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of biosBootMode",
            "schema": {
              "$ref": "#/definitions/biosBootMode"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "biosBootMode"
        ],
        "summary": "Update a 'bios.BootMode' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the biosBootMode instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "biosBootMode to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/biosBootMode"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "biosBootMode"
        ],
        "summary": "Update a 'bios.BootMode' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the biosBootMode instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "biosBootMode to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/biosBootMode"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/bios/Policies": {
      "get": {
        "tags": [
          "biosPolicy"
        ],
        "summary": "Read a 'bios.Policy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of biosPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/biosPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "biosPolicy"
        ],
        "summary": "Create a 'bios.Policy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "biosPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/biosPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/bios/Policies/{Moid}": {
      "get": {
        "tags": [
          "biosPolicy"
        ],
        "summary": "Read a 'bios.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the biosPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of biosPolicy",
            "schema": {
              "$ref": "#/definitions/biosPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "biosPolicy"
        ],
        "summary": "Update a 'bios.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the biosPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "biosPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/biosPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "biosPolicy"
        ],
        "summary": "Update a 'bios.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the biosPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "biosPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/biosPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "biosPolicy"
        ],
        "summary": "Delete a 'bios.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the biosPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/bios/Units": {
      "get": {
        "tags": [
          "biosUnit"
        ],
        "summary": "Read a 'bios.Unit' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of biosUnits for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/biosUnitList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/bios/Units/{Moid}": {
      "get": {
        "tags": [
          "biosUnit"
        ],
        "summary": "Read a 'bios.Unit' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the biosUnit instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of biosUnit",
            "schema": {
              "$ref": "#/definitions/biosUnit"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "biosUnit"
        ],
        "summary": "Update a 'bios.Unit' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the biosUnit instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "biosUnit to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/biosUnit"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "biosUnit"
        ],
        "summary": "Update a 'bios.Unit' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the biosUnit instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "biosUnit to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/biosUnit"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/boot/DeviceBootModes": {
      "get": {
        "tags": [
          "bootDeviceBootMode"
        ],
        "summary": "Read a 'boot.DeviceBootMode' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of bootDeviceBootModes for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/bootDeviceBootModeList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/boot/DeviceBootModes/{Moid}": {
      "get": {
        "tags": [
          "bootDeviceBootMode"
        ],
        "summary": "Read a 'boot.DeviceBootMode' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the bootDeviceBootMode instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of bootDeviceBootMode",
            "schema": {
              "$ref": "#/definitions/bootDeviceBootMode"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "bootDeviceBootMode"
        ],
        "summary": "Update a 'boot.DeviceBootMode' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the bootDeviceBootMode instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "bootDeviceBootMode to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bootDeviceBootMode"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "bootDeviceBootMode"
        ],
        "summary": "Update a 'boot.DeviceBootMode' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the bootDeviceBootMode instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "bootDeviceBootMode to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bootDeviceBootMode"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/boot/PrecisionPolicies": {
      "get": {
        "tags": [
          "bootPrecisionPolicy"
        ],
        "summary": "Read a 'boot.PrecisionPolicy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of bootPrecisionPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/bootPrecisionPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "bootPrecisionPolicy"
        ],
        "summary": "Create a 'boot.PrecisionPolicy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "bootPrecisionPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bootPrecisionPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/boot/PrecisionPolicies/{Moid}": {
      "get": {
        "tags": [
          "bootPrecisionPolicy"
        ],
        "summary": "Read a 'boot.PrecisionPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the bootPrecisionPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of bootPrecisionPolicy",
            "schema": {
              "$ref": "#/definitions/bootPrecisionPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "bootPrecisionPolicy"
        ],
        "summary": "Update a 'boot.PrecisionPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the bootPrecisionPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "bootPrecisionPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bootPrecisionPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "bootPrecisionPolicy"
        ],
        "summary": "Update a 'boot.PrecisionPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the bootPrecisionPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "bootPrecisionPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bootPrecisionPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "bootPrecisionPolicy"
        ],
        "summary": "Delete a 'boot.PrecisionPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the bootPrecisionPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/compute/Blades": {
      "get": {
        "tags": [
          "computeBlade"
        ],
        "summary": "Read a 'compute.Blade' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of computeBlades for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/computeBladeList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/compute/Blades/{Moid}": {
      "get": {
        "tags": [
          "computeBlade"
        ],
        "summary": "Read a 'compute.Blade' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the computeBlade instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of computeBlade",
            "schema": {
              "$ref": "#/definitions/computeBlade"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "computeBlade"
        ],
        "summary": "Update a 'compute.Blade' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the computeBlade instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "computeBlade to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/computeBlade"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "computeBlade"
        ],
        "summary": "Update a 'compute.Blade' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the computeBlade instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "computeBlade to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/computeBlade"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/compute/Boards": {
      "get": {
        "tags": [
          "computeBoard"
        ],
        "summary": "Read a 'compute.Board' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of computeBoards for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/computeBoardList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/compute/Boards/{Moid}": {
      "get": {
        "tags": [
          "computeBoard"
        ],
        "summary": "Read a 'compute.Board' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the computeBoard instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of computeBoard",
            "schema": {
              "$ref": "#/definitions/computeBoard"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "computeBoard"
        ],
        "summary": "Update a 'compute.Board' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the computeBoard instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "computeBoard to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/computeBoard"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "computeBoard"
        ],
        "summary": "Update a 'compute.Board' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the computeBoard instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "computeBoard to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/computeBoard"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/compute/PhysicalSummaries": {
      "get": {
        "tags": [
          "computePhysicalSummary"
        ],
        "summary": "Read a 'compute.PhysicalSummary' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of computePhysicalSummaries for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/computePhysicalSummaryList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/compute/PhysicalSummaries/{Moid}": {
      "get": {
        "tags": [
          "computePhysicalSummary"
        ],
        "summary": "Read a 'compute.PhysicalSummary' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the computePhysicalSummary instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of computePhysicalSummary",
            "schema": {
              "$ref": "#/definitions/computePhysicalSummary"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/compute/RackUnits": {
      "get": {
        "tags": [
          "computeRackUnit"
        ],
        "summary": "Read a 'compute.RackUnit' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of computeRackUnits for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/computeRackUnitList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/compute/RackUnits/{Moid}": {
      "get": {
        "tags": [
          "computeRackUnit"
        ],
        "summary": "Read a 'compute.RackUnit' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the computeRackUnit instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of computeRackUnit",
            "schema": {
              "$ref": "#/definitions/computeRackUnit"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "computeRackUnit"
        ],
        "summary": "Update a 'compute.RackUnit' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the computeRackUnit instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "computeRackUnit to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/computeRackUnit"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "computeRackUnit"
        ],
        "summary": "Update a 'compute.RackUnit' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the computeRackUnit instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "computeRackUnit to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/computeRackUnit"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/compute/ServerSettings": {
      "get": {
        "tags": [
          "computeServerSetting"
        ],
        "summary": "Read a 'compute.ServerSetting' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of computeServerSettings for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/computeServerSettingList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/compute/ServerSettings/{Moid}": {
      "get": {
        "tags": [
          "computeServerSetting"
        ],
        "summary": "Read a 'compute.ServerSetting' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the computeServerSetting instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of computeServerSetting",
            "schema": {
              "$ref": "#/definitions/computeServerSetting"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "computeServerSetting"
        ],
        "summary": "Update a 'compute.ServerSetting' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the computeServerSetting instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "computeServerSetting to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/computeServerSetting"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "computeServerSetting"
        ],
        "summary": "Update a 'compute.ServerSetting' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the computeServerSetting instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "computeServerSetting to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/computeServerSetting"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cond/Alarms": {
      "get": {
        "tags": [
          "condAlarm"
        ],
        "summary": "Read a 'cond.Alarm' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of condAlarms for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/condAlarmList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cond/Alarms/{Moid}": {
      "get": {
        "tags": [
          "condAlarm"
        ],
        "summary": "Read a 'cond.Alarm' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the condAlarm instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of condAlarm",
            "schema": {
              "$ref": "#/definitions/condAlarm"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cond/HclStatuses": {
      "get": {
        "tags": [
          "condHclStatus"
        ],
        "summary": "Read a 'cond.HclStatus' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of condHclStatuses for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/condHclStatusList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cond/HclStatuses/{Moid}": {
      "get": {
        "tags": [
          "condHclStatus"
        ],
        "summary": "Read a 'cond.HclStatus' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the condHclStatus instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of condHclStatus",
            "schema": {
              "$ref": "#/definitions/condHclStatus"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cond/HclStatusDetails": {
      "get": {
        "tags": [
          "condHclStatusDetail"
        ],
        "summary": "Read a 'cond.HclStatusDetail' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of condHclStatusDetails for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/condHclStatusDetailList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cond/HclStatusDetails/{Moid}": {
      "get": {
        "tags": [
          "condHclStatusDetail"
        ],
        "summary": "Read a 'cond.HclStatusDetail' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the condHclStatusDetail instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of condHclStatusDetail",
            "schema": {
              "$ref": "#/definitions/condHclStatusDetail"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cond/HclStatusJobs": {
      "get": {
        "tags": [
          "condHclStatusJob"
        ],
        "summary": "Read a 'cond.HclStatusJob' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of condHclStatusJobs for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/condHclStatusJobList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cond/HclStatusJobs/{Moid}": {
      "get": {
        "tags": [
          "condHclStatusJob"
        ],
        "summary": "Read a 'cond.HclStatusJob' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the condHclStatusJob instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of condHclStatusJob",
            "schema": {
              "$ref": "#/definitions/condHclStatusJob"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/deviceconnector/Policies": {
      "post": {
        "tags": [
          "deviceconnectorPolicy"
        ],
        "summary": "Create a 'deviceconnector.Policy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "deviceconnectorPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/deviceconnectorPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "deviceconnectorPolicy"
        ],
        "summary": "Read a 'deviceconnector.Policy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of deviceconnectorPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/deviceconnectorPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/deviceconnector/Policies/{Moid}": {
      "get": {
        "tags": [
          "deviceconnectorPolicy"
        ],
        "summary": "Read a 'deviceconnector.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the deviceconnectorPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of deviceconnectorPolicy",
            "schema": {
              "$ref": "#/definitions/deviceconnectorPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "deviceconnectorPolicy"
        ],
        "summary": "Update a 'deviceconnector.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the deviceconnectorPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "deviceconnectorPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/deviceconnectorPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "deviceconnectorPolicy"
        ],
        "summary": "Update a 'deviceconnector.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the deviceconnectorPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "deviceconnectorPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/deviceconnectorPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "deviceconnectorPolicy"
        ],
        "summary": "Delete a 'deviceconnector.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the deviceconnectorPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/Chasses": {
      "get": {
        "tags": [
          "equipmentChassis"
        ],
        "summary": "Read a 'equipment.Chassis' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of equipmentChasses for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/equipmentChassisList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/Chasses/{Moid}": {
      "get": {
        "tags": [
          "equipmentChassis"
        ],
        "summary": "Read a 'equipment.Chassis' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentChassis instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of equipmentChassis",
            "schema": {
              "$ref": "#/definitions/equipmentChassis"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "equipmentChassis"
        ],
        "summary": "Update a 'equipment.Chassis' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentChassis instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "equipmentChassis to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentChassis"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "equipmentChassis"
        ],
        "summary": "Update a 'equipment.Chassis' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentChassis instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "equipmentChassis to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentChassis"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/DeviceSummaries": {
      "get": {
        "tags": [
          "equipmentDeviceSummary"
        ],
        "summary": "Read a 'equipment.DeviceSummary' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of equipmentDeviceSummaries for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/equipmentDeviceSummaryList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/DeviceSummaries/{Moid}": {
      "get": {
        "tags": [
          "equipmentDeviceSummary"
        ],
        "summary": "Read a 'equipment.DeviceSummary' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentDeviceSummary instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of equipmentDeviceSummary",
            "schema": {
              "$ref": "#/definitions/equipmentDeviceSummary"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/Fans": {
      "get": {
        "tags": [
          "equipmentFan"
        ],
        "summary": "Read a 'equipment.Fan' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of equipmentFans for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/equipmentFanList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/Fans/{Moid}": {
      "get": {
        "tags": [
          "equipmentFan"
        ],
        "summary": "Read a 'equipment.Fan' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentFan instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of equipmentFan",
            "schema": {
              "$ref": "#/definitions/equipmentFan"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "equipmentFan"
        ],
        "summary": "Update a 'equipment.Fan' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentFan instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "equipmentFan to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentFan"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "equipmentFan"
        ],
        "summary": "Update a 'equipment.Fan' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentFan instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "equipmentFan to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentFan"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/FanModules": {
      "get": {
        "tags": [
          "equipmentFanModule"
        ],
        "summary": "Read a 'equipment.FanModule' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of equipmentFanModules for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/equipmentFanModuleList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/FanModules/{Moid}": {
      "get": {
        "tags": [
          "equipmentFanModule"
        ],
        "summary": "Read a 'equipment.FanModule' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentFanModule instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of equipmentFanModule",
            "schema": {
              "$ref": "#/definitions/equipmentFanModule"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "equipmentFanModule"
        ],
        "summary": "Update a 'equipment.FanModule' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentFanModule instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "equipmentFanModule to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentFanModule"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "equipmentFanModule"
        ],
        "summary": "Update a 'equipment.FanModule' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentFanModule instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "equipmentFanModule to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentFanModule"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/Fexes": {
      "get": {
        "tags": [
          "equipmentFex"
        ],
        "summary": "Read a 'equipment.Fex' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of equipmentFexes for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/equipmentFexList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/Fexes/{Moid}": {
      "get": {
        "tags": [
          "equipmentFex"
        ],
        "summary": "Read a 'equipment.Fex' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentFex instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of equipmentFex",
            "schema": {
              "$ref": "#/definitions/equipmentFex"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "equipmentFex"
        ],
        "summary": "Update a 'equipment.Fex' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentFex instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "equipmentFex to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentFex"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "equipmentFex"
        ],
        "summary": "Update a 'equipment.Fex' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentFex instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "equipmentFex to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentFex"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/IoCards": {
      "get": {
        "tags": [
          "equipmentIoCard"
        ],
        "summary": "Read a 'equipment.IoCard' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of equipmentIoCards for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/equipmentIoCardList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/IoCards/{Moid}": {
      "get": {
        "tags": [
          "equipmentIoCard"
        ],
        "summary": "Read a 'equipment.IoCard' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentIoCard instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of equipmentIoCard",
            "schema": {
              "$ref": "#/definitions/equipmentIoCard"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "equipmentIoCard"
        ],
        "summary": "Update a 'equipment.IoCard' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentIoCard instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "equipmentIoCard to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentIoCard"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "equipmentIoCard"
        ],
        "summary": "Update a 'equipment.IoCard' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentIoCard instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "equipmentIoCard to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentIoCard"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/IoExpanders": {
      "get": {
        "tags": [
          "equipmentIoExpander"
        ],
        "summary": "Read a 'equipment.IoExpander' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of equipmentIoExpanders for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/equipmentIoExpanderList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/IoExpanders/{Moid}": {
      "get": {
        "tags": [
          "equipmentIoExpander"
        ],
        "summary": "Read a 'equipment.IoExpander' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentIoExpander instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of equipmentIoExpander",
            "schema": {
              "$ref": "#/definitions/equipmentIoExpander"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "equipmentIoExpander"
        ],
        "summary": "Update a 'equipment.IoExpander' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentIoExpander instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "equipmentIoExpander to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentIoExpander"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "equipmentIoExpander"
        ],
        "summary": "Update a 'equipment.IoExpander' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentIoExpander instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "equipmentIoExpander to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentIoExpander"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/LocatorLeds": {
      "get": {
        "tags": [
          "equipmentLocatorLed"
        ],
        "summary": "Read a 'equipment.LocatorLed' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of equipmentLocatorLeds for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/equipmentLocatorLedList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/LocatorLeds/{Moid}": {
      "get": {
        "tags": [
          "equipmentLocatorLed"
        ],
        "summary": "Read a 'equipment.LocatorLed' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentLocatorLed instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of equipmentLocatorLed",
            "schema": {
              "$ref": "#/definitions/equipmentLocatorLed"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "equipmentLocatorLed"
        ],
        "summary": "Update a 'equipment.LocatorLed' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentLocatorLed instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "equipmentLocatorLed to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentLocatorLed"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "equipmentLocatorLed"
        ],
        "summary": "Update a 'equipment.LocatorLed' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentLocatorLed instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "equipmentLocatorLed to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentLocatorLed"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/Psus": {
      "get": {
        "tags": [
          "equipmentPsu"
        ],
        "summary": "Read a 'equipment.Psu' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of equipmentPsus for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/equipmentPsuList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/Psus/{Moid}": {
      "get": {
        "tags": [
          "equipmentPsu"
        ],
        "summary": "Read a 'equipment.Psu' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentPsu instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of equipmentPsu",
            "schema": {
              "$ref": "#/definitions/equipmentPsu"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "equipmentPsu"
        ],
        "summary": "Update a 'equipment.Psu' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentPsu instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "equipmentPsu to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentPsu"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "equipmentPsu"
        ],
        "summary": "Update a 'equipment.Psu' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentPsu instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "equipmentPsu to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentPsu"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/RackEnclosures": {
      "get": {
        "tags": [
          "equipmentRackEnclosure"
        ],
        "summary": "Read a 'equipment.RackEnclosure' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of equipmentRackEnclosures for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/equipmentRackEnclosureList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/RackEnclosures/{Moid}": {
      "get": {
        "tags": [
          "equipmentRackEnclosure"
        ],
        "summary": "Read a 'equipment.RackEnclosure' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentRackEnclosure instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of equipmentRackEnclosure",
            "schema": {
              "$ref": "#/definitions/equipmentRackEnclosure"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "equipmentRackEnclosure"
        ],
        "summary": "Update a 'equipment.RackEnclosure' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentRackEnclosure instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "equipmentRackEnclosure to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentRackEnclosure"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "equipmentRackEnclosure"
        ],
        "summary": "Update a 'equipment.RackEnclosure' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentRackEnclosure instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "equipmentRackEnclosure to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentRackEnclosure"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/RackEnclosureSlots": {
      "get": {
        "tags": [
          "equipmentRackEnclosureSlot"
        ],
        "summary": "Read a 'equipment.RackEnclosureSlot' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of equipmentRackEnclosureSlots for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/equipmentRackEnclosureSlotList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/RackEnclosureSlots/{Moid}": {
      "get": {
        "tags": [
          "equipmentRackEnclosureSlot"
        ],
        "summary": "Read a 'equipment.RackEnclosureSlot' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentRackEnclosureSlot instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of equipmentRackEnclosureSlot",
            "schema": {
              "$ref": "#/definitions/equipmentRackEnclosureSlot"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "equipmentRackEnclosureSlot"
        ],
        "summary": "Update a 'equipment.RackEnclosureSlot' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentRackEnclosureSlot instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "equipmentRackEnclosureSlot to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentRackEnclosureSlot"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "equipmentRackEnclosureSlot"
        ],
        "summary": "Update a 'equipment.RackEnclosureSlot' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentRackEnclosureSlot instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "equipmentRackEnclosureSlot to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentRackEnclosureSlot"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/SharedIoModules": {
      "get": {
        "tags": [
          "equipmentSharedIoModule"
        ],
        "summary": "Read a 'equipment.SharedIoModule' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of equipmentSharedIoModules for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/equipmentSharedIoModuleList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/SharedIoModules/{Moid}": {
      "get": {
        "tags": [
          "equipmentSharedIoModule"
        ],
        "summary": "Read a 'equipment.SharedIoModule' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentSharedIoModule instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of equipmentSharedIoModule",
            "schema": {
              "$ref": "#/definitions/equipmentSharedIoModule"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "equipmentSharedIoModule"
        ],
        "summary": "Update a 'equipment.SharedIoModule' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentSharedIoModule instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "equipmentSharedIoModule to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentSharedIoModule"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "equipmentSharedIoModule"
        ],
        "summary": "Update a 'equipment.SharedIoModule' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentSharedIoModule instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "equipmentSharedIoModule to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentSharedIoModule"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/SwitchCards": {
      "get": {
        "tags": [
          "equipmentSwitchCard"
        ],
        "summary": "Read a 'equipment.SwitchCard' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of equipmentSwitchCards for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/equipmentSwitchCardList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/SwitchCards/{Moid}": {
      "get": {
        "tags": [
          "equipmentSwitchCard"
        ],
        "summary": "Read a 'equipment.SwitchCard' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentSwitchCard instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of equipmentSwitchCard",
            "schema": {
              "$ref": "#/definitions/equipmentSwitchCard"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "equipmentSwitchCard"
        ],
        "summary": "Update a 'equipment.SwitchCard' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentSwitchCard instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "equipmentSwitchCard to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentSwitchCard"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "equipmentSwitchCard"
        ],
        "summary": "Update a 'equipment.SwitchCard' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentSwitchCard instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "equipmentSwitchCard to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentSwitchCard"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/SystemIoControllers": {
      "get": {
        "tags": [
          "equipmentSystemIoController"
        ],
        "summary": "Read a 'equipment.SystemIoController' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of equipmentSystemIoControllers for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/equipmentSystemIoControllerList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/SystemIoControllers/{Moid}": {
      "get": {
        "tags": [
          "equipmentSystemIoController"
        ],
        "summary": "Read a 'equipment.SystemIoController' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentSystemIoController instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of equipmentSystemIoController",
            "schema": {
              "$ref": "#/definitions/equipmentSystemIoController"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "equipmentSystemIoController"
        ],
        "summary": "Update a 'equipment.SystemIoController' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentSystemIoController instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "equipmentSystemIoController to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentSystemIoController"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "equipmentSystemIoController"
        ],
        "summary": "Update a 'equipment.SystemIoController' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentSystemIoController instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "equipmentSystemIoController to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentSystemIoController"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/Tpms": {
      "get": {
        "tags": [
          "equipmentTpm"
        ],
        "summary": "Read a 'equipment.Tpm' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of equipmentTpms for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/equipmentTpmList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/equipment/Tpms/{Moid}": {
      "get": {
        "tags": [
          "equipmentTpm"
        ],
        "summary": "Read a 'equipment.Tpm' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentTpm instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of equipmentTpm",
            "schema": {
              "$ref": "#/definitions/equipmentTpm"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "equipmentTpm"
        ],
        "summary": "Update a 'equipment.Tpm' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentTpm instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "equipmentTpm to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentTpm"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "equipmentTpm"
        ],
        "summary": "Update a 'equipment.Tpm' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the equipmentTpm instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "equipmentTpm to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/equipmentTpm"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ether/PhysicalPorts": {
      "get": {
        "tags": [
          "etherPhysicalPort"
        ],
        "summary": "Read a 'ether.PhysicalPort' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of etherPhysicalPorts for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/etherPhysicalPortList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ether/PhysicalPorts/{Moid}": {
      "get": {
        "tags": [
          "etherPhysicalPort"
        ],
        "summary": "Read a 'ether.PhysicalPort' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the etherPhysicalPort instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of etherPhysicalPort",
            "schema": {
              "$ref": "#/definitions/etherPhysicalPort"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "etherPhysicalPort"
        ],
        "summary": "Update a 'ether.PhysicalPort' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the etherPhysicalPort instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "etherPhysicalPort to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/etherPhysicalPort"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "etherPhysicalPort"
        ],
        "summary": "Update a 'ether.PhysicalPort' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the etherPhysicalPort instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "etherPhysicalPort to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/etherPhysicalPort"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/externalsite/Authorizations": {
      "post": {
        "tags": [
          "externalsiteAuthorization"
        ],
        "summary": "Create a 'externalsite.Authorization' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "externalsiteAuthorization to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/externalsiteAuthorization"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "externalsiteAuthorization"
        ],
        "summary": "Read a 'externalsite.Authorization' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of externalsiteAuthorizations for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/externalsiteAuthorizationList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/externalsite/Authorizations/{Moid}": {
      "post": {
        "tags": [
          "externalsiteAuthorization"
        ],
        "summary": "Update a 'externalsite.Authorization' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the externalsiteAuthorization instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "externalsiteAuthorization to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/externalsiteAuthorization"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "externalsiteAuthorization"
        ],
        "summary": "Update a 'externalsite.Authorization' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the externalsiteAuthorization instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "externalsiteAuthorization to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/externalsiteAuthorization"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "externalsiteAuthorization"
        ],
        "summary": "Read a 'externalsite.Authorization' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the externalsiteAuthorization instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of externalsiteAuthorization",
            "schema": {
              "$ref": "#/definitions/externalsiteAuthorization"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/fault/Instances": {
      "get": {
        "tags": [
          "faultInstance"
        ],
        "summary": "Read a 'fault.Instance' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of faultInstances for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/faultInstanceList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/fault/Instances/{Moid}": {
      "get": {
        "tags": [
          "faultInstance"
        ],
        "summary": "Read a 'fault.Instance' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the faultInstance instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of faultInstance",
            "schema": {
              "$ref": "#/definitions/faultInstance"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "faultInstance"
        ],
        "summary": "Update a 'fault.Instance' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the faultInstance instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "faultInstance to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/faultInstance"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "faultInstance"
        ],
        "summary": "Update a 'fault.Instance' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the faultInstance instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "faultInstance to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/faultInstance"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/fc/PhysicalPorts": {
      "get": {
        "tags": [
          "fcPhysicalPort"
        ],
        "summary": "Read a 'fc.PhysicalPort' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of fcPhysicalPorts for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/fcPhysicalPortList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/fc/PhysicalPorts/{Moid}": {
      "get": {
        "tags": [
          "fcPhysicalPort"
        ],
        "summary": "Read a 'fc.PhysicalPort' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the fcPhysicalPort instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of fcPhysicalPort",
            "schema": {
              "$ref": "#/definitions/fcPhysicalPort"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "fcPhysicalPort"
        ],
        "summary": "Update a 'fc.PhysicalPort' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the fcPhysicalPort instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "fcPhysicalPort to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/fcPhysicalPort"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "fcPhysicalPort"
        ],
        "summary": "Update a 'fc.PhysicalPort' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the fcPhysicalPort instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "fcPhysicalPort to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/fcPhysicalPort"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/feedback/FeedbackPosts": {
      "post": {
        "tags": [
          "feedbackFeedbackPost"
        ],
        "summary": "Create a 'feedback.FeedbackPost' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "feedbackFeedbackPost to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/feedbackFeedbackPost"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/firmware/Distributables": {
      "get": {
        "tags": [
          "firmwareDistributable"
        ],
        "summary": "Read a 'firmware.Distributable' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of firmwareDistributables for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/firmwareDistributableList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "firmwareDistributable"
        ],
        "summary": "Create a 'firmware.Distributable' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "firmwareDistributable to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/firmwareDistributable"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/firmware/Distributables/{Moid}": {
      "get": {
        "tags": [
          "firmwareDistributable"
        ],
        "summary": "Read a 'firmware.Distributable' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the firmwareDistributable instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of firmwareDistributable",
            "schema": {
              "$ref": "#/definitions/firmwareDistributable"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "firmwareDistributable"
        ],
        "summary": "Update a 'firmware.Distributable' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the firmwareDistributable instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "firmwareDistributable to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/firmwareDistributable"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "firmwareDistributable"
        ],
        "summary": "Update a 'firmware.Distributable' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the firmwareDistributable instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "firmwareDistributable to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/firmwareDistributable"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "firmwareDistributable"
        ],
        "summary": "Delete a 'firmware.Distributable' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the firmwareDistributable instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/firmware/DriverDistributables": {
      "get": {
        "tags": [
          "firmwareDriverDistributable"
        ],
        "summary": "Read a 'firmware.DriverDistributable' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of firmwareDriverDistributables for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/firmwareDriverDistributableList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "firmwareDriverDistributable"
        ],
        "summary": "Create a 'firmware.DriverDistributable' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "firmwareDriverDistributable to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/firmwareDriverDistributable"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/firmware/DriverDistributables/{Moid}": {
      "get": {
        "tags": [
          "firmwareDriverDistributable"
        ],
        "summary": "Read a 'firmware.DriverDistributable' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the firmwareDriverDistributable instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of firmwareDriverDistributable",
            "schema": {
              "$ref": "#/definitions/firmwareDriverDistributable"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "firmwareDriverDistributable"
        ],
        "summary": "Update a 'firmware.DriverDistributable' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the firmwareDriverDistributable instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "firmwareDriverDistributable to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/firmwareDriverDistributable"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "firmwareDriverDistributable"
        ],
        "summary": "Update a 'firmware.DriverDistributable' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the firmwareDriverDistributable instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "firmwareDriverDistributable to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/firmwareDriverDistributable"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "firmwareDriverDistributable"
        ],
        "summary": "Delete a 'firmware.DriverDistributable' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the firmwareDriverDistributable instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/firmware/Eulas": {
      "post": {
        "tags": [
          "firmwareEula"
        ],
        "summary": "Create a 'firmware.Eula' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "firmwareEula to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/firmwareEula"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "firmwareEula"
        ],
        "summary": "Read a 'firmware.Eula' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of firmwareEulas for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/firmwareEulaList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/firmware/Eulas/{Moid}": {
      "get": {
        "tags": [
          "firmwareEula"
        ],
        "summary": "Read a 'firmware.Eula' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the firmwareEula instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of firmwareEula",
            "schema": {
              "$ref": "#/definitions/firmwareEula"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/firmware/RunningFirmwares": {
      "get": {
        "tags": [
          "firmwareRunningFirmware"
        ],
        "summary": "Read a 'firmware.RunningFirmware' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of firmwareRunningFirmwares for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/firmwareRunningFirmwareList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/firmware/RunningFirmwares/{Moid}": {
      "get": {
        "tags": [
          "firmwareRunningFirmware"
        ],
        "summary": "Read a 'firmware.RunningFirmware' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the firmwareRunningFirmware instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of firmwareRunningFirmware",
            "schema": {
              "$ref": "#/definitions/firmwareRunningFirmware"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "firmwareRunningFirmware"
        ],
        "summary": "Update a 'firmware.RunningFirmware' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the firmwareRunningFirmware instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "firmwareRunningFirmware to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/firmwareRunningFirmware"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "firmwareRunningFirmware"
        ],
        "summary": "Update a 'firmware.RunningFirmware' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the firmwareRunningFirmware instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "firmwareRunningFirmware to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/firmwareRunningFirmware"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/firmware/ServerConfigurationUtilityDistributables": {
      "get": {
        "tags": [
          "firmwareServerConfigurationUtilityDistributable"
        ],
        "summary": "Read a 'firmware.ServerConfigurationUtilityDistributable' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of firmwareServerConfigurationUtilityDistributables for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/firmwareServerConfigurationUtilityDistributableList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "firmwareServerConfigurationUtilityDistributable"
        ],
        "summary": "Create a 'firmware.ServerConfigurationUtilityDistributable' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "firmwareServerConfigurationUtilityDistributable to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/firmwareServerConfigurationUtilityDistributable"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/firmware/ServerConfigurationUtilityDistributables/{Moid}": {
      "get": {
        "tags": [
          "firmwareServerConfigurationUtilityDistributable"
        ],
        "summary": "Read a 'firmware.ServerConfigurationUtilityDistributable' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the firmwareServerConfigurationUtilityDistributable instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of firmwareServerConfigurationUtilityDistributable",
            "schema": {
              "$ref": "#/definitions/firmwareServerConfigurationUtilityDistributable"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "firmwareServerConfigurationUtilityDistributable"
        ],
        "summary": "Update a 'firmware.ServerConfigurationUtilityDistributable' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the firmwareServerConfigurationUtilityDistributable instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "firmwareServerConfigurationUtilityDistributable to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/firmwareServerConfigurationUtilityDistributable"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "firmwareServerConfigurationUtilityDistributable"
        ],
        "summary": "Update a 'firmware.ServerConfigurationUtilityDistributable' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the firmwareServerConfigurationUtilityDistributable instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "firmwareServerConfigurationUtilityDistributable to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/firmwareServerConfigurationUtilityDistributable"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "firmwareServerConfigurationUtilityDistributable"
        ],
        "summary": "Delete a 'firmware.ServerConfigurationUtilityDistributable' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the firmwareServerConfigurationUtilityDistributable instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/firmware/Upgrades": {
      "get": {
        "tags": [
          "firmwareUpgrade"
        ],
        "summary": "Read a 'firmware.Upgrade' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of firmwareUpgrades for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/firmwareUpgradeList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "firmwareUpgrade"
        ],
        "summary": "Create a 'firmware.Upgrade' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "firmwareUpgrade to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/firmwareUpgrade"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/firmware/Upgrades/{Moid}": {
      "get": {
        "tags": [
          "firmwareUpgrade"
        ],
        "summary": "Read a 'firmware.Upgrade' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the firmwareUpgrade instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of firmwareUpgrade",
            "schema": {
              "$ref": "#/definitions/firmwareUpgrade"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "firmwareUpgrade"
        ],
        "summary": "Delete a 'firmware.Upgrade' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the firmwareUpgrade instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/firmware/UpgradeStatuses": {
      "get": {
        "tags": [
          "firmwareUpgradeStatus"
        ],
        "summary": "Read a 'firmware.UpgradeStatus' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of firmwareUpgradeStatuses for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/firmwareUpgradeStatusList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/firmware/UpgradeStatuses/{Moid}": {
      "get": {
        "tags": [
          "firmwareUpgradeStatus"
        ],
        "summary": "Read a 'firmware.UpgradeStatus' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the firmwareUpgradeStatus instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of firmwareUpgradeStatus",
            "schema": {
              "$ref": "#/definitions/firmwareUpgradeStatus"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/forecast/Catalogs": {
      "get": {
        "tags": [
          "forecastCatalog"
        ],
        "summary": "Read a 'forecast.Catalog' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of forecastCatalogs for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/forecastCatalogList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/forecast/Catalogs/{Moid}": {
      "get": {
        "tags": [
          "forecastCatalog"
        ],
        "summary": "Read a 'forecast.Catalog' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the forecastCatalog instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of forecastCatalog",
            "schema": {
              "$ref": "#/definitions/forecastCatalog"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/forecast/Definitions": {
      "get": {
        "tags": [
          "forecastDefinition"
        ],
        "summary": "Read a 'forecast.Definition' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of forecastDefinitions for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/forecastDefinitionList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/forecast/Definitions/{Moid}": {
      "get": {
        "tags": [
          "forecastDefinition"
        ],
        "summary": "Read a 'forecast.Definition' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the forecastDefinition instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of forecastDefinition",
            "schema": {
              "$ref": "#/definitions/forecastDefinition"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/forecast/Instances": {
      "get": {
        "tags": [
          "forecastInstance"
        ],
        "summary": "Read a 'forecast.Instance' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of forecastInstances for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/forecastInstanceList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/forecast/Instances/{Moid}": {
      "get": {
        "tags": [
          "forecastInstance"
        ],
        "summary": "Read a 'forecast.Instance' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the forecastInstance instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of forecastInstance",
            "schema": {
              "$ref": "#/definitions/forecastInstance"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/graphics/Cards": {
      "get": {
        "tags": [
          "graphicsCard"
        ],
        "summary": "Read a 'graphics.Card' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of graphicsCards for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/graphicsCardList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/graphics/Cards/{Moid}": {
      "get": {
        "tags": [
          "graphicsCard"
        ],
        "summary": "Read a 'graphics.Card' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the graphicsCard instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of graphicsCard",
            "schema": {
              "$ref": "#/definitions/graphicsCard"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "graphicsCard"
        ],
        "summary": "Update a 'graphics.Card' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the graphicsCard instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "graphicsCard to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/graphicsCard"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "graphicsCard"
        ],
        "summary": "Update a 'graphics.Card' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the graphicsCard instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "graphicsCard to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/graphicsCard"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/graphics/Controllers": {
      "get": {
        "tags": [
          "graphicsController"
        ],
        "summary": "Read a 'graphics.Controller' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of graphicsControllers for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/graphicsControllerList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/graphics/Controllers/{Moid}": {
      "get": {
        "tags": [
          "graphicsController"
        ],
        "summary": "Read a 'graphics.Controller' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the graphicsController instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of graphicsController",
            "schema": {
              "$ref": "#/definitions/graphicsController"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "graphicsController"
        ],
        "summary": "Update a 'graphics.Controller' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the graphicsController instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "graphicsController to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/graphicsController"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "graphicsController"
        ],
        "summary": "Update a 'graphics.Controller' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the graphicsController instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "graphicsController to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/graphicsController"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hcl/CompatibilityStatuses": {
      "post": {
        "tags": [
          "hclCompatibilityStatus"
        ],
        "summary": "Create a 'hcl.CompatibilityStatus' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "hclCompatibilityStatus to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hclCompatibilityStatus"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hcl/DriverImages": {
      "get": {
        "tags": [
          "hclDriverImage"
        ],
        "summary": "Read a 'hcl.DriverImage' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hclDriverImages for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hclDriverImageList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hcl/DriverImages/{Moid}": {
      "get": {
        "tags": [
          "hclDriverImage"
        ],
        "summary": "Read a 'hcl.DriverImage' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hclDriverImage instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hclDriverImage",
            "schema": {
              "$ref": "#/definitions/hclDriverImage"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hcl/ExemptedCatalogs": {
      "get": {
        "tags": [
          "hclExemptedCatalog"
        ],
        "summary": "Read a 'hcl.ExemptedCatalog' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hclExemptedCatalogs for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hclExemptedCatalogList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hcl/ExemptedCatalogs/{Moid}": {
      "get": {
        "tags": [
          "hclExemptedCatalog"
        ],
        "summary": "Read a 'hcl.ExemptedCatalog' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hclExemptedCatalog instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hclExemptedCatalog",
            "schema": {
              "$ref": "#/definitions/hclExemptedCatalog"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hcl/HyperflexSoftwareCompatibilityInfos": {
      "get": {
        "tags": [
          "hclHyperflexSoftwareCompatibilityInfo"
        ],
        "summary": "Read a 'hcl.HyperflexSoftwareCompatibilityInfo' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hclHyperflexSoftwareCompatibilityInfos for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hclHyperflexSoftwareCompatibilityInfoList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hclHyperflexSoftwareCompatibilityInfo"
        ],
        "summary": "Create a 'hcl.HyperflexSoftwareCompatibilityInfo' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "hclHyperflexSoftwareCompatibilityInfo to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hclHyperflexSoftwareCompatibilityInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hcl/HyperflexSoftwareCompatibilityInfos/{Moid}": {
      "get": {
        "tags": [
          "hclHyperflexSoftwareCompatibilityInfo"
        ],
        "summary": "Read a 'hcl.HyperflexSoftwareCompatibilityInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hclHyperflexSoftwareCompatibilityInfo instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hclHyperflexSoftwareCompatibilityInfo",
            "schema": {
              "$ref": "#/definitions/hclHyperflexSoftwareCompatibilityInfo"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hclHyperflexSoftwareCompatibilityInfo"
        ],
        "summary": "Update a 'hcl.HyperflexSoftwareCompatibilityInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hclHyperflexSoftwareCompatibilityInfo instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hclHyperflexSoftwareCompatibilityInfo to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hclHyperflexSoftwareCompatibilityInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "hclHyperflexSoftwareCompatibilityInfo"
        ],
        "summary": "Update a 'hcl.HyperflexSoftwareCompatibilityInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hclHyperflexSoftwareCompatibilityInfo instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hclHyperflexSoftwareCompatibilityInfo to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hclHyperflexSoftwareCompatibilityInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "hclHyperflexSoftwareCompatibilityInfo"
        ],
        "summary": "Delete a 'hcl.HyperflexSoftwareCompatibilityInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hclHyperflexSoftwareCompatibilityInfo instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hcl/OperatingSystems": {
      "get": {
        "tags": [
          "hclOperatingSystem"
        ],
        "summary": "Read a 'hcl.OperatingSystem' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hclOperatingSystems for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hclOperatingSystemList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hcl/OperatingSystems/{Moid}": {
      "get": {
        "tags": [
          "hclOperatingSystem"
        ],
        "summary": "Read a 'hcl.OperatingSystem' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hclOperatingSystem instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hclOperatingSystem",
            "schema": {
              "$ref": "#/definitions/hclOperatingSystem"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hcl/OperatingSystemVendors": {
      "get": {
        "tags": [
          "hclOperatingSystemVendor"
        ],
        "summary": "Read a 'hcl.OperatingSystemVendor' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hclOperatingSystemVendors for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hclOperatingSystemVendorList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hcl/OperatingSystemVendors/{Moid}": {
      "get": {
        "tags": [
          "hclOperatingSystemVendor"
        ],
        "summary": "Read a 'hcl.OperatingSystemVendor' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hclOperatingSystemVendor instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hclOperatingSystemVendor",
            "schema": {
              "$ref": "#/definitions/hclOperatingSystemVendor"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hcl/ServiceStatuses": {
      "get": {
        "tags": [
          "hclServiceStatus"
        ],
        "summary": "Read a 'hcl.ServiceStatus' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hclServiceStatuses for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hclServiceStatusList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hcl/ServiceStatuses/{Moid}": {
      "get": {
        "tags": [
          "hclServiceStatus"
        ],
        "summary": "Read a 'hcl.ServiceStatus' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hclServiceStatus instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hclServiceStatus",
            "schema": {
              "$ref": "#/definitions/hclServiceStatus"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hcl/SupportedDriverNames": {
      "post": {
        "tags": [
          "hclSupportedDriverName"
        ],
        "summary": "Create a 'hcl.SupportedDriverName' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "hclSupportedDriverName to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hclSupportedDriverName"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/Alarms": {
      "get": {
        "tags": [
          "hyperflexAlarm"
        ],
        "summary": "Read a 'hyperflex.Alarm' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexAlarms for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexAlarmList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/Alarms/{Moid}": {
      "get": {
        "tags": [
          "hyperflexAlarm"
        ],
        "summary": "Read a 'hyperflex.Alarm' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexAlarm instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexAlarm",
            "schema": {
              "$ref": "#/definitions/hyperflexAlarm"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/AppCatalogs": {
      "get": {
        "tags": [
          "hyperflexAppCatalog"
        ],
        "summary": "Read a 'hyperflex.AppCatalog' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexAppCatalogs for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexAppCatalogList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexAppCatalog"
        ],
        "summary": "Create a 'hyperflex.AppCatalog' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexAppCatalog to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexAppCatalog"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/AppCatalogs/{Moid}": {
      "get": {
        "tags": [
          "hyperflexAppCatalog"
        ],
        "summary": "Read a 'hyperflex.AppCatalog' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexAppCatalog instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexAppCatalog",
            "schema": {
              "$ref": "#/definitions/hyperflexAppCatalog"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexAppCatalog"
        ],
        "summary": "Update a 'hyperflex.AppCatalog' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexAppCatalog instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexAppCatalog to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexAppCatalog"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "hyperflexAppCatalog"
        ],
        "summary": "Update a 'hyperflex.AppCatalog' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexAppCatalog instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexAppCatalog to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexAppCatalog"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "hyperflexAppCatalog"
        ],
        "summary": "Delete a 'hyperflex.AppCatalog' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexAppCatalog instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/AutoSupportPolicies": {
      "get": {
        "tags": [
          "hyperflexAutoSupportPolicy"
        ],
        "summary": "Read a 'hyperflex.AutoSupportPolicy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexAutoSupportPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexAutoSupportPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexAutoSupportPolicy"
        ],
        "summary": "Create a 'hyperflex.AutoSupportPolicy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexAutoSupportPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexAutoSupportPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/AutoSupportPolicies/{Moid}": {
      "get": {
        "tags": [
          "hyperflexAutoSupportPolicy"
        ],
        "summary": "Read a 'hyperflex.AutoSupportPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexAutoSupportPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexAutoSupportPolicy",
            "schema": {
              "$ref": "#/definitions/hyperflexAutoSupportPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexAutoSupportPolicy"
        ],
        "summary": "Update a 'hyperflex.AutoSupportPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexAutoSupportPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexAutoSupportPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexAutoSupportPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "hyperflexAutoSupportPolicy"
        ],
        "summary": "Update a 'hyperflex.AutoSupportPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexAutoSupportPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexAutoSupportPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexAutoSupportPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "hyperflexAutoSupportPolicy"
        ],
        "summary": "Delete a 'hyperflex.AutoSupportPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexAutoSupportPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/CapabilityInfos": {
      "get": {
        "tags": [
          "hyperflexCapabilityInfo"
        ],
        "summary": "Read a 'hyperflex.CapabilityInfo' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexCapabilityInfos for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexCapabilityInfoList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexCapabilityInfo"
        ],
        "summary": "Create a 'hyperflex.CapabilityInfo' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexCapabilityInfo to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexCapabilityInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/CapabilityInfos/{Moid}": {
      "get": {
        "tags": [
          "hyperflexCapabilityInfo"
        ],
        "summary": "Read a 'hyperflex.CapabilityInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexCapabilityInfo instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexCapabilityInfo",
            "schema": {
              "$ref": "#/definitions/hyperflexCapabilityInfo"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexCapabilityInfo"
        ],
        "summary": "Update a 'hyperflex.CapabilityInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexCapabilityInfo instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexCapabilityInfo to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexCapabilityInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "hyperflexCapabilityInfo"
        ],
        "summary": "Update a 'hyperflex.CapabilityInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexCapabilityInfo instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexCapabilityInfo to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexCapabilityInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "hyperflexCapabilityInfo"
        ],
        "summary": "Delete a 'hyperflex.CapabilityInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexCapabilityInfo instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/Clusters": {
      "get": {
        "tags": [
          "hyperflexCluster"
        ],
        "summary": "Read a 'hyperflex.Cluster' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexClusters for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexClusterList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/Clusters/{Moid}": {
      "get": {
        "tags": [
          "hyperflexCluster"
        ],
        "summary": "Read a 'hyperflex.Cluster' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexCluster instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexCluster",
            "schema": {
              "$ref": "#/definitions/hyperflexCluster"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexCluster"
        ],
        "summary": "Update a 'hyperflex.Cluster' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexCluster instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexCluster to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexCluster"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "hyperflexCluster"
        ],
        "summary": "Update a 'hyperflex.Cluster' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexCluster instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexCluster to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexCluster"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/ClusterNetworkPolicies": {
      "get": {
        "tags": [
          "hyperflexClusterNetworkPolicy"
        ],
        "summary": "Read a 'hyperflex.ClusterNetworkPolicy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexClusterNetworkPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexClusterNetworkPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexClusterNetworkPolicy"
        ],
        "summary": "Create a 'hyperflex.ClusterNetworkPolicy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexClusterNetworkPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexClusterNetworkPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/ClusterNetworkPolicies/{Moid}": {
      "get": {
        "tags": [
          "hyperflexClusterNetworkPolicy"
        ],
        "summary": "Read a 'hyperflex.ClusterNetworkPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexClusterNetworkPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexClusterNetworkPolicy",
            "schema": {
              "$ref": "#/definitions/hyperflexClusterNetworkPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexClusterNetworkPolicy"
        ],
        "summary": "Update a 'hyperflex.ClusterNetworkPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexClusterNetworkPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexClusterNetworkPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexClusterNetworkPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "hyperflexClusterNetworkPolicy"
        ],
        "summary": "Update a 'hyperflex.ClusterNetworkPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexClusterNetworkPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexClusterNetworkPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexClusterNetworkPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "hyperflexClusterNetworkPolicy"
        ],
        "summary": "Delete a 'hyperflex.ClusterNetworkPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexClusterNetworkPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/ClusterProfiles": {
      "get": {
        "tags": [
          "hyperflexClusterProfile"
        ],
        "summary": "Read a 'hyperflex.ClusterProfile' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexClusterProfiles for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexClusterProfileList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexClusterProfile"
        ],
        "summary": "Create a 'hyperflex.ClusterProfile' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexClusterProfile to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexClusterProfile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/ClusterProfiles/{Moid}": {
      "get": {
        "tags": [
          "hyperflexClusterProfile"
        ],
        "summary": "Read a 'hyperflex.ClusterProfile' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexClusterProfile instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexClusterProfile",
            "schema": {
              "$ref": "#/definitions/hyperflexClusterProfile"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexClusterProfile"
        ],
        "summary": "Update a 'hyperflex.ClusterProfile' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexClusterProfile instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexClusterProfile to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexClusterProfile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "hyperflexClusterProfile"
        ],
        "summary": "Update a 'hyperflex.ClusterProfile' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexClusterProfile instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexClusterProfile to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexClusterProfile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "hyperflexClusterProfile"
        ],
        "summary": "Delete a 'hyperflex.ClusterProfile' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexClusterProfile instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/ClusterStoragePolicies": {
      "get": {
        "tags": [
          "hyperflexClusterStoragePolicy"
        ],
        "summary": "Read a 'hyperflex.ClusterStoragePolicy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexClusterStoragePolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexClusterStoragePolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexClusterStoragePolicy"
        ],
        "summary": "Create a 'hyperflex.ClusterStoragePolicy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexClusterStoragePolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexClusterStoragePolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/ClusterStoragePolicies/{Moid}": {
      "get": {
        "tags": [
          "hyperflexClusterStoragePolicy"
        ],
        "summary": "Read a 'hyperflex.ClusterStoragePolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexClusterStoragePolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexClusterStoragePolicy",
            "schema": {
              "$ref": "#/definitions/hyperflexClusterStoragePolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexClusterStoragePolicy"
        ],
        "summary": "Update a 'hyperflex.ClusterStoragePolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexClusterStoragePolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexClusterStoragePolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexClusterStoragePolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "hyperflexClusterStoragePolicy"
        ],
        "summary": "Update a 'hyperflex.ClusterStoragePolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexClusterStoragePolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexClusterStoragePolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexClusterStoragePolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "hyperflexClusterStoragePolicy"
        ],
        "summary": "Delete a 'hyperflex.ClusterStoragePolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexClusterStoragePolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/ConfigResults": {
      "get": {
        "tags": [
          "hyperflexConfigResult"
        ],
        "summary": "Read a 'hyperflex.ConfigResult' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexConfigResults for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexConfigResultList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/ConfigResults/{Moid}": {
      "get": {
        "tags": [
          "hyperflexConfigResult"
        ],
        "summary": "Read a 'hyperflex.ConfigResult' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexConfigResult instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexConfigResult",
            "schema": {
              "$ref": "#/definitions/hyperflexConfigResult"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/ConfigResultEntries": {
      "get": {
        "tags": [
          "hyperflexConfigResultEntry"
        ],
        "summary": "Read a 'hyperflex.ConfigResultEntry' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexConfigResultEntries for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexConfigResultEntryList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/ConfigResultEntries/{Moid}": {
      "get": {
        "tags": [
          "hyperflexConfigResultEntry"
        ],
        "summary": "Read a 'hyperflex.ConfigResultEntry' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexConfigResultEntry instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexConfigResultEntry",
            "schema": {
              "$ref": "#/definitions/hyperflexConfigResultEntry"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/ExtFcStoragePolicies": {
      "get": {
        "tags": [
          "hyperflexExtFcStoragePolicy"
        ],
        "summary": "Read a 'hyperflex.ExtFcStoragePolicy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexExtFcStoragePolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexExtFcStoragePolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexExtFcStoragePolicy"
        ],
        "summary": "Create a 'hyperflex.ExtFcStoragePolicy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexExtFcStoragePolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexExtFcStoragePolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/ExtFcStoragePolicies/{Moid}": {
      "get": {
        "tags": [
          "hyperflexExtFcStoragePolicy"
        ],
        "summary": "Read a 'hyperflex.ExtFcStoragePolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexExtFcStoragePolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexExtFcStoragePolicy",
            "schema": {
              "$ref": "#/definitions/hyperflexExtFcStoragePolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexExtFcStoragePolicy"
        ],
        "summary": "Update a 'hyperflex.ExtFcStoragePolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexExtFcStoragePolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexExtFcStoragePolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexExtFcStoragePolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "hyperflexExtFcStoragePolicy"
        ],
        "summary": "Update a 'hyperflex.ExtFcStoragePolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexExtFcStoragePolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexExtFcStoragePolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexExtFcStoragePolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "hyperflexExtFcStoragePolicy"
        ],
        "summary": "Delete a 'hyperflex.ExtFcStoragePolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexExtFcStoragePolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/ExtIscsiStoragePolicies": {
      "get": {
        "tags": [
          "hyperflexExtIscsiStoragePolicy"
        ],
        "summary": "Read a 'hyperflex.ExtIscsiStoragePolicy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexExtIscsiStoragePolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexExtIscsiStoragePolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexExtIscsiStoragePolicy"
        ],
        "summary": "Create a 'hyperflex.ExtIscsiStoragePolicy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexExtIscsiStoragePolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexExtIscsiStoragePolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/ExtIscsiStoragePolicies/{Moid}": {
      "get": {
        "tags": [
          "hyperflexExtIscsiStoragePolicy"
        ],
        "summary": "Read a 'hyperflex.ExtIscsiStoragePolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexExtIscsiStoragePolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexExtIscsiStoragePolicy",
            "schema": {
              "$ref": "#/definitions/hyperflexExtIscsiStoragePolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexExtIscsiStoragePolicy"
        ],
        "summary": "Update a 'hyperflex.ExtIscsiStoragePolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexExtIscsiStoragePolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexExtIscsiStoragePolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexExtIscsiStoragePolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "hyperflexExtIscsiStoragePolicy"
        ],
        "summary": "Update a 'hyperflex.ExtIscsiStoragePolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexExtIscsiStoragePolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexExtIscsiStoragePolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexExtIscsiStoragePolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "hyperflexExtIscsiStoragePolicy"
        ],
        "summary": "Delete a 'hyperflex.ExtIscsiStoragePolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexExtIscsiStoragePolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/FeatureLimitExternals": {
      "get": {
        "tags": [
          "hyperflexFeatureLimitExternal"
        ],
        "summary": "Read a 'hyperflex.FeatureLimitExternal' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexFeatureLimitExternals for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexFeatureLimitExternalList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexFeatureLimitExternal"
        ],
        "summary": "Create a 'hyperflex.FeatureLimitExternal' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexFeatureLimitExternal to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexFeatureLimitExternal"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/FeatureLimitExternals/{Moid}": {
      "get": {
        "tags": [
          "hyperflexFeatureLimitExternal"
        ],
        "summary": "Read a 'hyperflex.FeatureLimitExternal' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexFeatureLimitExternal instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexFeatureLimitExternal",
            "schema": {
              "$ref": "#/definitions/hyperflexFeatureLimitExternal"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexFeatureLimitExternal"
        ],
        "summary": "Update a 'hyperflex.FeatureLimitExternal' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexFeatureLimitExternal instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexFeatureLimitExternal to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexFeatureLimitExternal"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "hyperflexFeatureLimitExternal"
        ],
        "summary": "Update a 'hyperflex.FeatureLimitExternal' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexFeatureLimitExternal instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexFeatureLimitExternal to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexFeatureLimitExternal"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "hyperflexFeatureLimitExternal"
        ],
        "summary": "Delete a 'hyperflex.FeatureLimitExternal' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexFeatureLimitExternal instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/FeatureLimitInternals": {
      "get": {
        "tags": [
          "hyperflexFeatureLimitInternal"
        ],
        "summary": "Read a 'hyperflex.FeatureLimitInternal' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexFeatureLimitInternals for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexFeatureLimitInternalList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexFeatureLimitInternal"
        ],
        "summary": "Create a 'hyperflex.FeatureLimitInternal' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexFeatureLimitInternal to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexFeatureLimitInternal"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/FeatureLimitInternals/{Moid}": {
      "get": {
        "tags": [
          "hyperflexFeatureLimitInternal"
        ],
        "summary": "Read a 'hyperflex.FeatureLimitInternal' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexFeatureLimitInternal instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexFeatureLimitInternal",
            "schema": {
              "$ref": "#/definitions/hyperflexFeatureLimitInternal"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexFeatureLimitInternal"
        ],
        "summary": "Update a 'hyperflex.FeatureLimitInternal' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexFeatureLimitInternal instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexFeatureLimitInternal to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexFeatureLimitInternal"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "hyperflexFeatureLimitInternal"
        ],
        "summary": "Update a 'hyperflex.FeatureLimitInternal' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexFeatureLimitInternal instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexFeatureLimitInternal to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexFeatureLimitInternal"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "hyperflexFeatureLimitInternal"
        ],
        "summary": "Delete a 'hyperflex.FeatureLimitInternal' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexFeatureLimitInternal instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/Healths": {
      "get": {
        "tags": [
          "hyperflexHealth"
        ],
        "summary": "Read a 'hyperflex.Health' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexHealths for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexHealthList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/Healths/{Moid}": {
      "get": {
        "tags": [
          "hyperflexHealth"
        ],
        "summary": "Read a 'hyperflex.Health' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexHealth instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexHealth",
            "schema": {
              "$ref": "#/definitions/hyperflexHealth"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/HxdpVersions": {
      "get": {
        "tags": [
          "hyperflexHxdpVersion"
        ],
        "summary": "Read a 'hyperflex.HxdpVersion' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexHxdpVersions for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexHxdpVersionList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexHxdpVersion"
        ],
        "summary": "Create a 'hyperflex.HxdpVersion' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexHxdpVersion to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexHxdpVersion"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/HxdpVersions/{Moid}": {
      "get": {
        "tags": [
          "hyperflexHxdpVersion"
        ],
        "summary": "Read a 'hyperflex.HxdpVersion' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexHxdpVersion instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexHxdpVersion",
            "schema": {
              "$ref": "#/definitions/hyperflexHxdpVersion"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexHxdpVersion"
        ],
        "summary": "Update a 'hyperflex.HxdpVersion' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexHxdpVersion instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexHxdpVersion to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexHxdpVersion"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "hyperflexHxdpVersion"
        ],
        "summary": "Update a 'hyperflex.HxdpVersion' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexHxdpVersion instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexHxdpVersion to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexHxdpVersion"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "hyperflexHxdpVersion"
        ],
        "summary": "Delete a 'hyperflex.HxdpVersion' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexHxdpVersion instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/LocalCredentialPolicies": {
      "get": {
        "tags": [
          "hyperflexLocalCredentialPolicy"
        ],
        "summary": "Read a 'hyperflex.LocalCredentialPolicy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexLocalCredentialPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexLocalCredentialPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexLocalCredentialPolicy"
        ],
        "summary": "Create a 'hyperflex.LocalCredentialPolicy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexLocalCredentialPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexLocalCredentialPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/LocalCredentialPolicies/{Moid}": {
      "get": {
        "tags": [
          "hyperflexLocalCredentialPolicy"
        ],
        "summary": "Read a 'hyperflex.LocalCredentialPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexLocalCredentialPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexLocalCredentialPolicy",
            "schema": {
              "$ref": "#/definitions/hyperflexLocalCredentialPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexLocalCredentialPolicy"
        ],
        "summary": "Update a 'hyperflex.LocalCredentialPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexLocalCredentialPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexLocalCredentialPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexLocalCredentialPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "hyperflexLocalCredentialPolicy"
        ],
        "summary": "Update a 'hyperflex.LocalCredentialPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexLocalCredentialPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexLocalCredentialPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexLocalCredentialPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "hyperflexLocalCredentialPolicy"
        ],
        "summary": "Delete a 'hyperflex.LocalCredentialPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexLocalCredentialPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/Nodes": {
      "get": {
        "tags": [
          "hyperflexNode"
        ],
        "summary": "Read a 'hyperflex.Node' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexNodes for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexNodeList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/Nodes/{Moid}": {
      "get": {
        "tags": [
          "hyperflexNode"
        ],
        "summary": "Read a 'hyperflex.Node' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexNode instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexNode",
            "schema": {
              "$ref": "#/definitions/hyperflexNode"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/NodeConfigPolicies": {
      "get": {
        "tags": [
          "hyperflexNodeConfigPolicy"
        ],
        "summary": "Read a 'hyperflex.NodeConfigPolicy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexNodeConfigPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexNodeConfigPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexNodeConfigPolicy"
        ],
        "summary": "Create a 'hyperflex.NodeConfigPolicy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexNodeConfigPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexNodeConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/NodeConfigPolicies/{Moid}": {
      "get": {
        "tags": [
          "hyperflexNodeConfigPolicy"
        ],
        "summary": "Read a 'hyperflex.NodeConfigPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexNodeConfigPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexNodeConfigPolicy",
            "schema": {
              "$ref": "#/definitions/hyperflexNodeConfigPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexNodeConfigPolicy"
        ],
        "summary": "Update a 'hyperflex.NodeConfigPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexNodeConfigPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexNodeConfigPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexNodeConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "hyperflexNodeConfigPolicy"
        ],
        "summary": "Update a 'hyperflex.NodeConfigPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexNodeConfigPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexNodeConfigPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexNodeConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "hyperflexNodeConfigPolicy"
        ],
        "summary": "Delete a 'hyperflex.NodeConfigPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexNodeConfigPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/NodeProfiles": {
      "get": {
        "tags": [
          "hyperflexNodeProfile"
        ],
        "summary": "Read a 'hyperflex.NodeProfile' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexNodeProfiles for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexNodeProfileList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexNodeProfile"
        ],
        "summary": "Create a 'hyperflex.NodeProfile' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexNodeProfile to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexNodeProfile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/NodeProfiles/{Moid}": {
      "get": {
        "tags": [
          "hyperflexNodeProfile"
        ],
        "summary": "Read a 'hyperflex.NodeProfile' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexNodeProfile instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexNodeProfile",
            "schema": {
              "$ref": "#/definitions/hyperflexNodeProfile"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexNodeProfile"
        ],
        "summary": "Update a 'hyperflex.NodeProfile' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexNodeProfile instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexNodeProfile to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexNodeProfile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "hyperflexNodeProfile"
        ],
        "summary": "Update a 'hyperflex.NodeProfile' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexNodeProfile instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexNodeProfile to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexNodeProfile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "hyperflexNodeProfile"
        ],
        "summary": "Delete a 'hyperflex.NodeProfile' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexNodeProfile instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/ProxySettingPolicies": {
      "get": {
        "tags": [
          "hyperflexProxySettingPolicy"
        ],
        "summary": "Read a 'hyperflex.ProxySettingPolicy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexProxySettingPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexProxySettingPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexProxySettingPolicy"
        ],
        "summary": "Create a 'hyperflex.ProxySettingPolicy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexProxySettingPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexProxySettingPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/ProxySettingPolicies/{Moid}": {
      "get": {
        "tags": [
          "hyperflexProxySettingPolicy"
        ],
        "summary": "Read a 'hyperflex.ProxySettingPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexProxySettingPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexProxySettingPolicy",
            "schema": {
              "$ref": "#/definitions/hyperflexProxySettingPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexProxySettingPolicy"
        ],
        "summary": "Update a 'hyperflex.ProxySettingPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexProxySettingPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexProxySettingPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexProxySettingPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "hyperflexProxySettingPolicy"
        ],
        "summary": "Update a 'hyperflex.ProxySettingPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexProxySettingPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexProxySettingPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexProxySettingPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "hyperflexProxySettingPolicy"
        ],
        "summary": "Delete a 'hyperflex.ProxySettingPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexProxySettingPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/ServerFirmwareVersions": {
      "get": {
        "tags": [
          "hyperflexServerFirmwareVersion"
        ],
        "summary": "Read a 'hyperflex.ServerFirmwareVersion' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexServerFirmwareVersions for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexServerFirmwareVersionList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexServerFirmwareVersion"
        ],
        "summary": "Create a 'hyperflex.ServerFirmwareVersion' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexServerFirmwareVersion to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexServerFirmwareVersion"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/ServerFirmwareVersions/{Moid}": {
      "get": {
        "tags": [
          "hyperflexServerFirmwareVersion"
        ],
        "summary": "Read a 'hyperflex.ServerFirmwareVersion' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexServerFirmwareVersion instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexServerFirmwareVersion",
            "schema": {
              "$ref": "#/definitions/hyperflexServerFirmwareVersion"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexServerFirmwareVersion"
        ],
        "summary": "Update a 'hyperflex.ServerFirmwareVersion' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexServerFirmwareVersion instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexServerFirmwareVersion to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexServerFirmwareVersion"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "hyperflexServerFirmwareVersion"
        ],
        "summary": "Update a 'hyperflex.ServerFirmwareVersion' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexServerFirmwareVersion instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexServerFirmwareVersion to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexServerFirmwareVersion"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "hyperflexServerFirmwareVersion"
        ],
        "summary": "Delete a 'hyperflex.ServerFirmwareVersion' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexServerFirmwareVersion instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/ServerModels": {
      "get": {
        "tags": [
          "hyperflexServerModel"
        ],
        "summary": "Read a 'hyperflex.ServerModel' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexServerModels for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexServerModelList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexServerModel"
        ],
        "summary": "Create a 'hyperflex.ServerModel' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexServerModel to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexServerModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/ServerModels/{Moid}": {
      "get": {
        "tags": [
          "hyperflexServerModel"
        ],
        "summary": "Read a 'hyperflex.ServerModel' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexServerModel instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexServerModel",
            "schema": {
              "$ref": "#/definitions/hyperflexServerModel"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexServerModel"
        ],
        "summary": "Update a 'hyperflex.ServerModel' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexServerModel instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexServerModel to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexServerModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "hyperflexServerModel"
        ],
        "summary": "Update a 'hyperflex.ServerModel' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexServerModel instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexServerModel to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexServerModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "hyperflexServerModel"
        ],
        "summary": "Delete a 'hyperflex.ServerModel' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexServerModel instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/SoftwareVersionPolicies": {
      "get": {
        "tags": [
          "hyperflexSoftwareVersionPolicy"
        ],
        "summary": "Read a 'hyperflex.SoftwareVersionPolicy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexSoftwareVersionPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexSoftwareVersionPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexSoftwareVersionPolicy"
        ],
        "summary": "Create a 'hyperflex.SoftwareVersionPolicy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexSoftwareVersionPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexSoftwareVersionPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/SoftwareVersionPolicies/{Moid}": {
      "get": {
        "tags": [
          "hyperflexSoftwareVersionPolicy"
        ],
        "summary": "Read a 'hyperflex.SoftwareVersionPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexSoftwareVersionPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexSoftwareVersionPolicy",
            "schema": {
              "$ref": "#/definitions/hyperflexSoftwareVersionPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexSoftwareVersionPolicy"
        ],
        "summary": "Update a 'hyperflex.SoftwareVersionPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexSoftwareVersionPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexSoftwareVersionPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexSoftwareVersionPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "hyperflexSoftwareVersionPolicy"
        ],
        "summary": "Update a 'hyperflex.SoftwareVersionPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexSoftwareVersionPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexSoftwareVersionPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexSoftwareVersionPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "hyperflexSoftwareVersionPolicy"
        ],
        "summary": "Delete a 'hyperflex.SoftwareVersionPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexSoftwareVersionPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/SysConfigPolicies": {
      "get": {
        "tags": [
          "hyperflexSysConfigPolicy"
        ],
        "summary": "Read a 'hyperflex.SysConfigPolicy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexSysConfigPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexSysConfigPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexSysConfigPolicy"
        ],
        "summary": "Create a 'hyperflex.SysConfigPolicy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexSysConfigPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexSysConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/SysConfigPolicies/{Moid}": {
      "get": {
        "tags": [
          "hyperflexSysConfigPolicy"
        ],
        "summary": "Read a 'hyperflex.SysConfigPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexSysConfigPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexSysConfigPolicy",
            "schema": {
              "$ref": "#/definitions/hyperflexSysConfigPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexSysConfigPolicy"
        ],
        "summary": "Update a 'hyperflex.SysConfigPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexSysConfigPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexSysConfigPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexSysConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "hyperflexSysConfigPolicy"
        ],
        "summary": "Update a 'hyperflex.SysConfigPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexSysConfigPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexSysConfigPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexSysConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "hyperflexSysConfigPolicy"
        ],
        "summary": "Delete a 'hyperflex.SysConfigPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexSysConfigPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/UcsmConfigPolicies": {
      "get": {
        "tags": [
          "hyperflexUcsmConfigPolicy"
        ],
        "summary": "Read a 'hyperflex.UcsmConfigPolicy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexUcsmConfigPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexUcsmConfigPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexUcsmConfigPolicy"
        ],
        "summary": "Create a 'hyperflex.UcsmConfigPolicy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexUcsmConfigPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexUcsmConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/UcsmConfigPolicies/{Moid}": {
      "get": {
        "tags": [
          "hyperflexUcsmConfigPolicy"
        ],
        "summary": "Read a 'hyperflex.UcsmConfigPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexUcsmConfigPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexUcsmConfigPolicy",
            "schema": {
              "$ref": "#/definitions/hyperflexUcsmConfigPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexUcsmConfigPolicy"
        ],
        "summary": "Update a 'hyperflex.UcsmConfigPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexUcsmConfigPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexUcsmConfigPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexUcsmConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "hyperflexUcsmConfigPolicy"
        ],
        "summary": "Update a 'hyperflex.UcsmConfigPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexUcsmConfigPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexUcsmConfigPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexUcsmConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "hyperflexUcsmConfigPolicy"
        ],
        "summary": "Delete a 'hyperflex.UcsmConfigPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexUcsmConfigPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/VcenterConfigPolicies": {
      "get": {
        "tags": [
          "hyperflexVcenterConfigPolicy"
        ],
        "summary": "Read a 'hyperflex.VcenterConfigPolicy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of hyperflexVcenterConfigPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/hyperflexVcenterConfigPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexVcenterConfigPolicy"
        ],
        "summary": "Create a 'hyperflex.VcenterConfigPolicy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexVcenterConfigPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexVcenterConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hyperflex/VcenterConfigPolicies/{Moid}": {
      "get": {
        "tags": [
          "hyperflexVcenterConfigPolicy"
        ],
        "summary": "Read a 'hyperflex.VcenterConfigPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexVcenterConfigPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of hyperflexVcenterConfigPolicy",
            "schema": {
              "$ref": "#/definitions/hyperflexVcenterConfigPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "hyperflexVcenterConfigPolicy"
        ],
        "summary": "Update a 'hyperflex.VcenterConfigPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexVcenterConfigPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexVcenterConfigPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexVcenterConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "hyperflexVcenterConfigPolicy"
        ],
        "summary": "Update a 'hyperflex.VcenterConfigPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexVcenterConfigPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "hyperflexVcenterConfigPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hyperflexVcenterConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "hyperflexVcenterConfigPolicy"
        ],
        "summary": "Delete a 'hyperflex.VcenterConfigPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the hyperflexVcenterConfigPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iaas/ConnectorPacks": {
      "get": {
        "tags": [
          "iaasConnectorPack"
        ],
        "summary": "Read a 'iaas.ConnectorPack' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iaasConnectorPacks for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iaasConnectorPackList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iaas/ConnectorPacks/{Moid}": {
      "get": {
        "tags": [
          "iaasConnectorPack"
        ],
        "summary": "Read a 'iaas.ConnectorPack' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iaasConnectorPack instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iaasConnectorPack",
            "schema": {
              "$ref": "#/definitions/iaasConnectorPack"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iaas/DeviceStatuses": {
      "get": {
        "tags": [
          "iaasDeviceStatus"
        ],
        "summary": "Read a 'iaas.DeviceStatus' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iaasDeviceStatuses for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iaasDeviceStatusList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iaas/DeviceStatuses/{Moid}": {
      "get": {
        "tags": [
          "iaasDeviceStatus"
        ],
        "summary": "Read a 'iaas.DeviceStatus' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iaasDeviceStatus instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iaasDeviceStatus",
            "schema": {
              "$ref": "#/definitions/iaasDeviceStatus"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iaas/LicenseInfos": {
      "get": {
        "tags": [
          "iaasLicenseInfo"
        ],
        "summary": "Read a 'iaas.LicenseInfo' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iaasLicenseInfos for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iaasLicenseInfoList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iaas/LicenseInfos/{Moid}": {
      "get": {
        "tags": [
          "iaasLicenseInfo"
        ],
        "summary": "Read a 'iaas.LicenseInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iaasLicenseInfo instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iaasLicenseInfo",
            "schema": {
              "$ref": "#/definitions/iaasLicenseInfo"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iaas/MostRunTasks": {
      "get": {
        "tags": [
          "iaasMostRunTasks"
        ],
        "summary": "Read a 'iaas.MostRunTasks' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iaasMostRunTasks for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iaasMostRunTasksList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iaas/MostRunTasks/{Moid}": {
      "get": {
        "tags": [
          "iaasMostRunTasks"
        ],
        "summary": "Read a 'iaas.MostRunTasks' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iaasMostRunTasks instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iaasMostRunTasks",
            "schema": {
              "$ref": "#/definitions/iaasMostRunTasks"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iaas/UcsdInfos": {
      "get": {
        "tags": [
          "iaasUcsdInfo"
        ],
        "summary": "Read a 'iaas.UcsdInfo' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iaasUcsdInfos for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iaasUcsdInfoList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iaas/UcsdInfos/{Moid}": {
      "get": {
        "tags": [
          "iaasUcsdInfo"
        ],
        "summary": "Read a 'iaas.UcsdInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iaasUcsdInfo instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iaasUcsdInfo",
            "schema": {
              "$ref": "#/definitions/iaasUcsdInfo"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "iaasUcsdInfo"
        ],
        "summary": "Delete a 'iaas.UcsdInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iaasUcsdInfo instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iaasUcsdInfo"
        ],
        "summary": "Update a 'iaas.UcsdInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iaasUcsdInfo instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iaasUcsdInfo to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iaasUcsdInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "iaasUcsdInfo"
        ],
        "summary": "Update a 'iaas.UcsdInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iaasUcsdInfo instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iaasUcsdInfo to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iaasUcsdInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iaas/UcsdManagedInfras": {
      "get": {
        "tags": [
          "iaasUcsdManagedInfra"
        ],
        "summary": "Read a 'iaas.UcsdManagedInfra' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iaasUcsdManagedInfras for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iaasUcsdManagedInfraList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iaas/UcsdManagedInfras/{Moid}": {
      "get": {
        "tags": [
          "iaasUcsdManagedInfra"
        ],
        "summary": "Read a 'iaas.UcsdManagedInfra' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iaasUcsdManagedInfra instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iaasUcsdManagedInfra",
            "schema": {
              "$ref": "#/definitions/iaasUcsdManagedInfra"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/Accounts": {
      "get": {
        "tags": [
          "iamAccount"
        ],
        "summary": "Read a 'iam.Account' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamAccounts for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamAccountList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamAccount"
        ],
        "summary": "Create a 'iam.Account' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "iamAccount to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamAccount"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/Accounts/{Moid}": {
      "get": {
        "tags": [
          "iamAccount"
        ],
        "summary": "Read a 'iam.Account' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamAccount instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamAccount",
            "schema": {
              "$ref": "#/definitions/iamAccount"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamAccount"
        ],
        "summary": "Update a 'iam.Account' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamAccount instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamAccount to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamAccount"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "iamAccount"
        ],
        "summary": "Update a 'iam.Account' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamAccount instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamAccount to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamAccount"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "iamAccount"
        ],
        "summary": "Delete a 'iam.Account' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamAccount instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/ApiKeys": {
      "get": {
        "tags": [
          "iamApiKey"
        ],
        "summary": "Read a 'iam.ApiKey' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamApiKeys for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamApiKeyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamApiKey"
        ],
        "summary": "Create a 'iam.ApiKey' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "iamApiKey to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamApiKey"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/ApiKeys/{Moid}": {
      "get": {
        "tags": [
          "iamApiKey"
        ],
        "summary": "Read a 'iam.ApiKey' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamApiKey instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamApiKey",
            "schema": {
              "$ref": "#/definitions/iamApiKey"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "iamApiKey"
        ],
        "summary": "Delete a 'iam.ApiKey' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamApiKey instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamApiKey"
        ],
        "summary": "Update a 'iam.ApiKey' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamApiKey instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamApiKey to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamApiKey"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "iamApiKey"
        ],
        "summary": "Update a 'iam.ApiKey' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamApiKey instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamApiKey to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamApiKey"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/AppRegistrations": {
      "get": {
        "tags": [
          "iamAppRegistration"
        ],
        "summary": "Read a 'iam.AppRegistration' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamAppRegistrations for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamAppRegistrationList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamAppRegistration"
        ],
        "summary": "Create a 'iam.AppRegistration' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "iamAppRegistration to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamAppRegistration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/AppRegistrations/{Moid}": {
      "get": {
        "tags": [
          "iamAppRegistration"
        ],
        "summary": "Read a 'iam.AppRegistration' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamAppRegistration instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamAppRegistration",
            "schema": {
              "$ref": "#/definitions/iamAppRegistration"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "iamAppRegistration"
        ],
        "summary": "Delete a 'iam.AppRegistration' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamAppRegistration instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamAppRegistration"
        ],
        "summary": "Update a 'iam.AppRegistration' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamAppRegistration instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamAppRegistration to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamAppRegistration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "iamAppRegistration"
        ],
        "summary": "Update a 'iam.AppRegistration' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamAppRegistration instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamAppRegistration to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamAppRegistration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/Certificates": {
      "get": {
        "tags": [
          "iamCertificate"
        ],
        "summary": "Read a 'iam.Certificate' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamCertificates for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamCertificateList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamCertificate"
        ],
        "summary": "Create a 'iam.Certificate' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "iamCertificate to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamCertificate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/Certificates/{Moid}": {
      "get": {
        "tags": [
          "iamCertificate"
        ],
        "summary": "Read a 'iam.Certificate' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamCertificate instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamCertificate",
            "schema": {
              "$ref": "#/definitions/iamCertificate"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamCertificate"
        ],
        "summary": "Update a 'iam.Certificate' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamCertificate instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamCertificate to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamCertificate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "iamCertificate"
        ],
        "summary": "Update a 'iam.Certificate' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamCertificate instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamCertificate to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamCertificate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "iamCertificate"
        ],
        "summary": "Delete a 'iam.Certificate' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamCertificate instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/CertificateRequests": {
      "get": {
        "tags": [
          "iamCertificateRequest"
        ],
        "summary": "Read a 'iam.CertificateRequest' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamCertificateRequests for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamCertificateRequestList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamCertificateRequest"
        ],
        "summary": "Create a 'iam.CertificateRequest' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "iamCertificateRequest to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamCertificateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/CertificateRequests/{Moid}": {
      "get": {
        "tags": [
          "iamCertificateRequest"
        ],
        "summary": "Read a 'iam.CertificateRequest' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamCertificateRequest instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamCertificateRequest",
            "schema": {
              "$ref": "#/definitions/iamCertificateRequest"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamCertificateRequest"
        ],
        "summary": "Update a 'iam.CertificateRequest' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamCertificateRequest instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamCertificateRequest to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamCertificateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "iamCertificateRequest"
        ],
        "summary": "Update a 'iam.CertificateRequest' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamCertificateRequest instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamCertificateRequest to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamCertificateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "iamCertificateRequest"
        ],
        "summary": "Delete a 'iam.CertificateRequest' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamCertificateRequest instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/DomainGroups": {
      "get": {
        "tags": [
          "iamDomainGroup"
        ],
        "summary": "Read a 'iam.DomainGroup' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamDomainGroups for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamDomainGroupList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/DomainGroups/{Moid}": {
      "get": {
        "tags": [
          "iamDomainGroup"
        ],
        "summary": "Read a 'iam.DomainGroup' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamDomainGroup instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamDomainGroup",
            "schema": {
              "$ref": "#/definitions/iamDomainGroup"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/EndPointPrivileges": {
      "get": {
        "tags": [
          "iamEndPointPrivilege"
        ],
        "summary": "Read a 'iam.EndPointPrivilege' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamEndPointPrivileges for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamEndPointPrivilegeList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/EndPointPrivileges/{Moid}": {
      "get": {
        "tags": [
          "iamEndPointPrivilege"
        ],
        "summary": "Read a 'iam.EndPointPrivilege' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamEndPointPrivilege instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamEndPointPrivilege",
            "schema": {
              "$ref": "#/definitions/iamEndPointPrivilege"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/EndPointRoles": {
      "get": {
        "tags": [
          "iamEndPointRole"
        ],
        "summary": "Read a 'iam.EndPointRole' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamEndPointRoles for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamEndPointRoleList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/EndPointRoles/{Moid}": {
      "get": {
        "tags": [
          "iamEndPointRole"
        ],
        "summary": "Read a 'iam.EndPointRole' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamEndPointRole instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamEndPointRole",
            "schema": {
              "$ref": "#/definitions/iamEndPointRole"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/EndPointUsers": {
      "get": {
        "tags": [
          "iamEndPointUser"
        ],
        "summary": "Read a 'iam.EndPointUser' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamEndPointUsers for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamEndPointUserList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamEndPointUser"
        ],
        "summary": "Create a 'iam.EndPointUser' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "iamEndPointUser to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamEndPointUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/EndPointUsers/{Moid}": {
      "get": {
        "tags": [
          "iamEndPointUser"
        ],
        "summary": "Read a 'iam.EndPointUser' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamEndPointUser instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamEndPointUser",
            "schema": {
              "$ref": "#/definitions/iamEndPointUser"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamEndPointUser"
        ],
        "summary": "Update a 'iam.EndPointUser' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamEndPointUser instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamEndPointUser to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamEndPointUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "iamEndPointUser"
        ],
        "summary": "Update a 'iam.EndPointUser' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamEndPointUser instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamEndPointUser to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamEndPointUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "iamEndPointUser"
        ],
        "summary": "Delete a 'iam.EndPointUser' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamEndPointUser instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/EndPointUserPolicies": {
      "get": {
        "tags": [
          "iamEndPointUserPolicy"
        ],
        "summary": "Read a 'iam.EndPointUserPolicy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamEndPointUserPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamEndPointUserPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamEndPointUserPolicy"
        ],
        "summary": "Create a 'iam.EndPointUserPolicy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "iamEndPointUserPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamEndPointUserPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/EndPointUserPolicies/{Moid}": {
      "get": {
        "tags": [
          "iamEndPointUserPolicy"
        ],
        "summary": "Read a 'iam.EndPointUserPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamEndPointUserPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamEndPointUserPolicy",
            "schema": {
              "$ref": "#/definitions/iamEndPointUserPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamEndPointUserPolicy"
        ],
        "summary": "Update a 'iam.EndPointUserPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamEndPointUserPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamEndPointUserPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamEndPointUserPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "iamEndPointUserPolicy"
        ],
        "summary": "Update a 'iam.EndPointUserPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamEndPointUserPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamEndPointUserPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamEndPointUserPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "iamEndPointUserPolicy"
        ],
        "summary": "Delete a 'iam.EndPointUserPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamEndPointUserPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/EndPointUserRoles": {
      "get": {
        "tags": [
          "iamEndPointUserRole"
        ],
        "summary": "Read a 'iam.EndPointUserRole' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamEndPointUserRoles for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamEndPointUserRoleList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamEndPointUserRole"
        ],
        "summary": "Create a 'iam.EndPointUserRole' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "iamEndPointUserRole to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamEndPointUserRole"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/EndPointUserRoles/{Moid}": {
      "get": {
        "tags": [
          "iamEndPointUserRole"
        ],
        "summary": "Read a 'iam.EndPointUserRole' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamEndPointUserRole instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamEndPointUserRole",
            "schema": {
              "$ref": "#/definitions/iamEndPointUserRole"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamEndPointUserRole"
        ],
        "summary": "Update a 'iam.EndPointUserRole' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamEndPointUserRole instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamEndPointUserRole to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamEndPointUserRole"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "iamEndPointUserRole"
        ],
        "summary": "Update a 'iam.EndPointUserRole' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamEndPointUserRole instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamEndPointUserRole to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamEndPointUserRole"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "iamEndPointUserRole"
        ],
        "summary": "Delete a 'iam.EndPointUserRole' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamEndPointUserRole instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/Idps": {
      "get": {
        "tags": [
          "iamIdp"
        ],
        "summary": "Read a 'iam.Idp' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamIdps for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamIdpList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamIdp"
        ],
        "summary": "Create a 'iam.Idp' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "iamIdp to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamIdp"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/Idps/{Moid}": {
      "get": {
        "tags": [
          "iamIdp"
        ],
        "summary": "Read a 'iam.Idp' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamIdp instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamIdp",
            "schema": {
              "$ref": "#/definitions/iamIdp"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamIdp"
        ],
        "summary": "Update a 'iam.Idp' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamIdp instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamIdp to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamIdp"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "iamIdp"
        ],
        "summary": "Update a 'iam.Idp' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamIdp instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamIdp to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamIdp"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "iamIdp"
        ],
        "summary": "Delete a 'iam.Idp' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamIdp instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/IdpReferences": {
      "get": {
        "tags": [
          "iamIdpReference"
        ],
        "summary": "Read a 'iam.IdpReference' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamIdpReferences for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamIdpReferenceList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/IdpReferences/{Moid}": {
      "get": {
        "tags": [
          "iamIdpReference"
        ],
        "summary": "Read a 'iam.IdpReference' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamIdpReference instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamIdpReference",
            "schema": {
              "$ref": "#/definitions/iamIdpReference"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamIdpReference"
        ],
        "summary": "Update a 'iam.IdpReference' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamIdpReference instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamIdpReference to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamIdpReference"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "iamIdpReference"
        ],
        "summary": "Update a 'iam.IdpReference' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamIdpReference instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamIdpReference to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamIdpReference"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/LdapGroups": {
      "post": {
        "tags": [
          "iamLdapGroup"
        ],
        "summary": "Create a 'iam.LdapGroup' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "iamLdapGroup to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamLdapGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "iamLdapGroup"
        ],
        "summary": "Read a 'iam.LdapGroup' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamLdapGroups for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamLdapGroupList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/LdapGroups/{Moid}": {
      "get": {
        "tags": [
          "iamLdapGroup"
        ],
        "summary": "Read a 'iam.LdapGroup' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamLdapGroup instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamLdapGroup",
            "schema": {
              "$ref": "#/definitions/iamLdapGroup"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamLdapGroup"
        ],
        "summary": "Update a 'iam.LdapGroup' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamLdapGroup instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamLdapGroup to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamLdapGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "iamLdapGroup"
        ],
        "summary": "Update a 'iam.LdapGroup' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamLdapGroup instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamLdapGroup to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamLdapGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "iamLdapGroup"
        ],
        "summary": "Delete a 'iam.LdapGroup' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamLdapGroup instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/LdapPolicies": {
      "post": {
        "tags": [
          "iamLdapPolicy"
        ],
        "summary": "Create a 'iam.LdapPolicy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "iamLdapPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamLdapPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "iamLdapPolicy"
        ],
        "summary": "Read a 'iam.LdapPolicy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamLdapPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamLdapPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/LdapPolicies/{Moid}": {
      "get": {
        "tags": [
          "iamLdapPolicy"
        ],
        "summary": "Read a 'iam.LdapPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamLdapPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamLdapPolicy",
            "schema": {
              "$ref": "#/definitions/iamLdapPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamLdapPolicy"
        ],
        "summary": "Update a 'iam.LdapPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamLdapPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamLdapPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamLdapPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "iamLdapPolicy"
        ],
        "summary": "Update a 'iam.LdapPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamLdapPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamLdapPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamLdapPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "iamLdapPolicy"
        ],
        "summary": "Delete a 'iam.LdapPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamLdapPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/LdapProviders": {
      "post": {
        "tags": [
          "iamLdapProvider"
        ],
        "summary": "Create a 'iam.LdapProvider' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "iamLdapProvider to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamLdapProvider"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "iamLdapProvider"
        ],
        "summary": "Read a 'iam.LdapProvider' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamLdapProviders for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamLdapProviderList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/LdapProviders/{Moid}": {
      "get": {
        "tags": [
          "iamLdapProvider"
        ],
        "summary": "Read a 'iam.LdapProvider' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamLdapProvider instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamLdapProvider",
            "schema": {
              "$ref": "#/definitions/iamLdapProvider"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamLdapProvider"
        ],
        "summary": "Update a 'iam.LdapProvider' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamLdapProvider instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamLdapProvider to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamLdapProvider"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "iamLdapProvider"
        ],
        "summary": "Update a 'iam.LdapProvider' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamLdapProvider instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamLdapProvider to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamLdapProvider"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "iamLdapProvider"
        ],
        "summary": "Delete a 'iam.LdapProvider' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamLdapProvider instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/LocalUserPasswords/{Moid}": {
      "post": {
        "tags": [
          "iamLocalUserPassword"
        ],
        "summary": "Update a 'iam.LocalUserPassword' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamLocalUserPassword instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamLocalUserPassword to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamLocalUserPassword"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "iamLocalUserPassword"
        ],
        "summary": "Update a 'iam.LocalUserPassword' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamLocalUserPassword instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamLocalUserPassword to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamLocalUserPassword"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/OAuthTokens": {
      "get": {
        "tags": [
          "iamOAuthToken"
        ],
        "summary": "Read a 'iam.OAuthToken' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamOAuthTokens for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamOAuthTokenList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/OAuthTokens/{Moid}": {
      "get": {
        "tags": [
          "iamOAuthToken"
        ],
        "summary": "Read a 'iam.OAuthToken' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamOAuthToken instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamOAuthToken",
            "schema": {
              "$ref": "#/definitions/iamOAuthToken"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "iamOAuthToken"
        ],
        "summary": "Delete a 'iam.OAuthToken' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamOAuthToken instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/Permissions": {
      "post": {
        "tags": [
          "iamPermission"
        ],
        "summary": "Create a 'iam.Permission' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "iamPermission to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamPermission"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "iamPermission"
        ],
        "summary": "Read a 'iam.Permission' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamPermissions for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamPermissionList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/Permissions/{Moid}": {
      "post": {
        "tags": [
          "iamPermission"
        ],
        "summary": "Update a 'iam.Permission' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamPermission instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamPermission to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamPermission"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "iamPermission"
        ],
        "summary": "Update a 'iam.Permission' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamPermission instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamPermission to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamPermission"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "iamPermission"
        ],
        "summary": "Delete a 'iam.Permission' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamPermission instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "iamPermission"
        ],
        "summary": "Read a 'iam.Permission' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamPermission instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamPermission",
            "schema": {
              "$ref": "#/definitions/iamPermission"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/PrivateKeySpecs": {
      "get": {
        "tags": [
          "iamPrivateKeySpec"
        ],
        "summary": "Read a 'iam.PrivateKeySpec' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamPrivateKeySpecs for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamPrivateKeySpecList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamPrivateKeySpec"
        ],
        "summary": "Create a 'iam.PrivateKeySpec' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "iamPrivateKeySpec to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamPrivateKeySpec"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/PrivateKeySpecs/{Moid}": {
      "get": {
        "tags": [
          "iamPrivateKeySpec"
        ],
        "summary": "Read a 'iam.PrivateKeySpec' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamPrivateKeySpec instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamPrivateKeySpec",
            "schema": {
              "$ref": "#/definitions/iamPrivateKeySpec"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamPrivateKeySpec"
        ],
        "summary": "Update a 'iam.PrivateKeySpec' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamPrivateKeySpec instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamPrivateKeySpec to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamPrivateKeySpec"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "iamPrivateKeySpec"
        ],
        "summary": "Update a 'iam.PrivateKeySpec' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamPrivateKeySpec instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamPrivateKeySpec to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamPrivateKeySpec"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "iamPrivateKeySpec"
        ],
        "summary": "Delete a 'iam.PrivateKeySpec' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamPrivateKeySpec instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/Privileges": {
      "get": {
        "tags": [
          "iamPrivilege"
        ],
        "summary": "Read a 'iam.Privilege' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamPrivileges for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamPrivilegeList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/Privileges/{Moid}": {
      "get": {
        "tags": [
          "iamPrivilege"
        ],
        "summary": "Read a 'iam.Privilege' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamPrivilege instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamPrivilege",
            "schema": {
              "$ref": "#/definitions/iamPrivilege"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/PrivilegeSets": {
      "get": {
        "tags": [
          "iamPrivilegeSet"
        ],
        "summary": "Read a 'iam.PrivilegeSet' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamPrivilegeSets for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamPrivilegeSetList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/PrivilegeSets/{Moid}": {
      "get": {
        "tags": [
          "iamPrivilegeSet"
        ],
        "summary": "Read a 'iam.PrivilegeSet' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamPrivilegeSet instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamPrivilegeSet",
            "schema": {
              "$ref": "#/definitions/iamPrivilegeSet"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/Qualifiers": {
      "get": {
        "tags": [
          "iamQualifier"
        ],
        "summary": "Read a 'iam.Qualifier' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamQualifiers for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamQualifierList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamQualifier"
        ],
        "summary": "Create a 'iam.Qualifier' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "iamQualifier to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamQualifier"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/Qualifiers/{Moid}": {
      "get": {
        "tags": [
          "iamQualifier"
        ],
        "summary": "Read a 'iam.Qualifier' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamQualifier instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamQualifier",
            "schema": {
              "$ref": "#/definitions/iamQualifier"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamQualifier"
        ],
        "summary": "Update a 'iam.Qualifier' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamQualifier instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamQualifier to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamQualifier"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "iamQualifier"
        ],
        "summary": "Update a 'iam.Qualifier' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamQualifier instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamQualifier to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamQualifier"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "iamQualifier"
        ],
        "summary": "Delete a 'iam.Qualifier' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamQualifier instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/ResourceLimits": {
      "get": {
        "tags": [
          "iamResourceLimits"
        ],
        "summary": "Read a 'iam.ResourceLimits' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamResourceLimits for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamResourceLimitsList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/ResourceLimits/{Moid}": {
      "get": {
        "tags": [
          "iamResourceLimits"
        ],
        "summary": "Read a 'iam.ResourceLimits' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamResourceLimits instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamResourceLimits",
            "schema": {
              "$ref": "#/definitions/iamResourceLimits"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/ResourcePermissions": {
      "get": {
        "tags": [
          "iamResourcePermission"
        ],
        "summary": "Read a 'iam.ResourcePermission' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamResourcePermissions for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamResourcePermissionList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/ResourcePermissions/{Moid}": {
      "get": {
        "tags": [
          "iamResourcePermission"
        ],
        "summary": "Read a 'iam.ResourcePermission' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamResourcePermission instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamResourcePermission",
            "schema": {
              "$ref": "#/definitions/iamResourcePermission"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/ResourceRoles": {
      "get": {
        "tags": [
          "iamResourceRoles"
        ],
        "summary": "Read a 'iam.ResourceRoles' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamResourceRoles for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamResourceRolesList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamResourceRoles"
        ],
        "summary": "Create a 'iam.ResourceRoles' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "iamResourceRoles to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamResourceRoles"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/ResourceRoles/{Moid}": {
      "get": {
        "tags": [
          "iamResourceRoles"
        ],
        "summary": "Read a 'iam.ResourceRoles' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamResourceRoles instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamResourceRoles",
            "schema": {
              "$ref": "#/definitions/iamResourceRoles"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamResourceRoles"
        ],
        "summary": "Update a 'iam.ResourceRoles' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamResourceRoles instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamResourceRoles to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamResourceRoles"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "iamResourceRoles"
        ],
        "summary": "Update a 'iam.ResourceRoles' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamResourceRoles instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamResourceRoles to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamResourceRoles"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "iamResourceRoles"
        ],
        "summary": "Delete a 'iam.ResourceRoles' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamResourceRoles instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/Roles": {
      "get": {
        "tags": [
          "iamRole"
        ],
        "summary": "Read a 'iam.Role' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamRoles for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamRoleList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/Roles/{Moid}": {
      "get": {
        "tags": [
          "iamRole"
        ],
        "summary": "Read a 'iam.Role' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamRole instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamRole",
            "schema": {
              "$ref": "#/definitions/iamRole"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/SecurityHolders": {
      "get": {
        "tags": [
          "iamSecurityHolder"
        ],
        "summary": "Read a 'iam.SecurityHolder' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamSecurityHolders for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamSecurityHolderList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/SecurityHolders/{Moid}": {
      "get": {
        "tags": [
          "iamSecurityHolder"
        ],
        "summary": "Read a 'iam.SecurityHolder' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamSecurityHolder instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamSecurityHolder",
            "schema": {
              "$ref": "#/definitions/iamSecurityHolder"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/ServiceProviders": {
      "get": {
        "tags": [
          "iamServiceProvider"
        ],
        "summary": "Read a 'iam.ServiceProvider' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamServiceProviders for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamServiceProviderList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/ServiceProviders/{Moid}": {
      "get": {
        "tags": [
          "iamServiceProvider"
        ],
        "summary": "Read a 'iam.ServiceProvider' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamServiceProvider instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamServiceProvider",
            "schema": {
              "$ref": "#/definitions/iamServiceProvider"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/Sessions": {
      "get": {
        "tags": [
          "iamSession"
        ],
        "summary": "Read a 'iam.Session' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamSessions for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamSessionList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/Sessions/{Moid}": {
      "get": {
        "tags": [
          "iamSession"
        ],
        "summary": "Read a 'iam.Session' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamSession instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamSession",
            "schema": {
              "$ref": "#/definitions/iamSession"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "iamSession"
        ],
        "summary": "Delete a 'iam.Session' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamSession instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/SessionLimits": {
      "get": {
        "tags": [
          "iamSessionLimits"
        ],
        "summary": "Read a 'iam.SessionLimits' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamSessionLimits for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamSessionLimitsList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/SessionLimits/{Moid}": {
      "get": {
        "tags": [
          "iamSessionLimits"
        ],
        "summary": "Read a 'iam.SessionLimits' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamSessionLimits instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamSessionLimits",
            "schema": {
              "$ref": "#/definitions/iamSessionLimits"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/Systems": {
      "get": {
        "tags": [
          "iamSystem"
        ],
        "summary": "Read a 'iam.System' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamSystems for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamSystemList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/Systems/{Moid}": {
      "get": {
        "tags": [
          "iamSystem"
        ],
        "summary": "Read a 'iam.System' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamSystem instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamSystem",
            "schema": {
              "$ref": "#/definitions/iamSystem"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/TrustPoints": {
      "get": {
        "tags": [
          "iamTrustPoint"
        ],
        "summary": "Read a 'iam.TrustPoint' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamTrustPoints for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamTrustPointList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamTrustPoint"
        ],
        "summary": "Create a 'iam.TrustPoint' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "iamTrustPoint to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamTrustPoint"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/TrustPoints/{Moid}": {
      "get": {
        "tags": [
          "iamTrustPoint"
        ],
        "summary": "Read a 'iam.TrustPoint' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamTrustPoint instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamTrustPoint",
            "schema": {
              "$ref": "#/definitions/iamTrustPoint"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "iamTrustPoint"
        ],
        "summary": "Delete a 'iam.TrustPoint' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamTrustPoint instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/Users": {
      "get": {
        "tags": [
          "iamUser"
        ],
        "summary": "Read a 'iam.User' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamUsers for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamUserList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamUser"
        ],
        "summary": "Create a 'iam.User' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "iamUser to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/Users/{Moid}": {
      "get": {
        "tags": [
          "iamUser"
        ],
        "summary": "Read a 'iam.User' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamUser instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamUser",
            "schema": {
              "$ref": "#/definitions/iamUser"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamUser"
        ],
        "summary": "Update a 'iam.User' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamUser instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamUser to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "iamUser"
        ],
        "summary": "Update a 'iam.User' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamUser instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamUser to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "iamUser"
        ],
        "summary": "Delete a 'iam.User' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamUser instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/UserGroups": {
      "get": {
        "tags": [
          "iamUserGroup"
        ],
        "summary": "Read a 'iam.UserGroup' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamUserGroups for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamUserGroupList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamUserGroup"
        ],
        "summary": "Create a 'iam.UserGroup' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "iamUserGroup to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamUserGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/UserGroups/{Moid}": {
      "get": {
        "tags": [
          "iamUserGroup"
        ],
        "summary": "Read a 'iam.UserGroup' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamUserGroup instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamUserGroup",
            "schema": {
              "$ref": "#/definitions/iamUserGroup"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "iamUserGroup"
        ],
        "summary": "Delete a 'iam.UserGroup' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamUserGroup instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamUserGroup"
        ],
        "summary": "Update a 'iam.UserGroup' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamUserGroup instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamUserGroup to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamUserGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "iamUserGroup"
        ],
        "summary": "Update a 'iam.UserGroup' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamUserGroup instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamUserGroup to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamUserGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/UserPreferences": {
      "get": {
        "tags": [
          "iamUserPreference"
        ],
        "summary": "Read a 'iam.UserPreference' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of iamUserPreferences for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/iamUserPreferenceList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/iam/UserPreferences/{Moid}": {
      "get": {
        "tags": [
          "iamUserPreference"
        ],
        "summary": "Read a 'iam.UserPreference' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamUserPreference instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of iamUserPreference",
            "schema": {
              "$ref": "#/definitions/iamUserPreference"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "iamUserPreference"
        ],
        "summary": "Update a 'iam.UserPreference' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamUserPreference instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamUserPreference to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamUserPreference"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "iamUserPreference"
        ],
        "summary": "Update a 'iam.UserPreference' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the iamUserPreference instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "iamUserPreference to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iamUserPreference"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/inventory/DeviceInfos": {
      "get": {
        "tags": [
          "inventoryDeviceInfo"
        ],
        "summary": "Read a 'inventory.DeviceInfo' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of inventoryDeviceInfos for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/inventoryDeviceInfoList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/inventory/DeviceInfos/{Moid}": {
      "get": {
        "tags": [
          "inventoryDeviceInfo"
        ],
        "summary": "Read a 'inventory.DeviceInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the inventoryDeviceInfo instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of inventoryDeviceInfo",
            "schema": {
              "$ref": "#/definitions/inventoryDeviceInfo"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/inventory/DnMoBindings": {
      "get": {
        "tags": [
          "inventoryDnMoBinding"
        ],
        "summary": "Read a 'inventory.DnMoBinding' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of inventoryDnMoBindings for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/inventoryDnMoBindingList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/inventory/DnMoBindings/{Moid}": {
      "get": {
        "tags": [
          "inventoryDnMoBinding"
        ],
        "summary": "Read a 'inventory.DnMoBinding' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the inventoryDnMoBinding instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of inventoryDnMoBinding",
            "schema": {
              "$ref": "#/definitions/inventoryDnMoBinding"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/inventory/GenericInventories": {
      "get": {
        "tags": [
          "inventoryGenericInventory"
        ],
        "summary": "Read a 'inventory.GenericInventory' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of inventoryGenericInventories for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/inventoryGenericInventoryList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/inventory/GenericInventories/{Moid}": {
      "get": {
        "tags": [
          "inventoryGenericInventory"
        ],
        "summary": "Read a 'inventory.GenericInventory' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the inventoryGenericInventory instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of inventoryGenericInventory",
            "schema": {
              "$ref": "#/definitions/inventoryGenericInventory"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "inventoryGenericInventory"
        ],
        "summary": "Update a 'inventory.GenericInventory' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the inventoryGenericInventory instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "inventoryGenericInventory to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryGenericInventory"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "inventoryGenericInventory"
        ],
        "summary": "Update a 'inventory.GenericInventory' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the inventoryGenericInventory instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "inventoryGenericInventory to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryGenericInventory"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/inventory/GenericInventoryHolders": {
      "get": {
        "tags": [
          "inventoryGenericInventoryHolder"
        ],
        "summary": "Read a 'inventory.GenericInventoryHolder' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of inventoryGenericInventoryHolders for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/inventoryGenericInventoryHolderList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/inventory/GenericInventoryHolders/{Moid}": {
      "get": {
        "tags": [
          "inventoryGenericInventoryHolder"
        ],
        "summary": "Read a 'inventory.GenericInventoryHolder' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the inventoryGenericInventoryHolder instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of inventoryGenericInventoryHolder",
            "schema": {
              "$ref": "#/definitions/inventoryGenericInventoryHolder"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "inventoryGenericInventoryHolder"
        ],
        "summary": "Update a 'inventory.GenericInventoryHolder' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the inventoryGenericInventoryHolder instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "inventoryGenericInventoryHolder to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryGenericInventoryHolder"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "inventoryGenericInventoryHolder"
        ],
        "summary": "Update a 'inventory.GenericInventoryHolder' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the inventoryGenericInventoryHolder instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "inventoryGenericInventoryHolder to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryGenericInventoryHolder"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/inventory/Requests": {
      "post": {
        "tags": [
          "inventoryRequest"
        ],
        "summary": "Create a 'inventory.Request' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "inventoryRequest to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ipmioverlan/Policies": {
      "post": {
        "tags": [
          "ipmioverlanPolicy"
        ],
        "summary": "Create a 'ipmioverlan.Policy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "ipmioverlanPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ipmioverlanPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ipmioverlanPolicy"
        ],
        "summary": "Read a 'ipmioverlan.Policy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of ipmioverlanPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/ipmioverlanPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ipmioverlan/Policies/{Moid}": {
      "get": {
        "tags": [
          "ipmioverlanPolicy"
        ],
        "summary": "Read a 'ipmioverlan.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the ipmioverlanPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of ipmioverlanPolicy",
            "schema": {
              "$ref": "#/definitions/ipmioverlanPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ipmioverlanPolicy"
        ],
        "summary": "Update a 'ipmioverlan.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the ipmioverlanPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "ipmioverlanPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ipmioverlanPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ipmioverlanPolicy"
        ],
        "summary": "Update a 'ipmioverlan.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the ipmioverlanPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "ipmioverlanPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ipmioverlanPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ipmioverlanPolicy"
        ],
        "summary": "Delete a 'ipmioverlan.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the ipmioverlanPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/kvm/Policies": {
      "get": {
        "tags": [
          "kvmPolicy"
        ],
        "summary": "Read a 'kvm.Policy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of kvmPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/kvmPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "kvmPolicy"
        ],
        "summary": "Create a 'kvm.Policy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "kvmPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/kvmPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/kvm/Policies/{Moid}": {
      "get": {
        "tags": [
          "kvmPolicy"
        ],
        "summary": "Read a 'kvm.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the kvmPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of kvmPolicy",
            "schema": {
              "$ref": "#/definitions/kvmPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "kvmPolicy"
        ],
        "summary": "Update a 'kvm.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the kvmPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "kvmPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/kvmPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "kvmPolicy"
        ],
        "summary": "Update a 'kvm.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the kvmPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "kvmPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/kvmPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "kvmPolicy"
        ],
        "summary": "Delete a 'kvm.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the kvmPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/license/AccountLicenseData": {
      "get": {
        "tags": [
          "licenseAccountLicenseData"
        ],
        "summary": "Read a 'license.AccountLicenseData' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of licenseAccountLicenseData for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/licenseAccountLicenseDataList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/license/AccountLicenseData/{Moid}": {
      "get": {
        "tags": [
          "licenseAccountLicenseData"
        ],
        "summary": "Read a 'license.AccountLicenseData' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the licenseAccountLicenseData instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of licenseAccountLicenseData",
            "schema": {
              "$ref": "#/definitions/licenseAccountLicenseData"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "licenseAccountLicenseData"
        ],
        "summary": "Update a 'license.AccountLicenseData' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the licenseAccountLicenseData instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "licenseAccountLicenseData to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/licenseAccountLicenseData"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "licenseAccountLicenseData"
        ],
        "summary": "Update a 'license.AccountLicenseData' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the licenseAccountLicenseData instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "licenseAccountLicenseData to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/licenseAccountLicenseData"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/license/CustomerOps": {
      "get": {
        "tags": [
          "licenseCustomerOp"
        ],
        "summary": "Read a 'license.CustomerOp' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of licenseCustomerOps for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/licenseCustomerOpList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/license/CustomerOps/{Moid}": {
      "get": {
        "tags": [
          "licenseCustomerOp"
        ],
        "summary": "Read a 'license.CustomerOp' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the licenseCustomerOp instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of licenseCustomerOp",
            "schema": {
              "$ref": "#/definitions/licenseCustomerOp"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "licenseCustomerOp"
        ],
        "summary": "Update a 'license.CustomerOp' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the licenseCustomerOp instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "licenseCustomerOp to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/licenseCustomerOp"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "licenseCustomerOp"
        ],
        "summary": "Update a 'license.CustomerOp' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the licenseCustomerOp instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "licenseCustomerOp to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/licenseCustomerOp"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/license/LicenseInfos": {
      "get": {
        "tags": [
          "licenseLicenseInfo"
        ],
        "summary": "Read a 'license.LicenseInfo' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of licenseLicenseInfos for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/licenseLicenseInfoList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "licenseLicenseInfo"
        ],
        "summary": "Create a 'license.LicenseInfo' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "licenseLicenseInfo to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/licenseLicenseInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/license/LicenseInfos/{Moid}": {
      "get": {
        "tags": [
          "licenseLicenseInfo"
        ],
        "summary": "Read a 'license.LicenseInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the licenseLicenseInfo instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of licenseLicenseInfo",
            "schema": {
              "$ref": "#/definitions/licenseLicenseInfo"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "licenseLicenseInfo"
        ],
        "summary": "Update a 'license.LicenseInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the licenseLicenseInfo instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "licenseLicenseInfo to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/licenseLicenseInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "licenseLicenseInfo"
        ],
        "summary": "Update a 'license.LicenseInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the licenseLicenseInfo instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "licenseLicenseInfo to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/licenseLicenseInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/license/SmartlicenseTokens": {
      "get": {
        "tags": [
          "licenseSmartlicenseToken"
        ],
        "summary": "Read a 'license.SmartlicenseToken' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of licenseSmartlicenseTokens for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/licenseSmartlicenseTokenList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/license/SmartlicenseTokens/{Moid}": {
      "get": {
        "tags": [
          "licenseSmartlicenseToken"
        ],
        "summary": "Read a 'license.SmartlicenseToken' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the licenseSmartlicenseToken instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of licenseSmartlicenseToken",
            "schema": {
              "$ref": "#/definitions/licenseSmartlicenseToken"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "licenseSmartlicenseToken"
        ],
        "summary": "Update a 'license.SmartlicenseToken' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the licenseSmartlicenseToken instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "licenseSmartlicenseToken to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/licenseSmartlicenseToken"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "licenseSmartlicenseToken"
        ],
        "summary": "Update a 'license.SmartlicenseToken' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the licenseSmartlicenseToken instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "licenseSmartlicenseToken to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/licenseSmartlicenseToken"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ls/ServiceProfiles": {
      "get": {
        "tags": [
          "lsServiceProfile"
        ],
        "summary": "Read a 'ls.ServiceProfile' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of lsServiceProfiles for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/lsServiceProfileList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ls/ServiceProfiles/{Moid}": {
      "get": {
        "tags": [
          "lsServiceProfile"
        ],
        "summary": "Read a 'ls.ServiceProfile' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the lsServiceProfile instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of lsServiceProfile",
            "schema": {
              "$ref": "#/definitions/lsServiceProfile"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "lsServiceProfile"
        ],
        "summary": "Update a 'ls.ServiceProfile' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the lsServiceProfile instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "lsServiceProfile to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/lsServiceProfile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "lsServiceProfile"
        ],
        "summary": "Update a 'ls.ServiceProfile' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the lsServiceProfile instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "lsServiceProfile to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/lsServiceProfile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/management/Controllers": {
      "get": {
        "tags": [
          "managementController"
        ],
        "summary": "Read a 'management.Controller' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of managementControllers for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/managementControllerList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/management/Controllers/{Moid}": {
      "get": {
        "tags": [
          "managementController"
        ],
        "summary": "Read a 'management.Controller' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the managementController instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of managementController",
            "schema": {
              "$ref": "#/definitions/managementController"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "managementController"
        ],
        "summary": "Update a 'management.Controller' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the managementController instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "managementController to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/managementController"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "managementController"
        ],
        "summary": "Update a 'management.Controller' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the managementController instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "managementController to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/managementController"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/management/Entities": {
      "get": {
        "tags": [
          "managementEntity"
        ],
        "summary": "Read a 'management.Entity' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of managementEntities for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/managementEntityList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/management/Entities/{Moid}": {
      "get": {
        "tags": [
          "managementEntity"
        ],
        "summary": "Read a 'management.Entity' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the managementEntity instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of managementEntity",
            "schema": {
              "$ref": "#/definitions/managementEntity"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "managementEntity"
        ],
        "summary": "Update a 'management.Entity' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the managementEntity instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "managementEntity to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/managementEntity"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "managementEntity"
        ],
        "summary": "Update a 'management.Entity' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the managementEntity instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "managementEntity to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/managementEntity"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/management/Interfaces": {
      "get": {
        "tags": [
          "managementInterface"
        ],
        "summary": "Read a 'management.Interface' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of managementInterfaces for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/managementInterfaceList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/management/Interfaces/{Moid}": {
      "get": {
        "tags": [
          "managementInterface"
        ],
        "summary": "Read a 'management.Interface' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the managementInterface instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of managementInterface",
            "schema": {
              "$ref": "#/definitions/managementInterface"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "managementInterface"
        ],
        "summary": "Update a 'management.Interface' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the managementInterface instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "managementInterface to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/managementInterface"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "managementInterface"
        ],
        "summary": "Update a 'management.Interface' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the managementInterface instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "managementInterface to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/managementInterface"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/memory/Arrays": {
      "get": {
        "tags": [
          "memoryArray"
        ],
        "summary": "Read a 'memory.Array' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of memoryArrays for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/memoryArrayList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/memory/Arrays/{Moid}": {
      "get": {
        "tags": [
          "memoryArray"
        ],
        "summary": "Read a 'memory.Array' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the memoryArray instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of memoryArray",
            "schema": {
              "$ref": "#/definitions/memoryArray"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "memoryArray"
        ],
        "summary": "Update a 'memory.Array' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the memoryArray instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "memoryArray to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/memoryArray"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "memoryArray"
        ],
        "summary": "Update a 'memory.Array' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the memoryArray instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "memoryArray to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/memoryArray"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/memory/PersistentMemoryConfigResults": {
      "get": {
        "tags": [
          "memoryPersistentMemoryConfigResult"
        ],
        "summary": "Read a 'memory.PersistentMemoryConfigResult' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of memoryPersistentMemoryConfigResults for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/memoryPersistentMemoryConfigResultList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/memory/PersistentMemoryConfigResults/{Moid}": {
      "get": {
        "tags": [
          "memoryPersistentMemoryConfigResult"
        ],
        "summary": "Read a 'memory.PersistentMemoryConfigResult' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the memoryPersistentMemoryConfigResult instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of memoryPersistentMemoryConfigResult",
            "schema": {
              "$ref": "#/definitions/memoryPersistentMemoryConfigResult"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "memoryPersistentMemoryConfigResult"
        ],
        "summary": "Update a 'memory.PersistentMemoryConfigResult' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the memoryPersistentMemoryConfigResult instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "memoryPersistentMemoryConfigResult to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/memoryPersistentMemoryConfigResult"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "memoryPersistentMemoryConfigResult"
        ],
        "summary": "Update a 'memory.PersistentMemoryConfigResult' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the memoryPersistentMemoryConfigResult instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "memoryPersistentMemoryConfigResult to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/memoryPersistentMemoryConfigResult"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/memory/PersistentMemoryConfigurations": {
      "get": {
        "tags": [
          "memoryPersistentMemoryConfiguration"
        ],
        "summary": "Read a 'memory.PersistentMemoryConfiguration' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of memoryPersistentMemoryConfigurations for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/memoryPersistentMemoryConfigurationList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/memory/PersistentMemoryConfigurations/{Moid}": {
      "get": {
        "tags": [
          "memoryPersistentMemoryConfiguration"
        ],
        "summary": "Read a 'memory.PersistentMemoryConfiguration' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the memoryPersistentMemoryConfiguration instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of memoryPersistentMemoryConfiguration",
            "schema": {
              "$ref": "#/definitions/memoryPersistentMemoryConfiguration"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "memoryPersistentMemoryConfiguration"
        ],
        "summary": "Update a 'memory.PersistentMemoryConfiguration' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the memoryPersistentMemoryConfiguration instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "memoryPersistentMemoryConfiguration to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/memoryPersistentMemoryConfiguration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "memoryPersistentMemoryConfiguration"
        ],
        "summary": "Update a 'memory.PersistentMemoryConfiguration' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the memoryPersistentMemoryConfiguration instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "memoryPersistentMemoryConfiguration to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/memoryPersistentMemoryConfiguration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/memory/PersistentMemoryNamespaces": {
      "get": {
        "tags": [
          "memoryPersistentMemoryNamespace"
        ],
        "summary": "Read a 'memory.PersistentMemoryNamespace' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of memoryPersistentMemoryNamespaces for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/memoryPersistentMemoryNamespaceList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/memory/PersistentMemoryNamespaces/{Moid}": {
      "get": {
        "tags": [
          "memoryPersistentMemoryNamespace"
        ],
        "summary": "Read a 'memory.PersistentMemoryNamespace' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the memoryPersistentMemoryNamespace instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of memoryPersistentMemoryNamespace",
            "schema": {
              "$ref": "#/definitions/memoryPersistentMemoryNamespace"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "memoryPersistentMemoryNamespace"
        ],
        "summary": "Update a 'memory.PersistentMemoryNamespace' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the memoryPersistentMemoryNamespace instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "memoryPersistentMemoryNamespace to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/memoryPersistentMemoryNamespace"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "memoryPersistentMemoryNamespace"
        ],
        "summary": "Update a 'memory.PersistentMemoryNamespace' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the memoryPersistentMemoryNamespace instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "memoryPersistentMemoryNamespace to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/memoryPersistentMemoryNamespace"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/memory/PersistentMemoryNamespaceConfigResults": {
      "get": {
        "tags": [
          "memoryPersistentMemoryNamespaceConfigResult"
        ],
        "summary": "Read a 'memory.PersistentMemoryNamespaceConfigResult' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of memoryPersistentMemoryNamespaceConfigResults for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/memoryPersistentMemoryNamespaceConfigResultList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/memory/PersistentMemoryNamespaceConfigResults/{Moid}": {
      "get": {
        "tags": [
          "memoryPersistentMemoryNamespaceConfigResult"
        ],
        "summary": "Read a 'memory.PersistentMemoryNamespaceConfigResult' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the memoryPersistentMemoryNamespaceConfigResult instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of memoryPersistentMemoryNamespaceConfigResult",
            "schema": {
              "$ref": "#/definitions/memoryPersistentMemoryNamespaceConfigResult"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "memoryPersistentMemoryNamespaceConfigResult"
        ],
        "summary": "Update a 'memory.PersistentMemoryNamespaceConfigResult' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the memoryPersistentMemoryNamespaceConfigResult instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "memoryPersistentMemoryNamespaceConfigResult to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/memoryPersistentMemoryNamespaceConfigResult"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "memoryPersistentMemoryNamespaceConfigResult"
        ],
        "summary": "Update a 'memory.PersistentMemoryNamespaceConfigResult' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the memoryPersistentMemoryNamespaceConfigResult instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "memoryPersistentMemoryNamespaceConfigResult to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/memoryPersistentMemoryNamespaceConfigResult"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/memory/PersistentMemoryRegions": {
      "get": {
        "tags": [
          "memoryPersistentMemoryRegion"
        ],
        "summary": "Read a 'memory.PersistentMemoryRegion' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of memoryPersistentMemoryRegions for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/memoryPersistentMemoryRegionList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/memory/PersistentMemoryRegions/{Moid}": {
      "get": {
        "tags": [
          "memoryPersistentMemoryRegion"
        ],
        "summary": "Read a 'memory.PersistentMemoryRegion' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the memoryPersistentMemoryRegion instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of memoryPersistentMemoryRegion",
            "schema": {
              "$ref": "#/definitions/memoryPersistentMemoryRegion"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "memoryPersistentMemoryRegion"
        ],
        "summary": "Update a 'memory.PersistentMemoryRegion' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the memoryPersistentMemoryRegion instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "memoryPersistentMemoryRegion to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/memoryPersistentMemoryRegion"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "memoryPersistentMemoryRegion"
        ],
        "summary": "Update a 'memory.PersistentMemoryRegion' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the memoryPersistentMemoryRegion instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "memoryPersistentMemoryRegion to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/memoryPersistentMemoryRegion"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/memory/PersistentMemoryUnits": {
      "get": {
        "tags": [
          "memoryPersistentMemoryUnit"
        ],
        "summary": "Read a 'memory.PersistentMemoryUnit' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of memoryPersistentMemoryUnits for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/memoryPersistentMemoryUnitList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/memory/PersistentMemoryUnits/{Moid}": {
      "get": {
        "tags": [
          "memoryPersistentMemoryUnit"
        ],
        "summary": "Read a 'memory.PersistentMemoryUnit' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the memoryPersistentMemoryUnit instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of memoryPersistentMemoryUnit",
            "schema": {
              "$ref": "#/definitions/memoryPersistentMemoryUnit"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "memoryPersistentMemoryUnit"
        ],
        "summary": "Update a 'memory.PersistentMemoryUnit' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the memoryPersistentMemoryUnit instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "memoryPersistentMemoryUnit to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/memoryPersistentMemoryUnit"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "memoryPersistentMemoryUnit"
        ],
        "summary": "Update a 'memory.PersistentMemoryUnit' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the memoryPersistentMemoryUnit instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "memoryPersistentMemoryUnit to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/memoryPersistentMemoryUnit"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/memory/Units": {
      "get": {
        "tags": [
          "memoryUnit"
        ],
        "summary": "Read a 'memory.Unit' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of memoryUnits for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/memoryUnitList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/memory/Units/{Moid}": {
      "get": {
        "tags": [
          "memoryUnit"
        ],
        "summary": "Read a 'memory.Unit' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the memoryUnit instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of memoryUnit",
            "schema": {
              "$ref": "#/definitions/memoryUnit"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "memoryUnit"
        ],
        "summary": "Update a 'memory.Unit' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the memoryUnit instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "memoryUnit to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/memoryUnit"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "memoryUnit"
        ],
        "summary": "Update a 'memory.Unit' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the memoryUnit instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "memoryUnit to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/memoryUnit"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/meta/Definitions": {
      "get": {
        "tags": [
          "metaDefinition"
        ],
        "summary": "Read a 'meta.Definition' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of metaDefinitions for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/metaDefinitionList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/meta/Definitions/{Moid}": {
      "delete": {
        "tags": [
          "metaDefinition"
        ],
        "summary": "Delete a 'meta.Definition' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the metaDefinition instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "metaDefinition"
        ],
        "summary": "Read a 'meta.Definition' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the metaDefinition instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of metaDefinition",
            "schema": {
              "$ref": "#/definitions/metaDefinition"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/network/Elements": {
      "get": {
        "tags": [
          "networkElement"
        ],
        "summary": "Read a 'network.Element' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of networkElements for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/networkElementList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/network/Elements/{Moid}": {
      "get": {
        "tags": [
          "networkElement"
        ],
        "summary": "Read a 'network.Element' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the networkElement instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of networkElement",
            "schema": {
              "$ref": "#/definitions/networkElement"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "networkElement"
        ],
        "summary": "Update a 'network.Element' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the networkElement instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "networkElement to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/networkElement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "networkElement"
        ],
        "summary": "Update a 'network.Element' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the networkElement instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "networkElement to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/networkElement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/network/ElementSummaries": {
      "get": {
        "tags": [
          "networkElementSummary"
        ],
        "summary": "Read a 'network.ElementSummary' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of networkElementSummaries for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/networkElementSummaryList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/network/ElementSummaries/{Moid}": {
      "get": {
        "tags": [
          "networkElementSummary"
        ],
        "summary": "Read a 'network.ElementSummary' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the networkElementSummary instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of networkElementSummary",
            "schema": {
              "$ref": "#/definitions/networkElementSummary"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/networkconfig/Policies": {
      "post": {
        "tags": [
          "networkconfigPolicy"
        ],
        "summary": "Create a 'networkconfig.Policy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "networkconfigPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/networkconfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "networkconfigPolicy"
        ],
        "summary": "Read a 'networkconfig.Policy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of networkconfigPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/networkconfigPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/networkconfig/Policies/{Moid}": {
      "get": {
        "tags": [
          "networkconfigPolicy"
        ],
        "summary": "Read a 'networkconfig.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the networkconfigPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of networkconfigPolicy",
            "schema": {
              "$ref": "#/definitions/networkconfigPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "networkconfigPolicy"
        ],
        "summary": "Update a 'networkconfig.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the networkconfigPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "networkconfigPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/networkconfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "networkconfigPolicy"
        ],
        "summary": "Update a 'networkconfig.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the networkconfigPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "networkconfigPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/networkconfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "networkconfigPolicy"
        ],
        "summary": "Delete a 'networkconfig.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the networkconfigPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niaapi/ApicCcoPosts": {
      "get": {
        "tags": [
          "niaapiApicCcoPost"
        ],
        "summary": "Read a 'niaapi.ApicCcoPost' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of niaapiApicCcoPosts for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/niaapiApicCcoPostList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niaapi/ApicCcoPosts/{Moid}": {
      "get": {
        "tags": [
          "niaapiApicCcoPost"
        ],
        "summary": "Read a 'niaapi.ApicCcoPost' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the niaapiApicCcoPost instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of niaapiApicCcoPost",
            "schema": {
              "$ref": "#/definitions/niaapiApicCcoPost"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niaapi/ApicFieldNotices": {
      "get": {
        "tags": [
          "niaapiApicFieldNotice"
        ],
        "summary": "Read a 'niaapi.ApicFieldNotice' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of niaapiApicFieldNotices for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/niaapiApicFieldNoticeList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niaapi/ApicFieldNotices/{Moid}": {
      "get": {
        "tags": [
          "niaapiApicFieldNotice"
        ],
        "summary": "Read a 'niaapi.ApicFieldNotice' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the niaapiApicFieldNotice instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of niaapiApicFieldNotice",
            "schema": {
              "$ref": "#/definitions/niaapiApicFieldNotice"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niaapi/ApicHweols": {
      "get": {
        "tags": [
          "niaapiApicHweol"
        ],
        "summary": "Read a 'niaapi.ApicHweol' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of niaapiApicHweols for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/niaapiApicHweolList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niaapi/ApicHweols/{Moid}": {
      "get": {
        "tags": [
          "niaapiApicHweol"
        ],
        "summary": "Read a 'niaapi.ApicHweol' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the niaapiApicHweol instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of niaapiApicHweol",
            "schema": {
              "$ref": "#/definitions/niaapiApicHweol"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niaapi/ApicLatestMaintainedReleases": {
      "get": {
        "tags": [
          "niaapiApicLatestMaintainedRelease"
        ],
        "summary": "Read a 'niaapi.ApicLatestMaintainedRelease' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of niaapiApicLatestMaintainedReleases for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/niaapiApicLatestMaintainedReleaseList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niaapi/ApicLatestMaintainedReleases/{Moid}": {
      "get": {
        "tags": [
          "niaapiApicLatestMaintainedRelease"
        ],
        "summary": "Read a 'niaapi.ApicLatestMaintainedRelease' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the niaapiApicLatestMaintainedRelease instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of niaapiApicLatestMaintainedRelease",
            "schema": {
              "$ref": "#/definitions/niaapiApicLatestMaintainedRelease"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niaapi/ApicReleaseRecommends": {
      "get": {
        "tags": [
          "niaapiApicReleaseRecommend"
        ],
        "summary": "Read a 'niaapi.ApicReleaseRecommend' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of niaapiApicReleaseRecommends for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/niaapiApicReleaseRecommendList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niaapi/ApicReleaseRecommends/{Moid}": {
      "get": {
        "tags": [
          "niaapiApicReleaseRecommend"
        ],
        "summary": "Read a 'niaapi.ApicReleaseRecommend' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the niaapiApicReleaseRecommend instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of niaapiApicReleaseRecommend",
            "schema": {
              "$ref": "#/definitions/niaapiApicReleaseRecommend"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niaapi/ApicSweols": {
      "get": {
        "tags": [
          "niaapiApicSweol"
        ],
        "summary": "Read a 'niaapi.ApicSweol' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of niaapiApicSweols for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/niaapiApicSweolList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niaapi/ApicSweols/{Moid}": {
      "get": {
        "tags": [
          "niaapiApicSweol"
        ],
        "summary": "Read a 'niaapi.ApicSweol' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the niaapiApicSweol instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of niaapiApicSweol",
            "schema": {
              "$ref": "#/definitions/niaapiApicSweol"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niaapi/DcnmCcoPosts": {
      "get": {
        "tags": [
          "niaapiDcnmCcoPost"
        ],
        "summary": "Read a 'niaapi.DcnmCcoPost' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of niaapiDcnmCcoPosts for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/niaapiDcnmCcoPostList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niaapi/DcnmCcoPosts/{Moid}": {
      "get": {
        "tags": [
          "niaapiDcnmCcoPost"
        ],
        "summary": "Read a 'niaapi.DcnmCcoPost' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the niaapiDcnmCcoPost instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of niaapiDcnmCcoPost",
            "schema": {
              "$ref": "#/definitions/niaapiDcnmCcoPost"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niaapi/DcnmFieldNotices": {
      "get": {
        "tags": [
          "niaapiDcnmFieldNotice"
        ],
        "summary": "Read a 'niaapi.DcnmFieldNotice' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of niaapiDcnmFieldNotices for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/niaapiDcnmFieldNoticeList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niaapi/DcnmFieldNotices/{Moid}": {
      "get": {
        "tags": [
          "niaapiDcnmFieldNotice"
        ],
        "summary": "Read a 'niaapi.DcnmFieldNotice' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the niaapiDcnmFieldNotice instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of niaapiDcnmFieldNotice",
            "schema": {
              "$ref": "#/definitions/niaapiDcnmFieldNotice"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niaapi/DcnmHweols": {
      "get": {
        "tags": [
          "niaapiDcnmHweol"
        ],
        "summary": "Read a 'niaapi.DcnmHweol' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of niaapiDcnmHweols for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/niaapiDcnmHweolList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niaapi/DcnmHweols/{Moid}": {
      "get": {
        "tags": [
          "niaapiDcnmHweol"
        ],
        "summary": "Read a 'niaapi.DcnmHweol' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the niaapiDcnmHweol instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of niaapiDcnmHweol",
            "schema": {
              "$ref": "#/definitions/niaapiDcnmHweol"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niaapi/DcnmLatestMaintainedReleases": {
      "get": {
        "tags": [
          "niaapiDcnmLatestMaintainedRelease"
        ],
        "summary": "Read a 'niaapi.DcnmLatestMaintainedRelease' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of niaapiDcnmLatestMaintainedReleases for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/niaapiDcnmLatestMaintainedReleaseList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niaapi/DcnmLatestMaintainedReleases/{Moid}": {
      "get": {
        "tags": [
          "niaapiDcnmLatestMaintainedRelease"
        ],
        "summary": "Read a 'niaapi.DcnmLatestMaintainedRelease' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the niaapiDcnmLatestMaintainedRelease instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of niaapiDcnmLatestMaintainedRelease",
            "schema": {
              "$ref": "#/definitions/niaapiDcnmLatestMaintainedRelease"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niaapi/DcnmReleaseRecommends": {
      "get": {
        "tags": [
          "niaapiDcnmReleaseRecommend"
        ],
        "summary": "Read a 'niaapi.DcnmReleaseRecommend' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of niaapiDcnmReleaseRecommends for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/niaapiDcnmReleaseRecommendList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niaapi/DcnmReleaseRecommends/{Moid}": {
      "get": {
        "tags": [
          "niaapiDcnmReleaseRecommend"
        ],
        "summary": "Read a 'niaapi.DcnmReleaseRecommend' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the niaapiDcnmReleaseRecommend instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of niaapiDcnmReleaseRecommend",
            "schema": {
              "$ref": "#/definitions/niaapiDcnmReleaseRecommend"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niaapi/DcnmSweols": {
      "get": {
        "tags": [
          "niaapiDcnmSweol"
        ],
        "summary": "Read a 'niaapi.DcnmSweol' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of niaapiDcnmSweols for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/niaapiDcnmSweolList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niaapi/DcnmSweols/{Moid}": {
      "get": {
        "tags": [
          "niaapiDcnmSweol"
        ],
        "summary": "Read a 'niaapi.DcnmSweol' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the niaapiDcnmSweol instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of niaapiDcnmSweol",
            "schema": {
              "$ref": "#/definitions/niaapiDcnmSweol"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niaapi/FileDownloaders": {
      "get": {
        "tags": [
          "niaapiFileDownloader"
        ],
        "summary": "Read a 'niaapi.FileDownloader' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of niaapiFileDownloaders for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/niaapiFileDownloaderList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niaapi/FileDownloaders/{Moid}": {
      "get": {
        "tags": [
          "niaapiFileDownloader"
        ],
        "summary": "Read a 'niaapi.FileDownloader' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the niaapiFileDownloader instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of niaapiFileDownloader",
            "schema": {
              "$ref": "#/definitions/niaapiFileDownloader"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niaapi/NiaMetadata": {
      "get": {
        "tags": [
          "niaapiNiaMetadata"
        ],
        "summary": "Read a 'niaapi.NiaMetadata' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of niaapiNiaMetadata for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/niaapiNiaMetadataList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niaapi/NiaMetadata/{Moid}": {
      "get": {
        "tags": [
          "niaapiNiaMetadata"
        ],
        "summary": "Read a 'niaapi.NiaMetadata' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the niaapiNiaMetadata instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of niaapiNiaMetadata",
            "schema": {
              "$ref": "#/definitions/niaapiNiaMetadata"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niaapi/VersionRegexes": {
      "get": {
        "tags": [
          "niaapiVersionRegex"
        ],
        "summary": "Read a 'niaapi.VersionRegex' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of niaapiVersionRegexes for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/niaapiVersionRegexList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niaapi/VersionRegexes/{Moid}": {
      "get": {
        "tags": [
          "niaapiVersionRegex"
        ],
        "summary": "Read a 'niaapi.VersionRegex' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the niaapiVersionRegex instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of niaapiVersionRegex",
            "schema": {
              "$ref": "#/definitions/niaapiVersionRegex"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niatelemetry/NiaInventories": {
      "get": {
        "tags": [
          "niatelemetryNiaInventory"
        ],
        "summary": "Read a 'niatelemetry.NiaInventory' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of niatelemetryNiaInventories for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/niatelemetryNiaInventoryList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niatelemetry/NiaInventories/{Moid}": {
      "get": {
        "tags": [
          "niatelemetryNiaInventory"
        ],
        "summary": "Read a 'niatelemetry.NiaInventory' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the niatelemetryNiaInventory instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of niatelemetryNiaInventory",
            "schema": {
              "$ref": "#/definitions/niatelemetryNiaInventory"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niatelemetry/NiaLicenseStates": {
      "get": {
        "tags": [
          "niatelemetryNiaLicenseState"
        ],
        "summary": "Read a 'niatelemetry.NiaLicenseState' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of niatelemetryNiaLicenseStates for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/niatelemetryNiaLicenseStateList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/niatelemetry/NiaLicenseStates/{Moid}": {
      "get": {
        "tags": [
          "niatelemetryNiaLicenseState"
        ],
        "summary": "Read a 'niatelemetry.NiaLicenseState' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the niatelemetryNiaLicenseState instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of niatelemetryNiaLicenseState",
            "schema": {
              "$ref": "#/definitions/niatelemetryNiaLicenseState"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ntp/Policies": {
      "post": {
        "tags": [
          "ntpPolicy"
        ],
        "summary": "Create a 'ntp.Policy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "ntpPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ntpPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ntpPolicy"
        ],
        "summary": "Read a 'ntp.Policy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of ntpPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/ntpPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ntp/Policies/{Moid}": {
      "get": {
        "tags": [
          "ntpPolicy"
        ],
        "summary": "Read a 'ntp.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the ntpPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of ntpPolicy",
            "schema": {
              "$ref": "#/definitions/ntpPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ntpPolicy"
        ],
        "summary": "Update a 'ntp.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the ntpPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "ntpPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ntpPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ntpPolicy"
        ],
        "summary": "Update a 'ntp.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the ntpPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "ntpPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ntpPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ntpPolicy"
        ],
        "summary": "Delete a 'ntp.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the ntpPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/organization/Organizations": {
      "post": {
        "tags": [
          "organizationOrganization"
        ],
        "summary": "Create a 'organization.Organization' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "organizationOrganization to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/organizationOrganization"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "organizationOrganization"
        ],
        "summary": "Read a 'organization.Organization' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of organizationOrganizations for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/organizationOrganizationList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/organization/Organizations/{Moid}": {
      "post": {
        "tags": [
          "organizationOrganization"
        ],
        "summary": "Update a 'organization.Organization' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the organizationOrganization instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "organizationOrganization to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/organizationOrganization"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "organizationOrganization"
        ],
        "summary": "Update a 'organization.Organization' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the organizationOrganization instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "organizationOrganization to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/organizationOrganization"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "organizationOrganization"
        ],
        "summary": "Delete a 'organization.Organization' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the organizationOrganization instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "organizationOrganization"
        ],
        "summary": "Read a 'organization.Organization' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the organizationOrganization instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of organizationOrganization",
            "schema": {
              "$ref": "#/definitions/organizationOrganization"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/os/Catalogs": {
      "get": {
        "tags": [
          "osCatalog"
        ],
        "summary": "Read a 'os.Catalog' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of osCatalogs for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/osCatalogList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/os/Catalogs/{Moid}": {
      "get": {
        "tags": [
          "osCatalog"
        ],
        "summary": "Read a 'os.Catalog' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the osCatalog instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of osCatalog",
            "schema": {
              "$ref": "#/definitions/osCatalog"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/os/ConfigurationFiles": {
      "get": {
        "tags": [
          "osConfigurationFile"
        ],
        "summary": "Read a 'os.ConfigurationFile' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of osConfigurationFiles for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/osConfigurationFileList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "osConfigurationFile"
        ],
        "summary": "Create a 'os.ConfigurationFile' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "osConfigurationFile to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/osConfigurationFile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/os/ConfigurationFiles/{Moid}": {
      "get": {
        "tags": [
          "osConfigurationFile"
        ],
        "summary": "Read a 'os.ConfigurationFile' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the osConfigurationFile instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of osConfigurationFile",
            "schema": {
              "$ref": "#/definitions/osConfigurationFile"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "osConfigurationFile"
        ],
        "summary": "Delete a 'os.ConfigurationFile' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the osConfigurationFile instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/os/Installs": {
      "get": {
        "tags": [
          "osInstall"
        ],
        "summary": "Read a 'os.Install' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of osInstalls for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/osInstallList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "osInstall"
        ],
        "summary": "Create a 'os.Install' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "osInstall to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/osInstall"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/os/Installs/{Moid}": {
      "get": {
        "tags": [
          "osInstall"
        ],
        "summary": "Read a 'os.Install' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the osInstall instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of osInstall",
            "schema": {
              "$ref": "#/definitions/osInstall"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/os/OsSupports": {
      "post": {
        "tags": [
          "osOsSupport"
        ],
        "summary": "Create a 'os.OsSupport' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "osOsSupport to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/osOsSupport"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/os/TemplateFiles": {
      "post": {
        "tags": [
          "osTemplateFile"
        ],
        "summary": "Create a 'os.TemplateFile' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "osTemplateFile to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/osTemplateFile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/pci/CoprocessorCards": {
      "get": {
        "tags": [
          "pciCoprocessorCard"
        ],
        "summary": "Read a 'pci.CoprocessorCard' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of pciCoprocessorCards for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/pciCoprocessorCardList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/pci/CoprocessorCards/{Moid}": {
      "get": {
        "tags": [
          "pciCoprocessorCard"
        ],
        "summary": "Read a 'pci.CoprocessorCard' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the pciCoprocessorCard instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of pciCoprocessorCard",
            "schema": {
              "$ref": "#/definitions/pciCoprocessorCard"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/pci/Devices": {
      "get": {
        "tags": [
          "pciDevice"
        ],
        "summary": "Read a 'pci.Device' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of pciDevices for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/pciDeviceList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/pci/Devices/{Moid}": {
      "get": {
        "tags": [
          "pciDevice"
        ],
        "summary": "Read a 'pci.Device' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the pciDevice instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of pciDevice",
            "schema": {
              "$ref": "#/definitions/pciDevice"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "pciDevice"
        ],
        "summary": "Update a 'pci.Device' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the pciDevice instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "pciDevice to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pciDevice"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "pciDevice"
        ],
        "summary": "Update a 'pci.Device' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the pciDevice instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "pciDevice to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pciDevice"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/pci/Links": {
      "get": {
        "tags": [
          "pciLink"
        ],
        "summary": "Read a 'pci.Link' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of pciLinks for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/pciLinkList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/pci/Links/{Moid}": {
      "get": {
        "tags": [
          "pciLink"
        ],
        "summary": "Read a 'pci.Link' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the pciLink instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of pciLink",
            "schema": {
              "$ref": "#/definitions/pciLink"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "pciLink"
        ],
        "summary": "Update a 'pci.Link' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the pciLink instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "pciLink to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pciLink"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "pciLink"
        ],
        "summary": "Update a 'pci.Link' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the pciLink instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "pciLink to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pciLink"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/pci/Switches": {
      "get": {
        "tags": [
          "pciSwitch"
        ],
        "summary": "Read a 'pci.Switch' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of pciSwitches for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/pciSwitchList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/pci/Switches/{Moid}": {
      "get": {
        "tags": [
          "pciSwitch"
        ],
        "summary": "Read a 'pci.Switch' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the pciSwitch instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of pciSwitch",
            "schema": {
              "$ref": "#/definitions/pciSwitch"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "pciSwitch"
        ],
        "summary": "Update a 'pci.Switch' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the pciSwitch instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "pciSwitch to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pciSwitch"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "pciSwitch"
        ],
        "summary": "Update a 'pci.Switch' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the pciSwitch instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "pciSwitch to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pciSwitch"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/port/Groups": {
      "get": {
        "tags": [
          "portGroup"
        ],
        "summary": "Read a 'port.Group' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of portGroups for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/portGroupList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/port/Groups/{Moid}": {
      "get": {
        "tags": [
          "portGroup"
        ],
        "summary": "Read a 'port.Group' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the portGroup instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of portGroup",
            "schema": {
              "$ref": "#/definitions/portGroup"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "portGroup"
        ],
        "summary": "Update a 'port.Group' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the portGroup instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "portGroup to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/portGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "portGroup"
        ],
        "summary": "Update a 'port.Group' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the portGroup instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "portGroup to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/portGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/port/SubGroups": {
      "get": {
        "tags": [
          "portSubGroup"
        ],
        "summary": "Read a 'port.SubGroup' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of portSubGroups for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/portSubGroupList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/port/SubGroups/{Moid}": {
      "get": {
        "tags": [
          "portSubGroup"
        ],
        "summary": "Read a 'port.SubGroup' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the portSubGroup instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of portSubGroup",
            "schema": {
              "$ref": "#/definitions/portSubGroup"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "portSubGroup"
        ],
        "summary": "Update a 'port.SubGroup' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the portSubGroup instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "portSubGroup to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/portSubGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "portSubGroup"
        ],
        "summary": "Update a 'port.SubGroup' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the portSubGroup instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "portSubGroup to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/portSubGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/processor/Units": {
      "get": {
        "tags": [
          "processorUnit"
        ],
        "summary": "Read a 'processor.Unit' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of processorUnits for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/processorUnitList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/processor/Units/{Moid}": {
      "get": {
        "tags": [
          "processorUnit"
        ],
        "summary": "Read a 'processor.Unit' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the processorUnit instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of processorUnit",
            "schema": {
              "$ref": "#/definitions/processorUnit"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "processorUnit"
        ],
        "summary": "Update a 'processor.Unit' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the processorUnit instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "processorUnit to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/processorUnit"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "processorUnit"
        ],
        "summary": "Update a 'processor.Unit' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the processorUnit instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "processorUnit to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/processorUnit"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/recovery/BackupConfigPolicies": {
      "post": {
        "tags": [
          "recoveryBackupConfigPolicy"
        ],
        "summary": "Create a 'recovery.BackupConfigPolicy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "recoveryBackupConfigPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/recoveryBackupConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "recoveryBackupConfigPolicy"
        ],
        "summary": "Read a 'recovery.BackupConfigPolicy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of recoveryBackupConfigPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/recoveryBackupConfigPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/recovery/BackupConfigPolicies/{Moid}": {
      "get": {
        "tags": [
          "recoveryBackupConfigPolicy"
        ],
        "summary": "Read a 'recovery.BackupConfigPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the recoveryBackupConfigPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of recoveryBackupConfigPolicy",
            "schema": {
              "$ref": "#/definitions/recoveryBackupConfigPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "recoveryBackupConfigPolicy"
        ],
        "summary": "Delete a 'recovery.BackupConfigPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the recoveryBackupConfigPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "recoveryBackupConfigPolicy"
        ],
        "summary": "Update a 'recovery.BackupConfigPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the recoveryBackupConfigPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "recoveryBackupConfigPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/recoveryBackupConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "recoveryBackupConfigPolicy"
        ],
        "summary": "Update a 'recovery.BackupConfigPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the recoveryBackupConfigPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "recoveryBackupConfigPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/recoveryBackupConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/recovery/BackupProfiles": {
      "post": {
        "tags": [
          "recoveryBackupProfile"
        ],
        "summary": "Create a 'recovery.BackupProfile' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "recoveryBackupProfile to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/recoveryBackupProfile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "recoveryBackupProfile"
        ],
        "summary": "Read a 'recovery.BackupProfile' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of recoveryBackupProfiles for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/recoveryBackupProfileList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/recovery/BackupProfiles/{Moid}": {
      "get": {
        "tags": [
          "recoveryBackupProfile"
        ],
        "summary": "Read a 'recovery.BackupProfile' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the recoveryBackupProfile instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of recoveryBackupProfile",
            "schema": {
              "$ref": "#/definitions/recoveryBackupProfile"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "recoveryBackupProfile"
        ],
        "summary": "Delete a 'recovery.BackupProfile' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the recoveryBackupProfile instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "recoveryBackupProfile"
        ],
        "summary": "Update a 'recovery.BackupProfile' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the recoveryBackupProfile instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "recoveryBackupProfile to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/recoveryBackupProfile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "recoveryBackupProfile"
        ],
        "summary": "Update a 'recovery.BackupProfile' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the recoveryBackupProfile instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "recoveryBackupProfile to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/recoveryBackupProfile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/recovery/ConfigResults": {
      "get": {
        "tags": [
          "recoveryConfigResult"
        ],
        "summary": "Read a 'recovery.ConfigResult' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of recoveryConfigResults for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/recoveryConfigResultList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/recovery/ConfigResults/{Moid}": {
      "get": {
        "tags": [
          "recoveryConfigResult"
        ],
        "summary": "Read a 'recovery.ConfigResult' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the recoveryConfigResult instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of recoveryConfigResult",
            "schema": {
              "$ref": "#/definitions/recoveryConfigResult"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/recovery/ConfigResultEntries": {
      "get": {
        "tags": [
          "recoveryConfigResultEntry"
        ],
        "summary": "Read a 'recovery.ConfigResultEntry' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of recoveryConfigResultEntries for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/recoveryConfigResultEntryList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/recovery/ConfigResultEntries/{Moid}": {
      "get": {
        "tags": [
          "recoveryConfigResultEntry"
        ],
        "summary": "Read a 'recovery.ConfigResultEntry' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the recoveryConfigResultEntry instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of recoveryConfigResultEntry",
            "schema": {
              "$ref": "#/definitions/recoveryConfigResultEntry"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/recovery/OnDemandBackups": {
      "post": {
        "tags": [
          "recoveryOnDemandBackup"
        ],
        "summary": "Create a 'recovery.OnDemandBackup' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "recoveryOnDemandBackup to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/recoveryOnDemandBackup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "recoveryOnDemandBackup"
        ],
        "summary": "Read a 'recovery.OnDemandBackup' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of recoveryOnDemandBackups for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/recoveryOnDemandBackupList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/recovery/OnDemandBackups/{Moid}": {
      "get": {
        "tags": [
          "recoveryOnDemandBackup"
        ],
        "summary": "Read a 'recovery.OnDemandBackup' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the recoveryOnDemandBackup instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of recoveryOnDemandBackup",
            "schema": {
              "$ref": "#/definitions/recoveryOnDemandBackup"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "recoveryOnDemandBackup"
        ],
        "summary": "Delete a 'recovery.OnDemandBackup' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the recoveryOnDemandBackup instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "recoveryOnDemandBackup"
        ],
        "summary": "Update a 'recovery.OnDemandBackup' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the recoveryOnDemandBackup instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "recoveryOnDemandBackup to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/recoveryOnDemandBackup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "recoveryOnDemandBackup"
        ],
        "summary": "Update a 'recovery.OnDemandBackup' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the recoveryOnDemandBackup instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "recoveryOnDemandBackup to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/recoveryOnDemandBackup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/recovery/Restores": {
      "get": {
        "tags": [
          "recoveryRestore"
        ],
        "summary": "Read a 'recovery.Restore' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of recoveryRestores for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/recoveryRestoreList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "recoveryRestore"
        ],
        "summary": "Create a 'recovery.Restore' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "recoveryRestore to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/recoveryRestore"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/recovery/Restores/{Moid}": {
      "get": {
        "tags": [
          "recoveryRestore"
        ],
        "summary": "Read a 'recovery.Restore' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the recoveryRestore instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of recoveryRestore",
            "schema": {
              "$ref": "#/definitions/recoveryRestore"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "recoveryRestore"
        ],
        "summary": "Delete a 'recovery.Restore' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the recoveryRestore instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/recovery/ScheduleConfigPolicies": {
      "post": {
        "tags": [
          "recoveryScheduleConfigPolicy"
        ],
        "summary": "Create a 'recovery.ScheduleConfigPolicy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "recoveryScheduleConfigPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/recoveryScheduleConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "recoveryScheduleConfigPolicy"
        ],
        "summary": "Read a 'recovery.ScheduleConfigPolicy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of recoveryScheduleConfigPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/recoveryScheduleConfigPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/recovery/ScheduleConfigPolicies/{Moid}": {
      "get": {
        "tags": [
          "recoveryScheduleConfigPolicy"
        ],
        "summary": "Read a 'recovery.ScheduleConfigPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the recoveryScheduleConfigPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of recoveryScheduleConfigPolicy",
            "schema": {
              "$ref": "#/definitions/recoveryScheduleConfigPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "recoveryScheduleConfigPolicy"
        ],
        "summary": "Delete a 'recovery.ScheduleConfigPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the recoveryScheduleConfigPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "recoveryScheduleConfigPolicy"
        ],
        "summary": "Update a 'recovery.ScheduleConfigPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the recoveryScheduleConfigPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "recoveryScheduleConfigPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/recoveryScheduleConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "recoveryScheduleConfigPolicy"
        ],
        "summary": "Update a 'recovery.ScheduleConfigPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the recoveryScheduleConfigPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "recoveryScheduleConfigPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/recoveryScheduleConfigPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/resource/Groups": {
      "post": {
        "tags": [
          "resourceGroup"
        ],
        "summary": "Create a 'resource.Group' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "resourceGroup to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/resourceGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "resourceGroup"
        ],
        "summary": "Read a 'resource.Group' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of resourceGroups for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/resourceGroupList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/resource/Groups/{Moid}": {
      "post": {
        "tags": [
          "resourceGroup"
        ],
        "summary": "Update a 'resource.Group' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the resourceGroup instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "resourceGroup to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/resourceGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "resourceGroup"
        ],
        "summary": "Update a 'resource.Group' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the resourceGroup instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "resourceGroup to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/resourceGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "resourceGroup"
        ],
        "summary": "Delete a 'resource.Group' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the resourceGroup instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "resourceGroup"
        ],
        "summary": "Read a 'resource.Group' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the resourceGroup instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of resourceGroup",
            "schema": {
              "$ref": "#/definitions/resourceGroup"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/resource/GroupMembers": {
      "get": {
        "tags": [
          "resourceGroupMember"
        ],
        "summary": "Read a 'resource.GroupMember' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of resourceGroupMembers for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/resourceGroupMemberList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/resource/GroupMembers/{Moid}": {
      "get": {
        "tags": [
          "resourceGroupMember"
        ],
        "summary": "Read a 'resource.GroupMember' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the resourceGroupMember instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of resourceGroupMember",
            "schema": {
              "$ref": "#/definitions/resourceGroupMember"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/resource/LicenseResourceCounts": {
      "get": {
        "tags": [
          "resourceLicenseResourceCount"
        ],
        "summary": "Read a 'resource.LicenseResourceCount' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of resourceLicenseResourceCounts for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/resourceLicenseResourceCountList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/resource/LicenseResourceCounts/{Moid}": {
      "get": {
        "tags": [
          "resourceLicenseResourceCount"
        ],
        "summary": "Read a 'resource.LicenseResourceCount' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the resourceLicenseResourceCount instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of resourceLicenseResourceCount",
            "schema": {
              "$ref": "#/definitions/resourceLicenseResourceCount"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/resource/Memberships": {
      "get": {
        "tags": [
          "resourceMembership"
        ],
        "summary": "Read a 'resource.Membership' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of resourceMemberships for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/resourceMembershipList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/resource/Memberships/{Moid}": {
      "get": {
        "tags": [
          "resourceMembership"
        ],
        "summary": "Read a 'resource.Membership' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the resourceMembership instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of resourceMembership",
            "schema": {
              "$ref": "#/definitions/resourceMembership"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/resource/MembershipHolders": {
      "get": {
        "tags": [
          "resourceMembershipHolder"
        ],
        "summary": "Read a 'resource.MembershipHolder' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of resourceMembershipHolders for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/resourceMembershipHolderList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/resource/MembershipHolders/{Moid}": {
      "get": {
        "tags": [
          "resourceMembershipHolder"
        ],
        "summary": "Read a 'resource.MembershipHolder' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the resourceMembershipHolder instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of resourceMembershipHolder",
            "schema": {
              "$ref": "#/definitions/resourceMembershipHolder"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/sdcard/Policies": {
      "get": {
        "tags": [
          "sdcardPolicy"
        ],
        "summary": "Read a 'sdcard.Policy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of sdcardPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/sdcardPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "sdcardPolicy"
        ],
        "summary": "Create a 'sdcard.Policy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "sdcardPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sdcardPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/sdcard/Policies/{Moid}": {
      "get": {
        "tags": [
          "sdcardPolicy"
        ],
        "summary": "Read a 'sdcard.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the sdcardPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of sdcardPolicy",
            "schema": {
              "$ref": "#/definitions/sdcardPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "sdcardPolicy"
        ],
        "summary": "Update a 'sdcard.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the sdcardPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "sdcardPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sdcardPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "sdcardPolicy"
        ],
        "summary": "Update a 'sdcard.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the sdcardPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "sdcardPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sdcardPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "sdcardPolicy"
        ],
        "summary": "Delete a 'sdcard.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the sdcardPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/search/SearchItems": {
      "get": {
        "tags": [
          "searchSearchItem"
        ],
        "summary": "Read a 'search.SearchItem' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of searchSearchItems for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/searchSearchItemList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/search/SearchItems/{Moid}": {
      "get": {
        "tags": [
          "searchSearchItem"
        ],
        "summary": "Read a 'search.SearchItem' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the searchSearchItem instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of searchSearchItem",
            "schema": {
              "$ref": "#/definitions/searchSearchItem"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/search/SuggestItems": {
      "post": {
        "tags": [
          "searchSuggestItem"
        ],
        "summary": "Create a 'search.SuggestItem' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "searchSuggestItem to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/searchSuggestItem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/search/TagItems": {
      "get": {
        "tags": [
          "searchTagItem"
        ],
        "summary": "Read a 'search.TagItem' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of searchTagItems for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/searchTagItemList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/search/TagItems/{Moid}": {
      "get": {
        "tags": [
          "searchTagItem"
        ],
        "summary": "Read a 'search.TagItem' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the searchTagItem instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of searchTagItem",
            "schema": {
              "$ref": "#/definitions/searchTagItem"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/security/Units": {
      "get": {
        "tags": [
          "securityUnit"
        ],
        "summary": "Read a 'security.Unit' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of securityUnits for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/securityUnitList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/security/Units/{Moid}": {
      "get": {
        "tags": [
          "securityUnit"
        ],
        "summary": "Read a 'security.Unit' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the securityUnit instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of securityUnit",
            "schema": {
              "$ref": "#/definitions/securityUnit"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "securityUnit"
        ],
        "summary": "Update a 'security.Unit' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the securityUnit instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "securityUnit to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securityUnit"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "securityUnit"
        ],
        "summary": "Update a 'security.Unit' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the securityUnit instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "securityUnit to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securityUnit"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/server/ConfigChangeDetails": {
      "get": {
        "tags": [
          "serverConfigChangeDetail"
        ],
        "summary": "Read a 'server.ConfigChangeDetail' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of serverConfigChangeDetails for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/serverConfigChangeDetailList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/server/ConfigChangeDetails/{Moid}": {
      "get": {
        "tags": [
          "serverConfigChangeDetail"
        ],
        "summary": "Read a 'server.ConfigChangeDetail' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the serverConfigChangeDetail instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of serverConfigChangeDetail",
            "schema": {
              "$ref": "#/definitions/serverConfigChangeDetail"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/server/ConfigImports": {
      "get": {
        "tags": [
          "serverConfigImport"
        ],
        "summary": "Read a 'server.ConfigImport' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of serverConfigImports for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/serverConfigImportList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "serverConfigImport"
        ],
        "summary": "Create a 'server.ConfigImport' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "serverConfigImport to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serverConfigImport"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/server/ConfigImports/{Moid}": {
      "get": {
        "tags": [
          "serverConfigImport"
        ],
        "summary": "Read a 'server.ConfigImport' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the serverConfigImport instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of serverConfigImport",
            "schema": {
              "$ref": "#/definitions/serverConfigImport"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/server/ConfigResults": {
      "get": {
        "tags": [
          "serverConfigResult"
        ],
        "summary": "Read a 'server.ConfigResult' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of serverConfigResults for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/serverConfigResultList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/server/ConfigResults/{Moid}": {
      "get": {
        "tags": [
          "serverConfigResult"
        ],
        "summary": "Read a 'server.ConfigResult' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the serverConfigResult instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of serverConfigResult",
            "schema": {
              "$ref": "#/definitions/serverConfigResult"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/server/ConfigResultEntries": {
      "get": {
        "tags": [
          "serverConfigResultEntry"
        ],
        "summary": "Read a 'server.ConfigResultEntry' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of serverConfigResultEntries for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/serverConfigResultEntryList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/server/ConfigResultEntries/{Moid}": {
      "get": {
        "tags": [
          "serverConfigResultEntry"
        ],
        "summary": "Read a 'server.ConfigResultEntry' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the serverConfigResultEntry instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of serverConfigResultEntry",
            "schema": {
              "$ref": "#/definitions/serverConfigResultEntry"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/server/Profiles": {
      "get": {
        "tags": [
          "serverProfile"
        ],
        "summary": "Read a 'server.Profile' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of serverProfiles for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/serverProfileList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "serverProfile"
        ],
        "summary": "Create a 'server.Profile' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "serverProfile to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serverProfile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/server/Profiles/{Moid}": {
      "get": {
        "tags": [
          "serverProfile"
        ],
        "summary": "Read a 'server.Profile' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the serverProfile instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of serverProfile",
            "schema": {
              "$ref": "#/definitions/serverProfile"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "serverProfile"
        ],
        "summary": "Update a 'server.Profile' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the serverProfile instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "serverProfile to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serverProfile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "serverProfile"
        ],
        "summary": "Update a 'server.Profile' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the serverProfile instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "serverProfile to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serverProfile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "serverProfile"
        ],
        "summary": "Delete a 'server.Profile' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the serverProfile instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/smtp/Policies": {
      "post": {
        "tags": [
          "smtpPolicy"
        ],
        "summary": "Create a 'smtp.Policy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "smtpPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/smtpPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "smtpPolicy"
        ],
        "summary": "Read a 'smtp.Policy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of smtpPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/smtpPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/smtp/Policies/{Moid}": {
      "get": {
        "tags": [
          "smtpPolicy"
        ],
        "summary": "Read a 'smtp.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the smtpPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of smtpPolicy",
            "schema": {
              "$ref": "#/definitions/smtpPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "smtpPolicy"
        ],
        "summary": "Update a 'smtp.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the smtpPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "smtpPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/smtpPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "smtpPolicy"
        ],
        "summary": "Update a 'smtp.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the smtpPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "smtpPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/smtpPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "smtpPolicy"
        ],
        "summary": "Delete a 'smtp.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the smtpPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/snmp/Policies": {
      "post": {
        "tags": [
          "snmpPolicy"
        ],
        "summary": "Create a 'snmp.Policy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "snmpPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/snmpPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "snmpPolicy"
        ],
        "summary": "Read a 'snmp.Policy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of snmpPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/snmpPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/snmp/Policies/{Moid}": {
      "get": {
        "tags": [
          "snmpPolicy"
        ],
        "summary": "Read a 'snmp.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the snmpPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of snmpPolicy",
            "schema": {
              "$ref": "#/definitions/snmpPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "snmpPolicy"
        ],
        "summary": "Update a 'snmp.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the snmpPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "snmpPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/snmpPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "snmpPolicy"
        ],
        "summary": "Update a 'snmp.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the snmpPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "snmpPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/snmpPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "snmpPolicy"
        ],
        "summary": "Delete a 'snmp.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the snmpPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/software/HclMeta": {
      "get": {
        "tags": [
          "softwareHclMeta"
        ],
        "summary": "Read a 'software.HclMeta' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of softwareHclMeta for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/softwareHclMetaList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "softwareHclMeta"
        ],
        "summary": "Create a 'software.HclMeta' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "softwareHclMeta to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/softwareHclMeta"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/software/HclMeta/{Moid}": {
      "get": {
        "tags": [
          "softwareHclMeta"
        ],
        "summary": "Read a 'software.HclMeta' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the softwareHclMeta instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of softwareHclMeta",
            "schema": {
              "$ref": "#/definitions/softwareHclMeta"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "softwareHclMeta"
        ],
        "summary": "Update a 'software.HclMeta' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the softwareHclMeta instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "softwareHclMeta to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/softwareHclMeta"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "softwareHclMeta"
        ],
        "summary": "Update a 'software.HclMeta' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the softwareHclMeta instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "softwareHclMeta to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/softwareHclMeta"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "softwareHclMeta"
        ],
        "summary": "Delete a 'software.HclMeta' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the softwareHclMeta instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/software/HyperflexDistributables": {
      "get": {
        "tags": [
          "softwareHyperflexDistributable"
        ],
        "summary": "Read a 'software.HyperflexDistributable' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of softwareHyperflexDistributables for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/softwareHyperflexDistributableList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "softwareHyperflexDistributable"
        ],
        "summary": "Create a 'software.HyperflexDistributable' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "softwareHyperflexDistributable to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/softwareHyperflexDistributable"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/software/HyperflexDistributables/{Moid}": {
      "get": {
        "tags": [
          "softwareHyperflexDistributable"
        ],
        "summary": "Read a 'software.HyperflexDistributable' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the softwareHyperflexDistributable instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of softwareHyperflexDistributable",
            "schema": {
              "$ref": "#/definitions/softwareHyperflexDistributable"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "softwareHyperflexDistributable"
        ],
        "summary": "Update a 'software.HyperflexDistributable' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the softwareHyperflexDistributable instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "softwareHyperflexDistributable to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/softwareHyperflexDistributable"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "softwareHyperflexDistributable"
        ],
        "summary": "Update a 'software.HyperflexDistributable' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the softwareHyperflexDistributable instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "softwareHyperflexDistributable to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/softwareHyperflexDistributable"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "softwareHyperflexDistributable"
        ],
        "summary": "Delete a 'software.HyperflexDistributable' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the softwareHyperflexDistributable instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/softwarerepository/Authorizations": {
      "post": {
        "tags": [
          "softwarerepositoryAuthorization"
        ],
        "summary": "Create a 'softwarerepository.Authorization' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "softwarerepositoryAuthorization to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/softwarerepositoryAuthorization"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "softwarerepositoryAuthorization"
        ],
        "summary": "Read a 'softwarerepository.Authorization' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of softwarerepositoryAuthorizations for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/softwarerepositoryAuthorizationList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/softwarerepository/Authorizations/{Moid}": {
      "post": {
        "tags": [
          "softwarerepositoryAuthorization"
        ],
        "summary": "Update a 'softwarerepository.Authorization' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the softwarerepositoryAuthorization instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "softwarerepositoryAuthorization to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/softwarerepositoryAuthorization"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "softwarerepositoryAuthorization"
        ],
        "summary": "Update a 'softwarerepository.Authorization' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the softwarerepositoryAuthorization instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "softwarerepositoryAuthorization to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/softwarerepositoryAuthorization"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "softwarerepositoryAuthorization"
        ],
        "summary": "Read a 'softwarerepository.Authorization' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the softwarerepositoryAuthorization instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of softwarerepositoryAuthorization",
            "schema": {
              "$ref": "#/definitions/softwarerepositoryAuthorization"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/softwarerepository/Catalogs": {
      "get": {
        "tags": [
          "softwarerepositoryCatalog"
        ],
        "summary": "Read a 'softwarerepository.Catalog' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of softwarerepositoryCatalogs for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/softwarerepositoryCatalogList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/softwarerepository/Catalogs/{Moid}": {
      "get": {
        "tags": [
          "softwarerepositoryCatalog"
        ],
        "summary": "Read a 'softwarerepository.Catalog' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the softwarerepositoryCatalog instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of softwarerepositoryCatalog",
            "schema": {
              "$ref": "#/definitions/softwarerepositoryCatalog"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/softwarerepository/OperatingSystemFiles": {
      "post": {
        "tags": [
          "softwarerepositoryOperatingSystemFile"
        ],
        "summary": "Create a 'softwarerepository.OperatingSystemFile' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "softwarerepositoryOperatingSystemFile to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/softwarerepositoryOperatingSystemFile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "softwarerepositoryOperatingSystemFile"
        ],
        "summary": "Read a 'softwarerepository.OperatingSystemFile' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of softwarerepositoryOperatingSystemFiles for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/softwarerepositoryOperatingSystemFileList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/softwarerepository/OperatingSystemFiles/{Moid}": {
      "get": {
        "tags": [
          "softwarerepositoryOperatingSystemFile"
        ],
        "summary": "Read a 'softwarerepository.OperatingSystemFile' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the softwarerepositoryOperatingSystemFile instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of softwarerepositoryOperatingSystemFile",
            "schema": {
              "$ref": "#/definitions/softwarerepositoryOperatingSystemFile"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "softwarerepositoryOperatingSystemFile"
        ],
        "summary": "Update a 'softwarerepository.OperatingSystemFile' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the softwarerepositoryOperatingSystemFile instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "softwarerepositoryOperatingSystemFile to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/softwarerepositoryOperatingSystemFile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "softwarerepositoryOperatingSystemFile"
        ],
        "summary": "Update a 'softwarerepository.OperatingSystemFile' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the softwarerepositoryOperatingSystemFile instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "softwarerepositoryOperatingSystemFile to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/softwarerepositoryOperatingSystemFile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "softwarerepositoryOperatingSystemFile"
        ],
        "summary": "Delete a 'softwarerepository.OperatingSystemFile' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the softwarerepositoryOperatingSystemFile instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/sol/Policies": {
      "get": {
        "tags": [
          "solPolicy"
        ],
        "summary": "Read a 'sol.Policy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of solPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/solPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "solPolicy"
        ],
        "summary": "Create a 'sol.Policy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "solPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/solPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/sol/Policies/{Moid}": {
      "get": {
        "tags": [
          "solPolicy"
        ],
        "summary": "Read a 'sol.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the solPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of solPolicy",
            "schema": {
              "$ref": "#/definitions/solPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "solPolicy"
        ],
        "summary": "Update a 'sol.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the solPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "solPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/solPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "solPolicy"
        ],
        "summary": "Update a 'sol.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the solPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "solPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/solPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "solPolicy"
        ],
        "summary": "Delete a 'sol.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the solPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ssh/Policies": {
      "post": {
        "tags": [
          "sshPolicy"
        ],
        "summary": "Create a 'ssh.Policy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "sshPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sshPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "sshPolicy"
        ],
        "summary": "Read a 'ssh.Policy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of sshPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/sshPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ssh/Policies/{Moid}": {
      "get": {
        "tags": [
          "sshPolicy"
        ],
        "summary": "Read a 'ssh.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the sshPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of sshPolicy",
            "schema": {
              "$ref": "#/definitions/sshPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "sshPolicy"
        ],
        "summary": "Update a 'ssh.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the sshPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "sshPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sshPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "sshPolicy"
        ],
        "summary": "Update a 'ssh.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the sshPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "sshPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sshPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "sshPolicy"
        ],
        "summary": "Delete a 'ssh.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the sshPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/Controllers": {
      "get": {
        "tags": [
          "storageController"
        ],
        "summary": "Read a 'storage.Controller' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storageControllers for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storageControllerList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/Controllers/{Moid}": {
      "get": {
        "tags": [
          "storageController"
        ],
        "summary": "Read a 'storage.Controller' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageController instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storageController",
            "schema": {
              "$ref": "#/definitions/storageController"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "storageController"
        ],
        "summary": "Update a 'storage.Controller' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageController instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageController to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageController"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "storageController"
        ],
        "summary": "Update a 'storage.Controller' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageController instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageController to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageController"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/DiskGroupPolicies": {
      "get": {
        "tags": [
          "storageDiskGroupPolicy"
        ],
        "summary": "Read a 'storage.DiskGroupPolicy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storageDiskGroupPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storageDiskGroupPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "storageDiskGroupPolicy"
        ],
        "summary": "Create a 'storage.DiskGroupPolicy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "storageDiskGroupPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageDiskGroupPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/DiskGroupPolicies/{Moid}": {
      "get": {
        "tags": [
          "storageDiskGroupPolicy"
        ],
        "summary": "Read a 'storage.DiskGroupPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageDiskGroupPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storageDiskGroupPolicy",
            "schema": {
              "$ref": "#/definitions/storageDiskGroupPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "storageDiskGroupPolicy"
        ],
        "summary": "Update a 'storage.DiskGroupPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageDiskGroupPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageDiskGroupPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageDiskGroupPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "storageDiskGroupPolicy"
        ],
        "summary": "Update a 'storage.DiskGroupPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageDiskGroupPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageDiskGroupPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageDiskGroupPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "storageDiskGroupPolicy"
        ],
        "summary": "Delete a 'storage.DiskGroupPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageDiskGroupPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/Enclosures": {
      "get": {
        "tags": [
          "storageEnclosure"
        ],
        "summary": "Read a 'storage.Enclosure' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storageEnclosures for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storageEnclosureList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/Enclosures/{Moid}": {
      "get": {
        "tags": [
          "storageEnclosure"
        ],
        "summary": "Read a 'storage.Enclosure' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageEnclosure instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storageEnclosure",
            "schema": {
              "$ref": "#/definitions/storageEnclosure"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "storageEnclosure"
        ],
        "summary": "Update a 'storage.Enclosure' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageEnclosure instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageEnclosure to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageEnclosure"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "storageEnclosure"
        ],
        "summary": "Update a 'storage.Enclosure' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageEnclosure instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageEnclosure to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageEnclosure"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/EnclosureDisks": {
      "get": {
        "tags": [
          "storageEnclosureDisk"
        ],
        "summary": "Read a 'storage.EnclosureDisk' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storageEnclosureDisks for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storageEnclosureDiskList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/EnclosureDisks/{Moid}": {
      "get": {
        "tags": [
          "storageEnclosureDisk"
        ],
        "summary": "Read a 'storage.EnclosureDisk' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageEnclosureDisk instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storageEnclosureDisk",
            "schema": {
              "$ref": "#/definitions/storageEnclosureDisk"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "storageEnclosureDisk"
        ],
        "summary": "Update a 'storage.EnclosureDisk' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageEnclosureDisk instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageEnclosureDisk to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageEnclosureDisk"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "storageEnclosureDisk"
        ],
        "summary": "Update a 'storage.EnclosureDisk' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageEnclosureDisk instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageEnclosureDisk to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageEnclosureDisk"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/EnclosureDiskSlotEps": {
      "get": {
        "tags": [
          "storageEnclosureDiskSlotEp"
        ],
        "summary": "Read a 'storage.EnclosureDiskSlotEp' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storageEnclosureDiskSlotEps for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storageEnclosureDiskSlotEpList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/EnclosureDiskSlotEps/{Moid}": {
      "get": {
        "tags": [
          "storageEnclosureDiskSlotEp"
        ],
        "summary": "Read a 'storage.EnclosureDiskSlotEp' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageEnclosureDiskSlotEp instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storageEnclosureDiskSlotEp",
            "schema": {
              "$ref": "#/definitions/storageEnclosureDiskSlotEp"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "storageEnclosureDiskSlotEp"
        ],
        "summary": "Update a 'storage.EnclosureDiskSlotEp' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageEnclosureDiskSlotEp instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageEnclosureDiskSlotEp to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageEnclosureDiskSlotEp"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "storageEnclosureDiskSlotEp"
        ],
        "summary": "Update a 'storage.EnclosureDiskSlotEp' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageEnclosureDiskSlotEp instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageEnclosureDiskSlotEp to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageEnclosureDiskSlotEp"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/FlexFlashControllers": {
      "get": {
        "tags": [
          "storageFlexFlashController"
        ],
        "summary": "Read a 'storage.FlexFlashController' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storageFlexFlashControllers for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storageFlexFlashControllerList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/FlexFlashControllers/{Moid}": {
      "get": {
        "tags": [
          "storageFlexFlashController"
        ],
        "summary": "Read a 'storage.FlexFlashController' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageFlexFlashController instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storageFlexFlashController",
            "schema": {
              "$ref": "#/definitions/storageFlexFlashController"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "storageFlexFlashController"
        ],
        "summary": "Update a 'storage.FlexFlashController' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageFlexFlashController instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageFlexFlashController to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageFlexFlashController"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "storageFlexFlashController"
        ],
        "summary": "Update a 'storage.FlexFlashController' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageFlexFlashController instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageFlexFlashController to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageFlexFlashController"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/FlexFlashControllerProps": {
      "get": {
        "tags": [
          "storageFlexFlashControllerProps"
        ],
        "summary": "Read a 'storage.FlexFlashControllerProps' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storageFlexFlashControllerProps for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storageFlexFlashControllerPropsList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/FlexFlashControllerProps/{Moid}": {
      "get": {
        "tags": [
          "storageFlexFlashControllerProps"
        ],
        "summary": "Read a 'storage.FlexFlashControllerProps' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageFlexFlashControllerProps instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storageFlexFlashControllerProps",
            "schema": {
              "$ref": "#/definitions/storageFlexFlashControllerProps"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "storageFlexFlashControllerProps"
        ],
        "summary": "Update a 'storage.FlexFlashControllerProps' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageFlexFlashControllerProps instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageFlexFlashControllerProps to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageFlexFlashControllerProps"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "storageFlexFlashControllerProps"
        ],
        "summary": "Update a 'storage.FlexFlashControllerProps' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageFlexFlashControllerProps instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageFlexFlashControllerProps to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageFlexFlashControllerProps"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/FlexFlashPhysicalDrives": {
      "get": {
        "tags": [
          "storageFlexFlashPhysicalDrive"
        ],
        "summary": "Read a 'storage.FlexFlashPhysicalDrive' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storageFlexFlashPhysicalDrives for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storageFlexFlashPhysicalDriveList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/FlexFlashPhysicalDrives/{Moid}": {
      "get": {
        "tags": [
          "storageFlexFlashPhysicalDrive"
        ],
        "summary": "Read a 'storage.FlexFlashPhysicalDrive' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageFlexFlashPhysicalDrive instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storageFlexFlashPhysicalDrive",
            "schema": {
              "$ref": "#/definitions/storageFlexFlashPhysicalDrive"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "storageFlexFlashPhysicalDrive"
        ],
        "summary": "Update a 'storage.FlexFlashPhysicalDrive' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageFlexFlashPhysicalDrive instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageFlexFlashPhysicalDrive to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageFlexFlashPhysicalDrive"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "storageFlexFlashPhysicalDrive"
        ],
        "summary": "Update a 'storage.FlexFlashPhysicalDrive' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageFlexFlashPhysicalDrive instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageFlexFlashPhysicalDrive to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageFlexFlashPhysicalDrive"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/FlexFlashVirtualDrives": {
      "get": {
        "tags": [
          "storageFlexFlashVirtualDrive"
        ],
        "summary": "Read a 'storage.FlexFlashVirtualDrive' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storageFlexFlashVirtualDrives for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storageFlexFlashVirtualDriveList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/FlexFlashVirtualDrives/{Moid}": {
      "get": {
        "tags": [
          "storageFlexFlashVirtualDrive"
        ],
        "summary": "Read a 'storage.FlexFlashVirtualDrive' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageFlexFlashVirtualDrive instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storageFlexFlashVirtualDrive",
            "schema": {
              "$ref": "#/definitions/storageFlexFlashVirtualDrive"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "storageFlexFlashVirtualDrive"
        ],
        "summary": "Update a 'storage.FlexFlashVirtualDrive' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageFlexFlashVirtualDrive instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageFlexFlashVirtualDrive to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageFlexFlashVirtualDrive"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "storageFlexFlashVirtualDrive"
        ],
        "summary": "Update a 'storage.FlexFlashVirtualDrive' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageFlexFlashVirtualDrive instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageFlexFlashVirtualDrive to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageFlexFlashVirtualDrive"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/FlexUtilControllers": {
      "get": {
        "tags": [
          "storageFlexUtilController"
        ],
        "summary": "Read a 'storage.FlexUtilController' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storageFlexUtilControllers for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storageFlexUtilControllerList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/FlexUtilControllers/{Moid}": {
      "get": {
        "tags": [
          "storageFlexUtilController"
        ],
        "summary": "Read a 'storage.FlexUtilController' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageFlexUtilController instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storageFlexUtilController",
            "schema": {
              "$ref": "#/definitions/storageFlexUtilController"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "storageFlexUtilController"
        ],
        "summary": "Update a 'storage.FlexUtilController' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageFlexUtilController instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageFlexUtilController to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageFlexUtilController"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "storageFlexUtilController"
        ],
        "summary": "Update a 'storage.FlexUtilController' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageFlexUtilController instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageFlexUtilController to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageFlexUtilController"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/FlexUtilPhysicalDrives": {
      "get": {
        "tags": [
          "storageFlexUtilPhysicalDrive"
        ],
        "summary": "Read a 'storage.FlexUtilPhysicalDrive' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storageFlexUtilPhysicalDrives for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storageFlexUtilPhysicalDriveList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/FlexUtilPhysicalDrives/{Moid}": {
      "get": {
        "tags": [
          "storageFlexUtilPhysicalDrive"
        ],
        "summary": "Read a 'storage.FlexUtilPhysicalDrive' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageFlexUtilPhysicalDrive instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storageFlexUtilPhysicalDrive",
            "schema": {
              "$ref": "#/definitions/storageFlexUtilPhysicalDrive"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "storageFlexUtilPhysicalDrive"
        ],
        "summary": "Update a 'storage.FlexUtilPhysicalDrive' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageFlexUtilPhysicalDrive instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageFlexUtilPhysicalDrive to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageFlexUtilPhysicalDrive"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "storageFlexUtilPhysicalDrive"
        ],
        "summary": "Update a 'storage.FlexUtilPhysicalDrive' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageFlexUtilPhysicalDrive instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageFlexUtilPhysicalDrive to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageFlexUtilPhysicalDrive"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/FlexUtilVirtualDrives": {
      "get": {
        "tags": [
          "storageFlexUtilVirtualDrive"
        ],
        "summary": "Read a 'storage.FlexUtilVirtualDrive' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storageFlexUtilVirtualDrives for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storageFlexUtilVirtualDriveList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/FlexUtilVirtualDrives/{Moid}": {
      "get": {
        "tags": [
          "storageFlexUtilVirtualDrive"
        ],
        "summary": "Read a 'storage.FlexUtilVirtualDrive' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageFlexUtilVirtualDrive instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storageFlexUtilVirtualDrive",
            "schema": {
              "$ref": "#/definitions/storageFlexUtilVirtualDrive"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "storageFlexUtilVirtualDrive"
        ],
        "summary": "Update a 'storage.FlexUtilVirtualDrive' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageFlexUtilVirtualDrive instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageFlexUtilVirtualDrive to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageFlexUtilVirtualDrive"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "storageFlexUtilVirtualDrive"
        ],
        "summary": "Update a 'storage.FlexUtilVirtualDrive' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageFlexUtilVirtualDrive instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageFlexUtilVirtualDrive to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageFlexUtilVirtualDrive"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/PhysicalDisks": {
      "get": {
        "tags": [
          "storagePhysicalDisk"
        ],
        "summary": "Read a 'storage.PhysicalDisk' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storagePhysicalDisks for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storagePhysicalDiskList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/PhysicalDisks/{Moid}": {
      "get": {
        "tags": [
          "storagePhysicalDisk"
        ],
        "summary": "Read a 'storage.PhysicalDisk' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storagePhysicalDisk instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storagePhysicalDisk",
            "schema": {
              "$ref": "#/definitions/storagePhysicalDisk"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "storagePhysicalDisk"
        ],
        "summary": "Update a 'storage.PhysicalDisk' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storagePhysicalDisk instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storagePhysicalDisk to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storagePhysicalDisk"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "storagePhysicalDisk"
        ],
        "summary": "Update a 'storage.PhysicalDisk' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storagePhysicalDisk instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storagePhysicalDisk to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storagePhysicalDisk"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/PhysicalDiskExtensions": {
      "get": {
        "tags": [
          "storagePhysicalDiskExtension"
        ],
        "summary": "Read a 'storage.PhysicalDiskExtension' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storagePhysicalDiskExtensions for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storagePhysicalDiskExtensionList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/PhysicalDiskExtensions/{Moid}": {
      "get": {
        "tags": [
          "storagePhysicalDiskExtension"
        ],
        "summary": "Read a 'storage.PhysicalDiskExtension' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storagePhysicalDiskExtension instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storagePhysicalDiskExtension",
            "schema": {
              "$ref": "#/definitions/storagePhysicalDiskExtension"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "storagePhysicalDiskExtension"
        ],
        "summary": "Update a 'storage.PhysicalDiskExtension' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storagePhysicalDiskExtension instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storagePhysicalDiskExtension to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storagePhysicalDiskExtension"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "storagePhysicalDiskExtension"
        ],
        "summary": "Update a 'storage.PhysicalDiskExtension' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storagePhysicalDiskExtension instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storagePhysicalDiskExtension to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storagePhysicalDiskExtension"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/PhysicalDiskUsages": {
      "get": {
        "tags": [
          "storagePhysicalDiskUsage"
        ],
        "summary": "Read a 'storage.PhysicalDiskUsage' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storagePhysicalDiskUsages for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storagePhysicalDiskUsageList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/PhysicalDiskUsages/{Moid}": {
      "get": {
        "tags": [
          "storagePhysicalDiskUsage"
        ],
        "summary": "Read a 'storage.PhysicalDiskUsage' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storagePhysicalDiskUsage instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storagePhysicalDiskUsage",
            "schema": {
              "$ref": "#/definitions/storagePhysicalDiskUsage"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "storagePhysicalDiskUsage"
        ],
        "summary": "Update a 'storage.PhysicalDiskUsage' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storagePhysicalDiskUsage instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storagePhysicalDiskUsage to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storagePhysicalDiskUsage"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "storagePhysicalDiskUsage"
        ],
        "summary": "Update a 'storage.PhysicalDiskUsage' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storagePhysicalDiskUsage instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storagePhysicalDiskUsage to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storagePhysicalDiskUsage"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/PureArrays": {
      "get": {
        "tags": [
          "storagePureArray"
        ],
        "summary": "Read a 'storage.PureArray' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storagePureArrays for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storagePureArrayList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/PureArrays/{Moid}": {
      "get": {
        "tags": [
          "storagePureArray"
        ],
        "summary": "Read a 'storage.PureArray' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storagePureArray instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storagePureArray",
            "schema": {
              "$ref": "#/definitions/storagePureArray"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "storagePureArray"
        ],
        "summary": "Update a 'storage.PureArray' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storagePureArray instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storagePureArray to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storagePureArray"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "storagePureArray"
        ],
        "summary": "Update a 'storage.PureArray' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storagePureArray instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storagePureArray to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storagePureArray"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/PureControllers": {
      "get": {
        "tags": [
          "storagePureController"
        ],
        "summary": "Read a 'storage.PureController' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storagePureControllers for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storagePureControllerList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/PureControllers/{Moid}": {
      "get": {
        "tags": [
          "storagePureController"
        ],
        "summary": "Read a 'storage.PureController' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storagePureController instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storagePureController",
            "schema": {
              "$ref": "#/definitions/storagePureController"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/PureDisks": {
      "get": {
        "tags": [
          "storagePureDisk"
        ],
        "summary": "Read a 'storage.PureDisk' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storagePureDisks for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storagePureDiskList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/PureDisks/{Moid}": {
      "get": {
        "tags": [
          "storagePureDisk"
        ],
        "summary": "Read a 'storage.PureDisk' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storagePureDisk instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storagePureDisk",
            "schema": {
              "$ref": "#/definitions/storagePureDisk"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/PureHosts": {
      "get": {
        "tags": [
          "storagePureHost"
        ],
        "summary": "Read a 'storage.PureHost' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storagePureHosts for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storagePureHostList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/PureHosts/{Moid}": {
      "get": {
        "tags": [
          "storagePureHost"
        ],
        "summary": "Read a 'storage.PureHost' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storagePureHost instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storagePureHost",
            "schema": {
              "$ref": "#/definitions/storagePureHost"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/PureHostLuns": {
      "get": {
        "tags": [
          "storagePureHostLun"
        ],
        "summary": "Read a 'storage.PureHostLun' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storagePureHostLuns for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storagePureHostLunList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/PureHostLuns/{Moid}": {
      "get": {
        "tags": [
          "storagePureHostLun"
        ],
        "summary": "Read a 'storage.PureHostLun' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storagePureHostLun instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storagePureHostLun",
            "schema": {
              "$ref": "#/definitions/storagePureHostLun"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/PurePorts": {
      "get": {
        "tags": [
          "storagePurePort"
        ],
        "summary": "Read a 'storage.PurePort' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storagePurePorts for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storagePurePortList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/PurePorts/{Moid}": {
      "get": {
        "tags": [
          "storagePurePort"
        ],
        "summary": "Read a 'storage.PurePort' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storagePurePort instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storagePurePort",
            "schema": {
              "$ref": "#/definitions/storagePurePort"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/PureProtectionGroups": {
      "get": {
        "tags": [
          "storagePureProtectionGroup"
        ],
        "summary": "Read a 'storage.PureProtectionGroup' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storagePureProtectionGroups for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storagePureProtectionGroupList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/PureProtectionGroups/{Moid}": {
      "get": {
        "tags": [
          "storagePureProtectionGroup"
        ],
        "summary": "Read a 'storage.PureProtectionGroup' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storagePureProtectionGroup instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storagePureProtectionGroup",
            "schema": {
              "$ref": "#/definitions/storagePureProtectionGroup"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/PureProtectionGroupSnapshots": {
      "get": {
        "tags": [
          "storagePureProtectionGroupSnapshot"
        ],
        "summary": "Read a 'storage.PureProtectionGroupSnapshot' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storagePureProtectionGroupSnapshots for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storagePureProtectionGroupSnapshotList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/PureProtectionGroupSnapshots/{Moid}": {
      "get": {
        "tags": [
          "storagePureProtectionGroupSnapshot"
        ],
        "summary": "Read a 'storage.PureProtectionGroupSnapshot' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storagePureProtectionGroupSnapshot instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storagePureProtectionGroupSnapshot",
            "schema": {
              "$ref": "#/definitions/storagePureProtectionGroupSnapshot"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/PureReplicationSchedules": {
      "get": {
        "tags": [
          "storagePureReplicationSchedule"
        ],
        "summary": "Read a 'storage.PureReplicationSchedule' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storagePureReplicationSchedules for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storagePureReplicationScheduleList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/PureReplicationSchedules/{Moid}": {
      "get": {
        "tags": [
          "storagePureReplicationSchedule"
        ],
        "summary": "Read a 'storage.PureReplicationSchedule' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storagePureReplicationSchedule instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storagePureReplicationSchedule",
            "schema": {
              "$ref": "#/definitions/storagePureReplicationSchedule"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/PureSnapshotSchedules": {
      "get": {
        "tags": [
          "storagePureSnapshotSchedule"
        ],
        "summary": "Read a 'storage.PureSnapshotSchedule' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storagePureSnapshotSchedules for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storagePureSnapshotScheduleList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/PureSnapshotSchedules/{Moid}": {
      "get": {
        "tags": [
          "storagePureSnapshotSchedule"
        ],
        "summary": "Read a 'storage.PureSnapshotSchedule' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storagePureSnapshotSchedule instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storagePureSnapshotSchedule",
            "schema": {
              "$ref": "#/definitions/storagePureSnapshotSchedule"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/PureVolumes": {
      "get": {
        "tags": [
          "storagePureVolume"
        ],
        "summary": "Read a 'storage.PureVolume' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storagePureVolumes for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storagePureVolumeList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/PureVolumes/{Moid}": {
      "get": {
        "tags": [
          "storagePureVolume"
        ],
        "summary": "Read a 'storage.PureVolume' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storagePureVolume instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storagePureVolume",
            "schema": {
              "$ref": "#/definitions/storagePureVolume"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/PureVolumeSnapshots": {
      "get": {
        "tags": [
          "storagePureVolumeSnapshot"
        ],
        "summary": "Read a 'storage.PureVolumeSnapshot' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storagePureVolumeSnapshots for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storagePureVolumeSnapshotList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/PureVolumeSnapshots/{Moid}": {
      "get": {
        "tags": [
          "storagePureVolumeSnapshot"
        ],
        "summary": "Read a 'storage.PureVolumeSnapshot' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storagePureVolumeSnapshot instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storagePureVolumeSnapshot",
            "schema": {
              "$ref": "#/definitions/storagePureVolumeSnapshot"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/SasExpanders": {
      "get": {
        "tags": [
          "storageSasExpander"
        ],
        "summary": "Read a 'storage.SasExpander' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storageSasExpanders for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storageSasExpanderList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/SasExpanders/{Moid}": {
      "get": {
        "tags": [
          "storageSasExpander"
        ],
        "summary": "Read a 'storage.SasExpander' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageSasExpander instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storageSasExpander",
            "schema": {
              "$ref": "#/definitions/storageSasExpander"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "storageSasExpander"
        ],
        "summary": "Update a 'storage.SasExpander' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageSasExpander instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageSasExpander to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageSasExpander"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "storageSasExpander"
        ],
        "summary": "Update a 'storage.SasExpander' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageSasExpander instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageSasExpander to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageSasExpander"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/SasPorts": {
      "get": {
        "tags": [
          "storageSasPort"
        ],
        "summary": "Read a 'storage.SasPort' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storageSasPorts for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storageSasPortList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/SasPorts/{Moid}": {
      "get": {
        "tags": [
          "storageSasPort"
        ],
        "summary": "Read a 'storage.SasPort' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageSasPort instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storageSasPort",
            "schema": {
              "$ref": "#/definitions/storageSasPort"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "storageSasPort"
        ],
        "summary": "Update a 'storage.SasPort' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageSasPort instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageSasPort to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageSasPort"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "storageSasPort"
        ],
        "summary": "Update a 'storage.SasPort' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageSasPort instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageSasPort to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageSasPort"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/StoragePolicies": {
      "get": {
        "tags": [
          "storageStoragePolicy"
        ],
        "summary": "Read a 'storage.StoragePolicy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storageStoragePolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storageStoragePolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "storageStoragePolicy"
        ],
        "summary": "Create a 'storage.StoragePolicy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "storageStoragePolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageStoragePolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/StoragePolicies/{Moid}": {
      "get": {
        "tags": [
          "storageStoragePolicy"
        ],
        "summary": "Read a 'storage.StoragePolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageStoragePolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storageStoragePolicy",
            "schema": {
              "$ref": "#/definitions/storageStoragePolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "storageStoragePolicy"
        ],
        "summary": "Update a 'storage.StoragePolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageStoragePolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageStoragePolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageStoragePolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "storageStoragePolicy"
        ],
        "summary": "Update a 'storage.StoragePolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageStoragePolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageStoragePolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageStoragePolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "storageStoragePolicy"
        ],
        "summary": "Delete a 'storage.StoragePolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageStoragePolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/VdMemberEps": {
      "get": {
        "tags": [
          "storageVdMemberEp"
        ],
        "summary": "Read a 'storage.VdMemberEp' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storageVdMemberEps for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storageVdMemberEpList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/VdMemberEps/{Moid}": {
      "get": {
        "tags": [
          "storageVdMemberEp"
        ],
        "summary": "Read a 'storage.VdMemberEp' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageVdMemberEp instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storageVdMemberEp",
            "schema": {
              "$ref": "#/definitions/storageVdMemberEp"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "storageVdMemberEp"
        ],
        "summary": "Update a 'storage.VdMemberEp' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageVdMemberEp instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageVdMemberEp to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageVdMemberEp"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "storageVdMemberEp"
        ],
        "summary": "Update a 'storage.VdMemberEp' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageVdMemberEp instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageVdMemberEp to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageVdMemberEp"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/VirtualDrives": {
      "get": {
        "tags": [
          "storageVirtualDrive"
        ],
        "summary": "Read a 'storage.VirtualDrive' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storageVirtualDrives for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storageVirtualDriveList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/VirtualDrives/{Moid}": {
      "get": {
        "tags": [
          "storageVirtualDrive"
        ],
        "summary": "Read a 'storage.VirtualDrive' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageVirtualDrive instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storageVirtualDrive",
            "schema": {
              "$ref": "#/definitions/storageVirtualDrive"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "storageVirtualDrive"
        ],
        "summary": "Update a 'storage.VirtualDrive' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageVirtualDrive instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageVirtualDrive to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageVirtualDrive"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "storageVirtualDrive"
        ],
        "summary": "Update a 'storage.VirtualDrive' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageVirtualDrive instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageVirtualDrive to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageVirtualDrive"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/VirtualDriveExtensions": {
      "get": {
        "tags": [
          "storageVirtualDriveExtension"
        ],
        "summary": "Read a 'storage.VirtualDriveExtension' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of storageVirtualDriveExtensions for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/storageVirtualDriveExtensionList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/storage/VirtualDriveExtensions/{Moid}": {
      "get": {
        "tags": [
          "storageVirtualDriveExtension"
        ],
        "summary": "Read a 'storage.VirtualDriveExtension' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageVirtualDriveExtension instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of storageVirtualDriveExtension",
            "schema": {
              "$ref": "#/definitions/storageVirtualDriveExtension"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "storageVirtualDriveExtension"
        ],
        "summary": "Update a 'storage.VirtualDriveExtension' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageVirtualDriveExtension instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageVirtualDriveExtension to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageVirtualDriveExtension"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "storageVirtualDriveExtension"
        ],
        "summary": "Update a 'storage.VirtualDriveExtension' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the storageVirtualDriveExtension instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "storageVirtualDriveExtension to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageVirtualDriveExtension"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/syslog/Policies": {
      "post": {
        "tags": [
          "syslogPolicy"
        ],
        "summary": "Create a 'syslog.Policy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "syslogPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/syslogPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "syslogPolicy"
        ],
        "summary": "Read a 'syslog.Policy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of syslogPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/syslogPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/syslog/Policies/{Moid}": {
      "get": {
        "tags": [
          "syslogPolicy"
        ],
        "summary": "Read a 'syslog.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the syslogPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of syslogPolicy",
            "schema": {
              "$ref": "#/definitions/syslogPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "syslogPolicy"
        ],
        "summary": "Update a 'syslog.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the syslogPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "syslogPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/syslogPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "syslogPolicy"
        ],
        "summary": "Update a 'syslog.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the syslogPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "syslogPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/syslogPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "syslogPolicy"
        ],
        "summary": "Delete a 'syslog.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the syslogPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tam/AdvisoryCounts": {
      "get": {
        "tags": [
          "tamAdvisoryCount"
        ],
        "summary": "Read a 'tam.AdvisoryCount' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of tamAdvisoryCounts for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/tamAdvisoryCountList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "tamAdvisoryCount"
        ],
        "summary": "Create a 'tam.AdvisoryCount' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "tamAdvisoryCount to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tamAdvisoryCount"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tam/AdvisoryCounts/{Moid}": {
      "get": {
        "tags": [
          "tamAdvisoryCount"
        ],
        "summary": "Read a 'tam.AdvisoryCount' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the tamAdvisoryCount instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of tamAdvisoryCount",
            "schema": {
              "$ref": "#/definitions/tamAdvisoryCount"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "tamAdvisoryCount"
        ],
        "summary": "Update a 'tam.AdvisoryCount' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the tamAdvisoryCount instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "tamAdvisoryCount to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tamAdvisoryCount"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "tamAdvisoryCount"
        ],
        "summary": "Update a 'tam.AdvisoryCount' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the tamAdvisoryCount instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "tamAdvisoryCount to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tamAdvisoryCount"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tamAdvisoryCount"
        ],
        "summary": "Delete a 'tam.AdvisoryCount' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the tamAdvisoryCount instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tam/AdvisoryInfos": {
      "get": {
        "tags": [
          "tamAdvisoryInfo"
        ],
        "summary": "Read a 'tam.AdvisoryInfo' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of tamAdvisoryInfos for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/tamAdvisoryInfoList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "tamAdvisoryInfo"
        ],
        "summary": "Create a 'tam.AdvisoryInfo' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "tamAdvisoryInfo to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tamAdvisoryInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tam/AdvisoryInfos/{Moid}": {
      "get": {
        "tags": [
          "tamAdvisoryInfo"
        ],
        "summary": "Read a 'tam.AdvisoryInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the tamAdvisoryInfo instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of tamAdvisoryInfo",
            "schema": {
              "$ref": "#/definitions/tamAdvisoryInfo"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "tamAdvisoryInfo"
        ],
        "summary": "Update a 'tam.AdvisoryInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the tamAdvisoryInfo instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "tamAdvisoryInfo to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tamAdvisoryInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "tamAdvisoryInfo"
        ],
        "summary": "Update a 'tam.AdvisoryInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the tamAdvisoryInfo instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "tamAdvisoryInfo to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tamAdvisoryInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tamAdvisoryInfo"
        ],
        "summary": "Delete a 'tam.AdvisoryInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the tamAdvisoryInfo instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tam/AdvisoryInstances": {
      "get": {
        "tags": [
          "tamAdvisoryInstance"
        ],
        "summary": "Read a 'tam.AdvisoryInstance' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of tamAdvisoryInstances for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/tamAdvisoryInstanceList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "tamAdvisoryInstance"
        ],
        "summary": "Create a 'tam.AdvisoryInstance' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "tamAdvisoryInstance to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tamAdvisoryInstance"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tam/AdvisoryInstances/{Moid}": {
      "get": {
        "tags": [
          "tamAdvisoryInstance"
        ],
        "summary": "Read a 'tam.AdvisoryInstance' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the tamAdvisoryInstance instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of tamAdvisoryInstance",
            "schema": {
              "$ref": "#/definitions/tamAdvisoryInstance"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "tamAdvisoryInstance"
        ],
        "summary": "Update a 'tam.AdvisoryInstance' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the tamAdvisoryInstance instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "tamAdvisoryInstance to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tamAdvisoryInstance"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "tamAdvisoryInstance"
        ],
        "summary": "Update a 'tam.AdvisoryInstance' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the tamAdvisoryInstance instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "tamAdvisoryInstance to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tamAdvisoryInstance"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tamAdvisoryInstance"
        ],
        "summary": "Delete a 'tam.AdvisoryInstance' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the tamAdvisoryInstance instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tam/SecurityAdvisories": {
      "get": {
        "tags": [
          "tamSecurityAdvisory"
        ],
        "summary": "Read a 'tam.SecurityAdvisory' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of tamSecurityAdvisories for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/tamSecurityAdvisoryList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "tamSecurityAdvisory"
        ],
        "summary": "Create a 'tam.SecurityAdvisory' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "tamSecurityAdvisory to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tamSecurityAdvisory"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tam/SecurityAdvisories/{Moid}": {
      "get": {
        "tags": [
          "tamSecurityAdvisory"
        ],
        "summary": "Read a 'tam.SecurityAdvisory' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the tamSecurityAdvisory instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of tamSecurityAdvisory",
            "schema": {
              "$ref": "#/definitions/tamSecurityAdvisory"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "tamSecurityAdvisory"
        ],
        "summary": "Update a 'tam.SecurityAdvisory' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the tamSecurityAdvisory instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "tamSecurityAdvisory to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tamSecurityAdvisory"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "tamSecurityAdvisory"
        ],
        "summary": "Update a 'tam.SecurityAdvisory' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the tamSecurityAdvisory instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "tamSecurityAdvisory to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tamSecurityAdvisory"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tamSecurityAdvisory"
        ],
        "summary": "Delete a 'tam.SecurityAdvisory' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the tamSecurityAdvisory instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/task/PureStorageScopedInventories": {
      "post": {
        "tags": [
          "taskPureStorageScopedInventory"
        ],
        "summary": "Create a 'task.PureStorageScopedInventory' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "taskPureStorageScopedInventory to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/taskPureStorageScopedInventory"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/telemetry/TimeSeries": {
      "post": {
        "tags": [
          "telemetryTimeSeries"
        ],
        "summary": "Create a 'telemetry.TimeSeries' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "telemetryTimeSeries to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/telemetryTimeSeries"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "telemetryTimeSeries"
        ],
        "summary": "Read a 'telemetry.TimeSeries' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of telemetryTimeSeries for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/telemetryTimeSeriesList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/telemetry/TimeSeries/{Moid}": {
      "get": {
        "tags": [
          "telemetryTimeSeries"
        ],
        "summary": "Read a 'telemetry.TimeSeries' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the telemetryTimeSeries instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of telemetryTimeSeries",
            "schema": {
              "$ref": "#/definitions/telemetryTimeSeries"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/terminal/AuditLogs": {
      "get": {
        "tags": [
          "terminalAuditLog"
        ],
        "summary": "Read a 'terminal.AuditLog' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of terminalAuditLogs for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/terminalAuditLogList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/terminal/AuditLogs/{Moid}": {
      "get": {
        "tags": [
          "terminalAuditLog"
        ],
        "summary": "Read a 'terminal.AuditLog' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the terminalAuditLog instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of terminalAuditLog",
            "schema": {
              "$ref": "#/definitions/terminalAuditLog"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/top/Systems": {
      "get": {
        "tags": [
          "topSystem"
        ],
        "summary": "Read a 'top.System' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of topSystems for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/topSystemList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/top/Systems/{Moid}": {
      "get": {
        "tags": [
          "topSystem"
        ],
        "summary": "Read a 'top.System' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the topSystem instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of topSystem",
            "schema": {
              "$ref": "#/definitions/topSystem"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "topSystem"
        ],
        "summary": "Update a 'top.System' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the topSystem instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "topSystem to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/topSystem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "topSystem"
        ],
        "summary": "Update a 'top.System' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the topSystem instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "topSystem to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/topSystem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ucsd/BackupInfos": {
      "get": {
        "tags": [
          "ucsdBackupInfo"
        ],
        "summary": "Read a 'ucsd.BackupInfo' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of ucsdBackupInfos for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/ucsdBackupInfoList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ucsd/BackupInfos/{Moid}": {
      "get": {
        "tags": [
          "ucsdBackupInfo"
        ],
        "summary": "Read a 'ucsd.BackupInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the ucsdBackupInfo instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of ucsdBackupInfo",
            "schema": {
              "$ref": "#/definitions/ucsdBackupInfo"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ucsdBackupInfo"
        ],
        "summary": "Delete a 'ucsd.BackupInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the ucsdBackupInfo instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vmedia/Policies": {
      "post": {
        "tags": [
          "vmediaPolicy"
        ],
        "summary": "Create a 'vmedia.Policy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "vmediaPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vmediaPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "vmediaPolicy"
        ],
        "summary": "Read a 'vmedia.Policy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of vmediaPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/vmediaPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vmedia/Policies/{Moid}": {
      "get": {
        "tags": [
          "vmediaPolicy"
        ],
        "summary": "Read a 'vmedia.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vmediaPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of vmediaPolicy",
            "schema": {
              "$ref": "#/definitions/vmediaPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "vmediaPolicy"
        ],
        "summary": "Update a 'vmedia.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vmediaPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "vmediaPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vmediaPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "vmediaPolicy"
        ],
        "summary": "Update a 'vmedia.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vmediaPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "vmediaPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vmediaPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "vmediaPolicy"
        ],
        "summary": "Delete a 'vmedia.Policy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vmediaPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vnic/EthAdapterPolicies": {
      "get": {
        "tags": [
          "vnicEthAdapterPolicy"
        ],
        "summary": "Read a 'vnic.EthAdapterPolicy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of vnicEthAdapterPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/vnicEthAdapterPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "vnicEthAdapterPolicy"
        ],
        "summary": "Create a 'vnic.EthAdapterPolicy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "vnicEthAdapterPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vnicEthAdapterPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vnic/EthAdapterPolicies/{Moid}": {
      "get": {
        "tags": [
          "vnicEthAdapterPolicy"
        ],
        "summary": "Read a 'vnic.EthAdapterPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicEthAdapterPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of vnicEthAdapterPolicy",
            "schema": {
              "$ref": "#/definitions/vnicEthAdapterPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "vnicEthAdapterPolicy"
        ],
        "summary": "Update a 'vnic.EthAdapterPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicEthAdapterPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "vnicEthAdapterPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vnicEthAdapterPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "vnicEthAdapterPolicy"
        ],
        "summary": "Update a 'vnic.EthAdapterPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicEthAdapterPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "vnicEthAdapterPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vnicEthAdapterPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "vnicEthAdapterPolicy"
        ],
        "summary": "Delete a 'vnic.EthAdapterPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicEthAdapterPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vnic/EthIfs": {
      "get": {
        "tags": [
          "vnicEthIf"
        ],
        "summary": "Read a 'vnic.EthIf' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of vnicEthIfs for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/vnicEthIfList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "vnicEthIf"
        ],
        "summary": "Create a 'vnic.EthIf' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "vnicEthIf to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vnicEthIf"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vnic/EthIfs/{Moid}": {
      "get": {
        "tags": [
          "vnicEthIf"
        ],
        "summary": "Read a 'vnic.EthIf' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicEthIf instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of vnicEthIf",
            "schema": {
              "$ref": "#/definitions/vnicEthIf"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "vnicEthIf"
        ],
        "summary": "Update a 'vnic.EthIf' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicEthIf instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "vnicEthIf to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vnicEthIf"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "vnicEthIf"
        ],
        "summary": "Update a 'vnic.EthIf' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicEthIf instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "vnicEthIf to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vnicEthIf"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "vnicEthIf"
        ],
        "summary": "Delete a 'vnic.EthIf' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicEthIf instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vnic/EthNetworkPolicies": {
      "get": {
        "tags": [
          "vnicEthNetworkPolicy"
        ],
        "summary": "Read a 'vnic.EthNetworkPolicy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of vnicEthNetworkPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/vnicEthNetworkPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "vnicEthNetworkPolicy"
        ],
        "summary": "Create a 'vnic.EthNetworkPolicy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "vnicEthNetworkPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vnicEthNetworkPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vnic/EthNetworkPolicies/{Moid}": {
      "get": {
        "tags": [
          "vnicEthNetworkPolicy"
        ],
        "summary": "Read a 'vnic.EthNetworkPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicEthNetworkPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of vnicEthNetworkPolicy",
            "schema": {
              "$ref": "#/definitions/vnicEthNetworkPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "vnicEthNetworkPolicy"
        ],
        "summary": "Update a 'vnic.EthNetworkPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicEthNetworkPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "vnicEthNetworkPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vnicEthNetworkPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "vnicEthNetworkPolicy"
        ],
        "summary": "Update a 'vnic.EthNetworkPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicEthNetworkPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "vnicEthNetworkPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vnicEthNetworkPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "vnicEthNetworkPolicy"
        ],
        "summary": "Delete a 'vnic.EthNetworkPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicEthNetworkPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vnic/EthQosPolicies": {
      "get": {
        "tags": [
          "vnicEthQosPolicy"
        ],
        "summary": "Read a 'vnic.EthQosPolicy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of vnicEthQosPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/vnicEthQosPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "vnicEthQosPolicy"
        ],
        "summary": "Create a 'vnic.EthQosPolicy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "vnicEthQosPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vnicEthQosPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vnic/EthQosPolicies/{Moid}": {
      "get": {
        "tags": [
          "vnicEthQosPolicy"
        ],
        "summary": "Read a 'vnic.EthQosPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicEthQosPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of vnicEthQosPolicy",
            "schema": {
              "$ref": "#/definitions/vnicEthQosPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "vnicEthQosPolicy"
        ],
        "summary": "Update a 'vnic.EthQosPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicEthQosPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "vnicEthQosPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vnicEthQosPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "vnicEthQosPolicy"
        ],
        "summary": "Update a 'vnic.EthQosPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicEthQosPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "vnicEthQosPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vnicEthQosPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "vnicEthQosPolicy"
        ],
        "summary": "Delete a 'vnic.EthQosPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicEthQosPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vnic/FcAdapterPolicies": {
      "get": {
        "tags": [
          "vnicFcAdapterPolicy"
        ],
        "summary": "Read a 'vnic.FcAdapterPolicy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of vnicFcAdapterPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/vnicFcAdapterPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "vnicFcAdapterPolicy"
        ],
        "summary": "Create a 'vnic.FcAdapterPolicy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "vnicFcAdapterPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vnicFcAdapterPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vnic/FcAdapterPolicies/{Moid}": {
      "get": {
        "tags": [
          "vnicFcAdapterPolicy"
        ],
        "summary": "Read a 'vnic.FcAdapterPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicFcAdapterPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of vnicFcAdapterPolicy",
            "schema": {
              "$ref": "#/definitions/vnicFcAdapterPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "vnicFcAdapterPolicy"
        ],
        "summary": "Update a 'vnic.FcAdapterPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicFcAdapterPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "vnicFcAdapterPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vnicFcAdapterPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "vnicFcAdapterPolicy"
        ],
        "summary": "Update a 'vnic.FcAdapterPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicFcAdapterPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "vnicFcAdapterPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vnicFcAdapterPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "vnicFcAdapterPolicy"
        ],
        "summary": "Delete a 'vnic.FcAdapterPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicFcAdapterPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vnic/FcIfs": {
      "get": {
        "tags": [
          "vnicFcIf"
        ],
        "summary": "Read a 'vnic.FcIf' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of vnicFcIfs for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/vnicFcIfList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "vnicFcIf"
        ],
        "summary": "Create a 'vnic.FcIf' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "vnicFcIf to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vnicFcIf"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vnic/FcIfs/{Moid}": {
      "get": {
        "tags": [
          "vnicFcIf"
        ],
        "summary": "Read a 'vnic.FcIf' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicFcIf instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of vnicFcIf",
            "schema": {
              "$ref": "#/definitions/vnicFcIf"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "vnicFcIf"
        ],
        "summary": "Update a 'vnic.FcIf' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicFcIf instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "vnicFcIf to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vnicFcIf"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "vnicFcIf"
        ],
        "summary": "Update a 'vnic.FcIf' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicFcIf instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "vnicFcIf to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vnicFcIf"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "vnicFcIf"
        ],
        "summary": "Delete a 'vnic.FcIf' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicFcIf instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vnic/FcNetworkPolicies": {
      "get": {
        "tags": [
          "vnicFcNetworkPolicy"
        ],
        "summary": "Read a 'vnic.FcNetworkPolicy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of vnicFcNetworkPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/vnicFcNetworkPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "vnicFcNetworkPolicy"
        ],
        "summary": "Create a 'vnic.FcNetworkPolicy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "vnicFcNetworkPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vnicFcNetworkPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vnic/FcNetworkPolicies/{Moid}": {
      "get": {
        "tags": [
          "vnicFcNetworkPolicy"
        ],
        "summary": "Read a 'vnic.FcNetworkPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicFcNetworkPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of vnicFcNetworkPolicy",
            "schema": {
              "$ref": "#/definitions/vnicFcNetworkPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "vnicFcNetworkPolicy"
        ],
        "summary": "Update a 'vnic.FcNetworkPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicFcNetworkPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "vnicFcNetworkPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vnicFcNetworkPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "vnicFcNetworkPolicy"
        ],
        "summary": "Update a 'vnic.FcNetworkPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicFcNetworkPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "vnicFcNetworkPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vnicFcNetworkPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "vnicFcNetworkPolicy"
        ],
        "summary": "Delete a 'vnic.FcNetworkPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicFcNetworkPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vnic/FcQosPolicies": {
      "get": {
        "tags": [
          "vnicFcQosPolicy"
        ],
        "summary": "Read a 'vnic.FcQosPolicy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of vnicFcQosPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/vnicFcQosPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "vnicFcQosPolicy"
        ],
        "summary": "Create a 'vnic.FcQosPolicy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "vnicFcQosPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vnicFcQosPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vnic/FcQosPolicies/{Moid}": {
      "get": {
        "tags": [
          "vnicFcQosPolicy"
        ],
        "summary": "Read a 'vnic.FcQosPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicFcQosPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of vnicFcQosPolicy",
            "schema": {
              "$ref": "#/definitions/vnicFcQosPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "vnicFcQosPolicy"
        ],
        "summary": "Update a 'vnic.FcQosPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicFcQosPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "vnicFcQosPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vnicFcQosPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "vnicFcQosPolicy"
        ],
        "summary": "Update a 'vnic.FcQosPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicFcQosPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "vnicFcQosPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vnicFcQosPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "vnicFcQosPolicy"
        ],
        "summary": "Delete a 'vnic.FcQosPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicFcQosPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vnic/LanConnectivityPolicies": {
      "get": {
        "tags": [
          "vnicLanConnectivityPolicy"
        ],
        "summary": "Read a 'vnic.LanConnectivityPolicy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of vnicLanConnectivityPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/vnicLanConnectivityPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "vnicLanConnectivityPolicy"
        ],
        "summary": "Create a 'vnic.LanConnectivityPolicy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "vnicLanConnectivityPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vnicLanConnectivityPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vnic/LanConnectivityPolicies/{Moid}": {
      "get": {
        "tags": [
          "vnicLanConnectivityPolicy"
        ],
        "summary": "Read a 'vnic.LanConnectivityPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicLanConnectivityPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of vnicLanConnectivityPolicy",
            "schema": {
              "$ref": "#/definitions/vnicLanConnectivityPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "vnicLanConnectivityPolicy"
        ],
        "summary": "Update a 'vnic.LanConnectivityPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicLanConnectivityPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "vnicLanConnectivityPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vnicLanConnectivityPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "vnicLanConnectivityPolicy"
        ],
        "summary": "Update a 'vnic.LanConnectivityPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicLanConnectivityPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "vnicLanConnectivityPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vnicLanConnectivityPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "vnicLanConnectivityPolicy"
        ],
        "summary": "Delete a 'vnic.LanConnectivityPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicLanConnectivityPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vnic/SanConnectivityPolicies": {
      "get": {
        "tags": [
          "vnicSanConnectivityPolicy"
        ],
        "summary": "Read a 'vnic.SanConnectivityPolicy' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of vnicSanConnectivityPolicies for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/vnicSanConnectivityPolicyList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "vnicSanConnectivityPolicy"
        ],
        "summary": "Create a 'vnic.SanConnectivityPolicy' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "vnicSanConnectivityPolicy to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vnicSanConnectivityPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vnic/SanConnectivityPolicies/{Moid}": {
      "get": {
        "tags": [
          "vnicSanConnectivityPolicy"
        ],
        "summary": "Read a 'vnic.SanConnectivityPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicSanConnectivityPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of vnicSanConnectivityPolicy",
            "schema": {
              "$ref": "#/definitions/vnicSanConnectivityPolicy"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "vnicSanConnectivityPolicy"
        ],
        "summary": "Update a 'vnic.SanConnectivityPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicSanConnectivityPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "vnicSanConnectivityPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vnicSanConnectivityPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "vnicSanConnectivityPolicy"
        ],
        "summary": "Update a 'vnic.SanConnectivityPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicSanConnectivityPolicy instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "vnicSanConnectivityPolicy to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vnicSanConnectivityPolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "vnicSanConnectivityPolicy"
        ],
        "summary": "Delete a 'vnic.SanConnectivityPolicy' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the vnicSanConnectivityPolicy instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/workflow/BatchApiExecutors": {
      "get": {
        "tags": [
          "workflowBatchApiExecutor"
        ],
        "summary": "Read a 'workflow.BatchApiExecutor' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of workflowBatchApiExecutors for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/workflowBatchApiExecutorList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "workflowBatchApiExecutor"
        ],
        "summary": "Create a 'workflow.BatchApiExecutor' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "workflowBatchApiExecutor to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/workflowBatchApiExecutor"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/workflow/BatchApiExecutors/{Moid}": {
      "get": {
        "tags": [
          "workflowBatchApiExecutor"
        ],
        "summary": "Read a 'workflow.BatchApiExecutor' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the workflowBatchApiExecutor instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of workflowBatchApiExecutor",
            "schema": {
              "$ref": "#/definitions/workflowBatchApiExecutor"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "workflowBatchApiExecutor"
        ],
        "summary": "Update a 'workflow.BatchApiExecutor' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the workflowBatchApiExecutor instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "workflowBatchApiExecutor to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/workflowBatchApiExecutor"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "workflowBatchApiExecutor"
        ],
        "summary": "Update a 'workflow.BatchApiExecutor' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the workflowBatchApiExecutor instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "workflowBatchApiExecutor to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/workflowBatchApiExecutor"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "workflowBatchApiExecutor"
        ],
        "summary": "Delete a 'workflow.BatchApiExecutor' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the workflowBatchApiExecutor instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/workflow/BuildTaskMeta": {
      "get": {
        "tags": [
          "workflowBuildTaskMeta"
        ],
        "summary": "Read a 'workflow.BuildTaskMeta' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of workflowBuildTaskMeta for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/workflowBuildTaskMetaList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/workflow/BuildTaskMeta/{Moid}": {
      "get": {
        "tags": [
          "workflowBuildTaskMeta"
        ],
        "summary": "Read a 'workflow.BuildTaskMeta' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the workflowBuildTaskMeta instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of workflowBuildTaskMeta",
            "schema": {
              "$ref": "#/definitions/workflowBuildTaskMeta"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/workflow/BuildTaskMetaOwners": {
      "get": {
        "tags": [
          "workflowBuildTaskMetaOwner"
        ],
        "summary": "Read a 'workflow.BuildTaskMetaOwner' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of workflowBuildTaskMetaOwners for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/workflowBuildTaskMetaOwnerList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/workflow/BuildTaskMetaOwners/{Moid}": {
      "get": {
        "tags": [
          "workflowBuildTaskMetaOwner"
        ],
        "summary": "Read a 'workflow.BuildTaskMetaOwner' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the workflowBuildTaskMetaOwner instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of workflowBuildTaskMetaOwner",
            "schema": {
              "$ref": "#/definitions/workflowBuildTaskMetaOwner"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/workflow/Catalogs": {
      "get": {
        "tags": [
          "workflowCatalog"
        ],
        "summary": "Read a 'workflow.Catalog' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of workflowCatalogs for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/workflowCatalogList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/workflow/Catalogs/{Moid}": {
      "get": {
        "tags": [
          "workflowCatalog"
        ],
        "summary": "Read a 'workflow.Catalog' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the workflowCatalog instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of workflowCatalog",
            "schema": {
              "$ref": "#/definitions/workflowCatalog"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/workflow/CustomDataTypeDefinitions": {
      "get": {
        "tags": [
          "workflowCustomDataTypeDefinition"
        ],
        "summary": "Read a 'workflow.CustomDataTypeDefinition' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of workflowCustomDataTypeDefinitions for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/workflowCustomDataTypeDefinitionList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "workflowCustomDataTypeDefinition"
        ],
        "summary": "Create a 'workflow.CustomDataTypeDefinition' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "workflowCustomDataTypeDefinition to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/workflowCustomDataTypeDefinition"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/workflow/CustomDataTypeDefinitions/{Moid}": {
      "get": {
        "tags": [
          "workflowCustomDataTypeDefinition"
        ],
        "summary": "Read a 'workflow.CustomDataTypeDefinition' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the workflowCustomDataTypeDefinition instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of workflowCustomDataTypeDefinition",
            "schema": {
              "$ref": "#/definitions/workflowCustomDataTypeDefinition"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "workflowCustomDataTypeDefinition"
        ],
        "summary": "Update a 'workflow.CustomDataTypeDefinition' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the workflowCustomDataTypeDefinition instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "workflowCustomDataTypeDefinition to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/workflowCustomDataTypeDefinition"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "workflowCustomDataTypeDefinition"
        ],
        "summary": "Update a 'workflow.CustomDataTypeDefinition' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the workflowCustomDataTypeDefinition instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "workflowCustomDataTypeDefinition to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/workflowCustomDataTypeDefinition"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "workflowCustomDataTypeDefinition"
        ],
        "summary": "Delete a 'workflow.CustomDataTypeDefinition' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the workflowCustomDataTypeDefinition instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/workflow/PendingDynamicWorkflowInfos": {
      "get": {
        "tags": [
          "workflowPendingDynamicWorkflowInfo"
        ],
        "summary": "Read a 'workflow.PendingDynamicWorkflowInfo' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of workflowPendingDynamicWorkflowInfos for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/workflowPendingDynamicWorkflowInfoList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/workflow/PendingDynamicWorkflowInfos/{Moid}": {
      "get": {
        "tags": [
          "workflowPendingDynamicWorkflowInfo"
        ],
        "summary": "Read a 'workflow.PendingDynamicWorkflowInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the workflowPendingDynamicWorkflowInfo instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of workflowPendingDynamicWorkflowInfo",
            "schema": {
              "$ref": "#/definitions/workflowPendingDynamicWorkflowInfo"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/workflow/TaskDefinitions": {
      "get": {
        "tags": [
          "workflowTaskDefinition"
        ],
        "summary": "Read a 'workflow.TaskDefinition' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of workflowTaskDefinitions for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/workflowTaskDefinitionList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "workflowTaskDefinition"
        ],
        "summary": "Create a 'workflow.TaskDefinition' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "workflowTaskDefinition to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/workflowTaskDefinition"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/workflow/TaskDefinitions/{Moid}": {
      "get": {
        "tags": [
          "workflowTaskDefinition"
        ],
        "summary": "Read a 'workflow.TaskDefinition' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the workflowTaskDefinition instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of workflowTaskDefinition",
            "schema": {
              "$ref": "#/definitions/workflowTaskDefinition"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "workflowTaskDefinition"
        ],
        "summary": "Update a 'workflow.TaskDefinition' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the workflowTaskDefinition instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "workflowTaskDefinition to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/workflowTaskDefinition"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "workflowTaskDefinition"
        ],
        "summary": "Update a 'workflow.TaskDefinition' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the workflowTaskDefinition instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "workflowTaskDefinition to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/workflowTaskDefinition"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "workflowTaskDefinition"
        ],
        "summary": "Delete a 'workflow.TaskDefinition' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the workflowTaskDefinition instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/workflow/TaskInfos": {
      "get": {
        "tags": [
          "workflowTaskInfo"
        ],
        "summary": "Read a 'workflow.TaskInfo' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of workflowTaskInfos for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/workflowTaskInfoList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/workflow/TaskInfos/{Moid}": {
      "get": {
        "tags": [
          "workflowTaskInfo"
        ],
        "summary": "Read a 'workflow.TaskInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the workflowTaskInfo instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of workflowTaskInfo",
            "schema": {
              "$ref": "#/definitions/workflowTaskInfo"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "workflowTaskInfo"
        ],
        "summary": "Update a 'workflow.TaskInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the workflowTaskInfo instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "workflowTaskInfo to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/workflowTaskInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "workflowTaskInfo"
        ],
        "summary": "Update a 'workflow.TaskInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the workflowTaskInfo instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "workflowTaskInfo to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/workflowTaskInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/workflow/TaskMeta": {
      "get": {
        "tags": [
          "workflowTaskMeta"
        ],
        "summary": "Read a 'workflow.TaskMeta' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of workflowTaskMeta for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/workflowTaskMetaList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/workflow/TaskMeta/{Moid}": {
      "get": {
        "tags": [
          "workflowTaskMeta"
        ],
        "summary": "Read a 'workflow.TaskMeta' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the workflowTaskMeta instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of workflowTaskMeta",
            "schema": {
              "$ref": "#/definitions/workflowTaskMeta"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/workflow/WorkflowDefinitions": {
      "get": {
        "tags": [
          "workflowWorkflowDefinition"
        ],
        "summary": "Read a 'workflow.WorkflowDefinition' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of workflowWorkflowDefinitions for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/workflowWorkflowDefinitionList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "workflowWorkflowDefinition"
        ],
        "summary": "Create a 'workflow.WorkflowDefinition' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "workflowWorkflowDefinition to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/workflowWorkflowDefinition"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/workflow/WorkflowDefinitions/{Moid}": {
      "get": {
        "tags": [
          "workflowWorkflowDefinition"
        ],
        "summary": "Read a 'workflow.WorkflowDefinition' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the workflowWorkflowDefinition instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of workflowWorkflowDefinition",
            "schema": {
              "$ref": "#/definitions/workflowWorkflowDefinition"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "workflowWorkflowDefinition"
        ],
        "summary": "Update a 'workflow.WorkflowDefinition' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the workflowWorkflowDefinition instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "workflowWorkflowDefinition to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/workflowWorkflowDefinition"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "workflowWorkflowDefinition"
        ],
        "summary": "Update a 'workflow.WorkflowDefinition' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the workflowWorkflowDefinition instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "workflowWorkflowDefinition to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/workflowWorkflowDefinition"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "workflowWorkflowDefinition"
        ],
        "summary": "Delete a 'workflow.WorkflowDefinition' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the workflowWorkflowDefinition instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/workflow/WorkflowInfos": {
      "get": {
        "tags": [
          "workflowWorkflowInfo"
        ],
        "summary": "Read a 'workflow.WorkflowInfo' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of workflowWorkflowInfos for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/workflowWorkflowInfoList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "workflowWorkflowInfo"
        ],
        "summary": "Create a 'workflow.WorkflowInfo' resource.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "workflowWorkflowInfo to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/workflowWorkflowInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/workflow/WorkflowInfos/{Moid}": {
      "get": {
        "tags": [
          "workflowWorkflowInfo"
        ],
        "summary": "Read a 'workflow.WorkflowInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the workflowWorkflowInfo instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of workflowWorkflowInfo",
            "schema": {
              "$ref": "#/definitions/workflowWorkflowInfo"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "workflowWorkflowInfo"
        ],
        "summary": "Update a 'workflow.WorkflowInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the workflowWorkflowInfo instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "workflowWorkflowInfo to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/workflowWorkflowInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "workflowWorkflowInfo"
        ],
        "summary": "Update a 'workflow.WorkflowInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the workflowWorkflowInfo instance.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "workflowWorkflowInfo to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/workflowWorkflowInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "workflowWorkflowInfo"
        ],
        "summary": "Delete a 'workflow.WorkflowInfo' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the workflowWorkflowInfo instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/workflow/WorkflowMeta": {
      "get": {
        "tags": [
          "workflowWorkflowMeta"
        ],
        "summary": "Read a 'workflow.WorkflowMeta' resource.",
        "parameters": [
          {
            "name": "$count",
            "in": "query",
            "description": "The\u00a0$count query option allows clients to request a count of the matching resources.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "description": "The\u00a0$inlinecount query option allows clients to request an inline count of the matching resources included with the resources in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of documents to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of documents to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter criteria for documents to return. A URI with a $filter System Query Option identifies a\nsubset of the Entries from the Collection of Entries identified by the Resource Path section\nof the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in $filter operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\n$filter=Name eq 'Bob'\n$filter=Tags/any(t: t/Key eq 'Site')\n$filter=Tags/any(t: t/Key eq 'Site' and t/Value eq 'London')\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specifies a subset of properties to return.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Determines what values are used to order a collection of documents.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify additional attributes or related documents to return. Supports only 'DisplayNames' attribute now.\nQuery examples:\n$expand=DisplayNames\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "Specify one or more transformation operations to perform aggregation on documents. The transformations\nare processed in order with the output from a transformation being used as input for the subsequent\ntransformation.\nQuery examples:\n$apply=groupby((Model), aggregate($count as Total))\n$apply=groupby((Model), aggregate(AvailableMemory with average as AverageAvailableMemory))\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "at",
            "in": "query",
            "description": "Similar to \"$filter\", but \"at\" is specifically used to filter versioning information properties for documents to return.\nA URI with an \"at\" Query Option identifies a subset of the Entries from the Collection of Entries identified by the\nResource Path section of the URI. The subset is determined by selecting only the Entries that satisfy the predicate\nexpression specified by the query option.\nThe expression language that is used in at operators supports references to properties and\nliterals. The literal values can be strings enclosed in single quotes, numbers and boolean values\n(true or false) or any of the additional literal representations shown in the Abstract\nType System section.\nQuery examples:\nat=VersionType eq 'Configured'\nat=InterestedMos.Moid eq '5b5877e56c6730367acf46cd'\n",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of workflowWorkflowMeta for the given filter criteria",
            "schema": {
              "$ref": "#/definitions/workflowWorkflowMetaList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/workflow/WorkflowMeta/{Moid}": {
      "get": {
        "tags": [
          "workflowWorkflowMeta"
        ],
        "summary": "Read a 'workflow.WorkflowMeta' resource.",
        "parameters": [
          {
            "name": "Moid",
            "in": "path",
            "required": true,
            "description": "The Moid of the workflowWorkflowMeta instance.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An instance of workflowWorkflowMeta",
            "schema": {
              "$ref": "#/definitions/workflowWorkflowMeta"
            }
          },
          "404": {
            "description": "Instance not found."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "aaaAbstractAuditRecordRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "aaaAbstractAuditRecord": {
      "title": "Aaa:Abstract Audit Record",
      "description": "AbstractAuditRecord is an abstract base type that specifies the common properties for all audit log records concrete sub-types.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Event": {
              "type": "string",
              "description": "The operation that was performed on this Managed Object.\nThe event is a compound string that includes the CRUD operation such as Create, Modify, Delete, and a string representing the Managed Object type. \n"
            },
            "MoType": {
              "type": "string",
              "description": "The object type of the REST resource that was created, modified or deleted. \n"
            },
            "ObjectMoid": {
              "type": "string",
              "description": "The Moid of the REST resource that was created, modified or deleted. \n"
            },
            "Request": {
              "type": "object",
              "description": "The body of the REST request that was received from a client to create or modify a REST resource, represented as a JSON document. \n"
            },
            "TraceId": {
              "type": "string",
              "description": "The trace id of the request that was used to create, modify or delete a REST resource.\n\nA trace id is a unique identifier for one particular REST request. It may be used for troubleshooting purpose\nby the Intersight technical support team.\n  \n"
            }
          }
        }
      ]
    },
    "aaaAuditRecordRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "aaaAuditRecord": {
      "title": "Aaa:Audit Record",
      "description": "AuditRecord presents the configuration changes made by the user per transaction.\n",
      "allOf": [
        {
          "$ref": "#/definitions/aaaAbstractAuditRecord"
        },
        {
          "type": "object",
          "properties": {
            "Email": {
              "type": "string",
              "description": "The email of the associated user that made the change.  This is needed in case that user is later deleted, we still have some reference to the information. \n"
            },
            "InstId": {
              "type": "string",
              "description": "The instance id of AuditRecordLocal, which is used to identify if the comming AuditRecordLocal was already processed before. \n"
            },
            "SourceIp": {
              "type": "string",
              "description": "The source IP of the client. \n"
            },
            "Timestamp": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "The creation time of AuditRecordLocal, which is the time when the affected MO was created/modified/deleted.  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "The account of the user who performed the operation.\n",
              "readOnly": true
            },
            "Sessions": {
              "$ref": "#/definitions/iamSessionRef",
              "description": "The sessions of the user who performed the operation.\n",
              "readOnly": true
            },
            "User": {
              "$ref": "#/definitions/iamUserRef",
              "description": "The user who performed the operation.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "aaaAuditRecordList": {
      "properties": {
        "Count": {
          "description": "The number of aaaAuditRecords matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of aaaAuditRecords matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/aaaAuditRecord"
          }
        }
      }
    },
    "aaaAuditRecordLocalRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "adapterAdapterConfigRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "adapterAdapterConfig": {
      "title": "Adapter Configuration",
      "description": "Global adapter level settings.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "EthSettings": {
              "$ref": "#/definitions/adapterEthSettings",
              "description": "Global Ethernet settings for this adapter. \n"
            },
            "FcSettings": {
              "$ref": "#/definitions/adapterFcSettings",
              "description": "Global Fibre Channel settings for this adapter. \n"
            },
            "PortChannelSettings": {
              "$ref": "#/definitions/adapterPortChannelSettings",
              "description": "Port Channel settings for this adapter. \n"
            },
            "SlotId": {
              "type": "string",
              "description": "PCIe slot where the VIC adapter is installed. Supported values are (1-15) and MLOM.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "adapterConfigPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "adapterConfigPolicy": {
      "title": "Adapter Configuration",
      "description": "An Adapter Configuration Policy configures the Ethernet and Fibre-Channel settings for the VIC adapter.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "Settings": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/adapterAdapterConfig"
              },
              "description": "Configuration for all the adapters available in the server.  \n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            },
            "Profiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/policyAbstractConfigProfileRef"
              },
              "description": "Relationship to the server profile.\n"
            }
          }
        }
      ]
    },
    "adapterConfigPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of adapterConfigPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of adapterConfigPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/adapterConfigPolicy"
          }
        }
      }
    },
    "adapterDeployTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "adapterEthSettingsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "adapterEthSettings": {
      "title": "Ethernet Settings",
      "description": "Global Ethernet settings for this adapter.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "LldpEnabled": {
              "type": "boolean",
              "description": "Status of LLDP protocol on the adapter interfaces.  \n",
              "x-nullable": true
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "adapterExtEthInterfaceRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "adapterExtEthInterface": {
      "title": "Adapter:Ext Eth Interface",
      "description": "Physical port of a virtual interface card.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "AdminState": {
              "type": "string",
              "readOnly": true
            },
            "EpDn": {
              "type": "string",
              "readOnly": true
            },
            "ExtEthInterfaceId": {
              "type": "string",
              "readOnly": true
            },
            "InterfaceType": {
              "type": "string",
              "readOnly": true
            },
            "MacAddress": {
              "type": "string",
              "readOnly": true
            },
            "OperState": {
              "type": "string",
              "readOnly": true
            },
            "PeerDn": {
              "type": "string",
              "readOnly": true
            },
            "AdapterUnit": {
              "$ref": "#/definitions/adapterUnitRef",
              "description": "A collection of references to the [adapter.Unit](mo://adapter.Unit) Managed Object.\n\nWhen this managed object is deleted, the referenced [adapter.Unit](mo://adapter.Unit) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "adapterExtEthInterfaceList": {
      "properties": {
        "Count": {
          "description": "The number of adapterExtEthInterfaces matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of adapterExtEthInterfaces matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/adapterExtEthInterface"
          }
        }
      }
    },
    "adapterFcSettingsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "adapterFcSettings": {
      "title": "Fibre Channel Settings",
      "description": "Global Fibre Channel settings for this adapter.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "FipEnabled": {
              "type": "boolean",
              "description": "Status of FIP protocol on the adapter interfaces.  \n",
              "x-nullable": true
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "adapterHostEthInterfaceRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "adapterHostEthInterface": {
      "title": "Adapter:Host Eth Interface",
      "description": "Physical / Virtual port of an adapter as seen by the host.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "AdminState": {
              "type": "string",
              "readOnly": true
            },
            "EpDn": {
              "type": "string",
              "readOnly": true
            },
            "HostEthInterfaceId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "InterfaceType": {
              "type": "string",
              "readOnly": true
            },
            "MacAddress": {
              "type": "string",
              "readOnly": true
            },
            "Name": {
              "type": "string",
              "readOnly": true
            },
            "OperState": {
              "type": "string",
              "readOnly": true
            },
            "Operability": {
              "type": "string",
              "readOnly": true
            },
            "OriginalMacAddress": {
              "type": "string",
              "readOnly": true
            },
            "PciAddr": {
              "type": "string",
              "readOnly": true
            },
            "PeerDn": {
              "type": "string",
              "readOnly": true
            },
            "VirtualizationPreference": {
              "type": "string",
              "readOnly": true
            },
            "VnicDn": {
              "type": "string",
              "readOnly": true
            },
            "AdapterUnit": {
              "$ref": "#/definitions/adapterUnitRef",
              "description": "A collection of references to the [adapter.Unit](mo://adapter.Unit) Managed Object.\n\nWhen this managed object is deleted, the referenced [adapter.Unit](mo://adapter.Unit) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "adapterHostEthInterfaceList": {
      "properties": {
        "Count": {
          "description": "The number of adapterHostEthInterfaces matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of adapterHostEthInterfaces matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/adapterHostEthInterface"
          }
        }
      }
    },
    "adapterHostFcInterfaceRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "adapterHostFcInterface": {
      "title": "Adapter:Host Fc Interface",
      "description": "Host facing fibre channel interface on a server adaptor.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "AdminState": {
              "type": "string",
              "readOnly": true
            },
            "EpDn": {
              "type": "string",
              "readOnly": true
            },
            "HostFcInterfaceId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "Name": {
              "type": "string",
              "readOnly": true
            },
            "OperState": {
              "type": "string",
              "readOnly": true
            },
            "Operability": {
              "type": "string",
              "readOnly": true
            },
            "OriginalWwnn": {
              "type": "string",
              "readOnly": true
            },
            "OriginalWwpn": {
              "type": "string",
              "readOnly": true
            },
            "PeerDn": {
              "type": "string",
              "readOnly": true
            },
            "Wwnn": {
              "type": "string",
              "readOnly": true
            },
            "Wwpn": {
              "type": "string",
              "readOnly": true
            },
            "AdapterUnit": {
              "$ref": "#/definitions/adapterUnitRef",
              "description": "A collection of references to the [adapter.Unit](mo://adapter.Unit) Managed Object.\n\nWhen this managed object is deleted, the referenced [adapter.Unit](mo://adapter.Unit) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "adapterHostFcInterfaceList": {
      "properties": {
        "Count": {
          "description": "The number of adapterHostFcInterfaces matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of adapterHostFcInterfaces matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/adapterHostFcInterface"
          }
        }
      }
    },
    "adapterHostIscsiInterfaceRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "adapterHostIscsiInterface": {
      "title": "Adapter:Host Iscsi Interface",
      "description": "Iscsi interface on a server adaptor.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "AdminState": {
              "type": "string",
              "readOnly": true
            },
            "EpDn": {
              "type": "string",
              "readOnly": true
            },
            "HostIscsiInterfaceId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "HostVisible": {
              "type": "string",
              "readOnly": true
            },
            "MacAddress": {
              "type": "string",
              "readOnly": true
            },
            "Name": {
              "type": "string",
              "readOnly": true
            },
            "OperState": {
              "type": "string",
              "readOnly": true
            },
            "Operability": {
              "type": "string",
              "readOnly": true
            },
            "PeerDn": {
              "type": "string",
              "readOnly": true
            },
            "AdapterUnit": {
              "$ref": "#/definitions/adapterUnitRef",
              "description": "A collection of references to the [adapter.Unit](mo://adapter.Unit) Managed Object.\n\nWhen this managed object is deleted, the referenced [adapter.Unit](mo://adapter.Unit) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "adapterHostIscsiInterfaceList": {
      "properties": {
        "Count": {
          "description": "The number of adapterHostIscsiInterfaces matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of adapterHostIscsiInterfaces matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/adapterHostIscsiInterface"
          }
        }
      }
    },
    "adapterPortChannelSettingsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "adapterPortChannelSettings": {
      "title": "Port Channel Settings",
      "description": "Port Channel setting for this adapter.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "When Port Channel is enabled, two vNICs and two vHBAs are available for use on the adapter card. When disabled, four vNICs and four vHBAs are available for use on the adapter card. Disabling port channel reboots the server.  \n",
              "x-nullable": true
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "adapterUnitRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "adapterUnit": {
      "title": "Adapter:Unit",
      "description": "The physical adapter present on a server.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "AdapterId": {
              "type": "string",
              "readOnly": true,
              "description": "Unique Identifier of an adapter Unit within a Rack Interface. \n"
            },
            "BaseMacAddress": {
              "type": "string",
              "readOnly": true
            },
            "Integrated": {
              "type": "string",
              "readOnly": true
            },
            "OperState": {
              "type": "string",
              "readOnly": true
            },
            "Operability": {
              "type": "string",
              "readOnly": true
            },
            "PartNumber": {
              "type": "string",
              "readOnly": true
            },
            "PciSlot": {
              "type": "string",
              "readOnly": true
            },
            "Power": {
              "type": "string",
              "readOnly": true
            },
            "Presence": {
              "type": "string",
              "readOnly": true
            },
            "Thermal": {
              "type": "string",
              "readOnly": true
            },
            "Vid": {
              "type": "string",
              "readOnly": true
            },
            "ComputeBlade": {
              "$ref": "#/definitions/computeBladeRef",
              "description": "A collection of references to the [compute.Blade](mo://compute.Blade) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.Blade](mo://compute.Blade) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "ComputeRackUnit": {
              "$ref": "#/definitions/computeRackUnitRef",
              "description": "A collection of references to the [compute.RackUnit](mo://compute.RackUnit) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.RackUnit](mo://compute.RackUnit) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "Controller": {
              "$ref": "#/definitions/managementControllerRef",
              "readOnly": true
            },
            "ExtEthIfs": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/adapterExtEthInterfaceRef"
              },
              "readOnly": true
            },
            "HostEthIfs": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/adapterHostEthInterfaceRef"
              },
              "readOnly": true
            },
            "HostFcIfs": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/adapterHostFcInterfaceRef"
              },
              "readOnly": true
            },
            "HostIscsiIfs": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/adapterHostIscsiInterfaceRef"
              },
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "adapterUnitList": {
      "properties": {
        "Count": {
          "description": "The number of adapterUnits matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of adapterUnits matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/adapterUnit"
          }
        }
      }
    },
    "adapterValidationTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceApiStatusRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceAppStatusRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceBackupRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceBackup": {
      "title": "Appliance:Backup",
      "description": "Backup tracks all backup requests to create a full system backup of the Intersight\nAppliance. There will be only one Backup managed object with a 'Started' state at\nany time. All other Backup managed objects will be in terminal states.\n",
      "allOf": [
        {
          "$ref": "#/definitions/applianceBackupBase"
        },
        {
          "type": "object",
          "properties": {
            "ElapsedTime": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Elapsed time in seconds since the backup process has started. \n"
            },
            "EndTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "End date and time of the backup process. \n"
            },
            "IsPasswordSet": {
              "type": "boolean",
              "x-nullable": true
            },
            "Messages": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Messages generated during the backup process. \n"
            },
            "Password": {
              "type": "string",
              "description": "Password to authenticate the fileserver. \n"
            },
            "StartTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Start date and time of the backup process. \n"
            },
            "Status": {
              "type": "string",
              "enum": [
                "Started",
                "Created",
                "Failed",
                "Completed",
                "Copied"
              ],
              "default": "Started",
              "readOnly": true,
              "description": "Status of the backup managed object.  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "Backup managed object to Account relationship.\n"
            }
          }
        }
      ]
    },
    "applianceBackupList": {
      "properties": {
        "Count": {
          "description": "The number of applianceBackups matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of applianceBackups matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/applianceBackup"
          }
        }
      }
    },
    "applianceBackupBaseRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceBackupBase": {
      "title": "Appliance:Backup Base",
      "description": "BackupBase is the parent type of Backup, Restore, and BackupPolicy managed objects.\nBackupBase holds the common information required for copying the file from the\nIntersight Appliance to the remote file server and vice versa.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Filename": {
              "type": "string",
              "description": "Backup filename to backup or restore. \n"
            },
            "Protocol": {
              "type": "string",
              "enum": [
                "scp",
                "sftp"
              ],
              "default": "scp",
              "description": "Communication protocol used by the file server (e.g. scp or sftp). \n"
            },
            "RemoteHost": {
              "type": "string",
              "description": "Hostname of the remote file server. \n"
            },
            "RemotePath": {
              "type": "string",
              "description": "File server directory to copy the file. \n"
            },
            "RemotePort": {
              "type": "integer",
              "format": "int64",
              "description": "Remote TCP port on the file server (e.g. 22 for scp). \n"
            },
            "Username": {
              "type": "string",
              "description": "Username to authenticate the fileserver.  \n"
            }
          }
        }
      ]
    },
    "applianceBackupPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceBackupPolicy": {
      "title": "Appliance:Backup Policy",
      "description": "BackupPolicy stores the Intersight Appliance's backup policy. There will be only\none BackupPolicy managed object in the Intersight Appliance. Default backup policy\nmanaged object is created during the Intersight Appliance setup, and it is configured\nin the manual backup mode.\n",
      "allOf": [
        {
          "$ref": "#/definitions/applianceBackupBase"
        },
        {
          "type": "object",
          "properties": {
            "BackupTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "The next backup time set by the backup scheduler. Backup scheduler calculates the next backup time with the user-defined schedule set in the Schedule field. \n"
            },
            "IsPasswordSet": {
              "type": "boolean",
              "x-nullable": true
            },
            "ManualBackup": {
              "type": "boolean",
              "description": "Backup mode of the appliance. Automatic backups of the appliance are not initiated if this property is set to 'true' and the backup schedule field is ignored. \n",
              "x-nullable": true
            },
            "Password": {
              "type": "string",
              "description": "Password to authenticate the file server. \n"
            },
            "Schedule": {
              "$ref": "#/definitions/onpremSchedule",
              "description": "Schedule to create a backup of the Intersight Appliance. Manualbackup field must be set to 'false' for this schedule to be active.  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "BackupPolicy managed object to Account relationship.\n"
            }
          }
        }
      ]
    },
    "applianceBackupPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of applianceBackupPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of applianceBackupPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/applianceBackupPolicy"
          }
        }
      }
    },
    "applianceCertificateSettingRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceCertificateSetting": {
      "title": "Appliance:Certificate Setting",
      "description": "Certificate the appliance uses for browser traffic.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "CertificateSetting managed object to Account relationship.\n",
              "readOnly": true
            },
            "Certificate": {
              "$ref": "#/definitions/iamCertificateRef",
              "description": "Certificate to be used by CertificateSetting.\n"
            }
          }
        }
      ]
    },
    "applianceCertificateSettingList": {
      "properties": {
        "Count": {
          "description": "The number of applianceCertificateSettings matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of applianceCertificateSettings matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/applianceCertificateSetting"
          }
        }
      }
    },
    "applianceClaimDeviceTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceConnectionStateVerificationTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceDataExportPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceDataExportPolicy": {
      "title": "Appliance:Data Export Policy",
      "description": "Data Export Policy is a category-based data collection policy that enables or disables\ndata export (data collection) from the Intersight Appliance to the Intersight. The Data\nExport Policy configuration is organized hierarchically as follows.\n  Global:\n     Inventory:\n        Network\n        Storage\n     TechSupport\n\nWhen the DataExportPolicy for a category is enabled/disabled, all the sub-category configurations\nare enabled/disabled as well. For example, if you enable/disable Inventory, all its sub-category\nconfigurations (ie. Network and Storage) are also enabled/disabled.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Enable": {
              "type": "boolean",
              "description": "Status of the data collection mode. If the value is 'true', then data collection is enabled. \n",
              "x-nullable": true
            },
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the Data Export Policy.  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "DataExportPolicy managed object to Account relationship.\n"
            },
            "ParentConfig": {
              "$ref": "#/definitions/applianceDataExportPolicyRef",
              "description": "A collection of references to the [appliance.DataExportPolicy](mo://appliance.DataExportPolicy) Managed Object.\n\nWhen this managed object is deleted, the referenced [appliance.DataExportPolicy](mo://appliance.DataExportPolicy) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "SubConfigs": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/applianceDataExportPolicyRef"
              },
              "description": "Sub-configurations of the current Data Export Policy. For example, if the current Data Export Policy is Inventory, the sub-configurations would include the Network and Storage inventory.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "applianceDataExportPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of applianceDataExportPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of applianceDataExportPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/applianceDataExportPolicy"
          }
        }
      }
    },
    "applianceDeployDnsTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceDeployNtpTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceDeviceBundleRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceDeviceClaimRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceDeviceClaim": {
      "title": "Appliance:Device Claim",
      "description": "DeviceClaim managed object represents a user initiated claim request for claiming\nan endpoint device. There can be many DeviceClaim managed object for a given endpoint\ndevice when users claim and unclaim devices repeatedly.\n\nClaiming an endpoint device is a multi-step operation. The Intersight Appliance\nstarts a workflow with multiple tasks to process the device claim request. The status\nof the device claim operation can be obtained from the claim workflow.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "DeviceId": {
              "type": "string",
              "readOnly": true,
              "description": "Device identifier of the endpoint device. \n"
            },
            "Hostname": {
              "type": "string",
              "x-createOnly": true,
              "description": "Hostname or IP address of the endpoint device the user wants to claim. \n"
            },
            "IsPasswordSet": {
              "type": "boolean",
              "x-nullable": true
            },
            "Message": {
              "type": "string",
              "readOnly": true,
              "description": "Message set by the device claim process. \n"
            },
            "Password": {
              "type": "string",
              "description": "Password to be used to login to the endpoint device. \n"
            },
            "PlatformType": {
              "type": "string",
              "enum": [
                "",
                "APIC",
                "DCNM",
                "UCSFI",
                "IMC",
                "IMCM4",
                "IMCM5",
                "HX",
                "HXTriton",
                "UCSD",
                "IntersightAppliance",
                "PureStorage",
                "VMware",
                "ServiceEngine"
              ],
              "default": null,
              "x-createOnly": true,
              "description": "Platform type of the endpoint device. \n"
            },
            "RequestId": {
              "type": "string",
              "description": "User defined claim request identifier set by the UI. The RequestId field is not a mandatory. The Intersight Appliance will assign a unique value automatically if the field is not set. \n"
            },
            "SecurityToken": {
              "type": "string",
              "readOnly": true,
              "description": "Device security token of the endpoint device. \n"
            },
            "Status": {
              "type": "string",
              "enum": [
                "started",
                "failed",
                "completed"
              ],
              "default": "started",
              "readOnly": true,
              "description": "Status of the device claim process. \n"
            },
            "Username": {
              "type": "string",
              "x-createOnly": true,
              "description": "Username to log in to the endpoint device.  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "DeviceClaim managed object to Account relationship.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "applianceDeviceClaimList": {
      "properties": {
        "Count": {
          "description": "The number of applianceDeviceClaims matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of applianceDeviceClaims matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/applianceDeviceClaim"
          }
        }
      }
    },
    "applianceDeviceFileRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceDeviceStateRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceDeviceTierRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceDeviceUpgradeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceDeviceUploadRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceDiagSettingRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceDiagSetting": {
      "title": "Appliance:Diag Setting",
      "description": "DiagSetting model is used for changing the password of the operating system's diagnostic\nuser account. The diagnostic user account can be used to login to the Intersight Appliance\nvirtual machine.\n\nThe diagnostic user account is protected by two separate authentication mechanisms: user's\npassword and Cisco CT-engine generated key. Only the Intersight Appliance's local account\nadministrator has the privileges to use this REST API.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "IsPasswordSet": {
              "type": "boolean",
              "x-nullable": true
            },
            "Message": {
              "type": "string",
              "description": "Status message of the password change operation. \n"
            },
            "Password": {
              "type": "string",
              "description": "Password of the Intersight Appliance's OS diagnostic user account.  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "DiagSetting managed object to Account relationship.\n"
            }
          }
        }
      ]
    },
    "applianceDiagSettingList": {
      "properties": {
        "Count": {
          "description": "The number of applianceDiagSettings matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of applianceDiagSettings matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/applianceDiagSetting"
          }
        }
      }
    },
    "applianceDomainPermissionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceEndpointLoginTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceEndpointLogoutTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceFileGatewayRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceFileSystemStatusRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceGroupStatusRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceImageBundleRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceImageBundle": {
      "title": "Appliance:Image Bundle",
      "description": "ImageBundle keeps track of all the software bundles installed in the Intersight Appliances.\nEach ImageBundle managed object is derived from a software upgrade manifest. ImageBundle has\nadditional properties computed during the manifest processing. Additional properties are the\ndynamic attributes of the software packages declared in the software manifest. For example,\nSHA256 values of the software packages are computed during the software manifest processing.\n\nAn ImageBundle managed object named 'current' is always present in the Intersight Appliance.\nThe software upgrade service creates another ImageBundle managed object named 'pending'\nwhen there is a pending software upgrade. The upgrade service renames the 'pending' bundle\nto the 'current' bundle after the software upgrade is successful.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "AnsiblePackages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/onpremImagePackage"
              },
              "readOnly": true,
              "description": "Collection of the Intersight Appliance's system installation packages. \n"
            },
            "AutoUpgrade": {
              "type": "boolean",
              "readOnly": true,
              "description": "Indicates that the software upgrade was automatically initiated by the Intersight Appliance. \n"
            },
            "DcPackages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/onpremImagePackage"
              },
              "readOnly": true,
              "description": "Collection of the Intersight Appliance's device connector packages. \n"
            },
            "DebugPackages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/onpremImagePackage"
              },
              "readOnly": true,
              "description": "Collection of the Intersight Appliance's developer debug packages. Optional, and not installed by default. \n"
            },
            "Description": {
              "type": "string",
              "readOnly": true,
              "description": "Short description of the software upgrade bundle. \n"
            },
            "EndpointPackages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/onpremImagePackage"
              },
              "readOnly": true,
              "description": "Collection of the Intersight Appliance's endpoint UI packages such as Cisco UCSM, Cisco HyperFlex etc. \n"
            },
            "Fingerprint": {
              "type": "string",
              "readOnly": true,
              "description": "Fingerprint of the software manifest from which this bundle is created. Fingerprint is calculated using the SHA256 algorithm. \n"
            },
            "HasError": {
              "type": "boolean",
              "readOnly": true,
              "description": "Indicates that the ImageBundle has errors. The upgrade service sets this field when it encounters errors during the manifest processing. \n"
            },
            "InfraPackages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/onpremImagePackage"
              },
              "readOnly": true,
              "description": "Collection of the Intersight Appliance's infrastructure service packages such as database. \n"
            },
            "InitPackages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/onpremImagePackage"
              },
              "readOnly": true,
              "description": "Collection of the Intersight Appliance's initialization service packages. \n"
            },
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the software upgrade bundle. \n"
            },
            "Notes": {
              "type": "string",
              "readOnly": true,
              "description": "Detailed description of the software upgrade bundle. \n"
            },
            "Priority": {
              "type": "string",
              "enum": [
                "Normal",
                "Critical"
              ],
              "default": "Normal",
              "readOnly": true,
              "description": "Software upgrade manifest's upgrade priority. The upgrade service supports two priorities, Normal and Critical. Normal priority is used for regular software upgrades, and the upgrade service uses the Upgrade Policy to compute upgrade start time. Critical priority is used for the critical software security patches, and the upgrade service ignores the Upgrade Policy when it computes the upgrade start time. \n"
            },
            "ReleaseTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Software upgrade manifest's release date and time. \n"
            },
            "ServicePackages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/onpremImagePackage"
              },
              "readOnly": true,
              "description": "Collection of the Intersight Appliance's micro-services pakages. \n"
            },
            "StatusMessage": {
              "type": "string",
              "readOnly": true,
              "description": "Status message set during the manifest processing. \n"
            },
            "SystemPackages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/onpremImagePackage"
              },
              "readOnly": true,
              "description": "Collection of the Intersight Appliance's system packages such as DNS etc. \n"
            },
            "UiPackages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/onpremImagePackage"
              },
              "readOnly": true,
              "description": "Collection of the Intersight Appliance's UI packages of the micro-services. \n"
            },
            "UpgradeEndTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "End date of the software upgrade process. \n"
            },
            "UpgradeGracePeriod": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Grace period in seconds before the automatic upgrade is initiated. The upgrade service uses the grace period to compute the upgrade start time when it receives an upgrade notfication from the Intersight. If there is an Upgrade Policy configured for the Intersight Appliance, then the upgrade service uses the policy to compute the upgrade start time. However, the upgrade start time cannot not exceed the limit enforced by the grace period. \n"
            },
            "UpgradeImpactDuration": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Duration (in minutes) for which services will be disrupted. \n"
            },
            "UpgradeImpactEnum": {
              "type": "string",
              "enum": [
                "None",
                "Disruptive",
                "Disruptive-reboot"
              ],
              "default": "None",
              "readOnly": true,
              "description": "UpgradeImpactEnum is used to indicate the kind of impact the upgrade has on currently running services on the appliance. \n"
            },
            "UpgradeStartTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Start date of the software upgrade process. \n"
            },
            "Version": {
              "type": "string",
              "readOnly": true,
              "description": "Software upgrade manifest's version.  \n"
            }
          }
        }
      ]
    },
    "applianceImageBundleList": {
      "properties": {
        "Count": {
          "description": "The number of applianceImageBundles matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of applianceImageBundles matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/applianceImageBundle"
          }
        }
      }
    },
    "applianceKeyValuePairRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceKeyValuePair": {
      "title": "Appliance:Key Value Pair",
      "description": "An arbitrary key and value pair that can be used to for having pair of key and values in application such as Appliance Capabilities.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Key": {
              "type": "string",
              "readOnly": true,
              "description": "The string representation of a tag key. \n"
            },
            "Value": {
              "type": "string",
              "readOnly": true,
              "description": "The string representation of a tag value.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "applianceManifestRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceNodeInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceNodeInfo": {
      "title": "Appliance:Node Info",
      "description": "NodeInfo managed object stores the Intersight Appliance's cluster node information.\nNodeInfo managed objects are created during the Intersight Appliance setup. The\nIntersight Appliance updates the NodeInfo managed objects with status information\nperiodically.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Hostname": {
              "type": "string",
              "readOnly": true,
              "description": "Cluster node's FQDN or IP address. \n"
            },
            "NodeId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "System assigned unique ID of the Intersight Appliance node. The system incrementally assigns identifiers to each node in the Intersight Appliance cluster starting with a value of 1. \n"
            },
            "NodeIpV4Config": {
              "$ref": "#/definitions/commIpV4Interface",
              "readOnly": true,
              "description": "IPv4 subnet and gateway configuration of the Intersight Appliance node. \n"
            },
            "OperationalStatus": {
              "type": "string",
              "enum": [
                "Unknown",
                "Operational",
                "Impaired",
                "AttentionNeeded"
              ],
              "default": "Unknown",
              "readOnly": true,
              "description": "Operational status of the Intersight Appliance node.  \n"
            }
          }
        }
      ]
    },
    "applianceNodeInfoList": {
      "properties": {
        "Count": {
          "description": "The number of applianceNodeInfos matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of applianceNodeInfos matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/applianceNodeInfo"
          }
        }
      }
    },
    "applianceNodeStatusRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceProxyEndPointRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceResolveDeviceIdentifierTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceResolveDeviceTokenTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceRestoreRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceRestore": {
      "title": "Appliance:Restore",
      "description": "Restore tracks requests to restore the Intersight Appliance. There will be only\none Restore managed object with a 'Started' state at any time. All other Restore\nmanaged objects will be in terminal states.\n",
      "allOf": [
        {
          "$ref": "#/definitions/applianceBackupBase"
        },
        {
          "type": "object",
          "properties": {
            "ElapsedTime": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Elapsed time in seconds since the restore process has started. \n"
            },
            "EndTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "End date and time of the restore process. \n"
            },
            "IsPasswordSet": {
              "type": "boolean",
              "x-nullable": true
            },
            "Messages": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Messages generated during the restore process. \n"
            },
            "Password": {
              "type": "string",
              "description": "Password for authenticating with the file server. \n"
            },
            "StartTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Start date and time of the restore process. \n"
            },
            "Status": {
              "type": "string",
              "enum": [
                "Started",
                "Created",
                "Failed",
                "Completed",
                "Copied"
              ],
              "default": "Started",
              "readOnly": true,
              "description": "Status of the restore managed object.  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "Restore managed object to Account relationship.\n"
            }
          }
        }
      ]
    },
    "applianceRestoreList": {
      "properties": {
        "Count": {
          "description": "The number of applianceRestores matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of applianceRestores matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/applianceRestore"
          }
        }
      }
    },
    "applianceSetupInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceSetupInfo": {
      "title": "Appliance:Setup Info",
      "description": "SetupInfo will have only one managed object. SetupInfo managed object is to keep\ntrack of the Intersight Appliance's setup information and guide the UI through\nthe initial configuration of the Intersight Appliance.\n\nThe SetupInfo managed object is created during the Intersight Appliance setup.\nThe Intersight UI uses this object to store the initial configuration states\nthat the user has completed. If the user closes the Intersight UI without\nfinishing all the initial configuration, then the Intersight UI will use this\nmanaged object to display the next configuration that the user needs to complete\nwhen the user uses the Intersight Appliance next time.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "BuildType": {
              "type": "string",
              "readOnly": true,
              "description": "Build type of the Intersight Appliance setup (e.g. release or debug). \n"
            },
            "Capabilities": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/applianceKeyValuePair"
              },
              "readOnly": true,
              "description": "The array of capabilities, that enable key-value metadata for Intersight Appliance. For example, Intersight Assist is one of the capabilities. \n"
            },
            "CloudUrl": {
              "type": "string",
              "readOnly": true,
              "description": "URL of the Intersight to which this Intersight Appliance is connected to. \n"
            },
            "EndTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "End date of the Intersight Appliance's initial setup.  \n"
            },
            "SetupStates": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Collection of completed initial wizard setup states. Some examples of the wizard states are 'user account creation', 'licence registration' etc. \n"
            },
            "StartTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Start date of the Intersight Appliance's initial setup.  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "SetupInfo managed object to Account relationship.\n"
            }
          }
        }
      ]
    },
    "applianceSetupInfoList": {
      "properties": {
        "Count": {
          "description": "The number of applianceSetupInfos matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of applianceSetupInfos matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/applianceSetupInfo"
          }
        }
      }
    },
    "applianceSigningKeyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceStatusCheckRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceStatusUploadRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceStatusUploadDataRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceSystemInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceSystemInfo": {
      "title": "Appliance:System Info",
      "description": "The Intersight Appliance's system information. SystemInfo is a singleton managed object\ncreated during the Intersight Appliance setup. The Intersight Appliance updates the\nSystemInfo managed object with up to date cluster status information periodically.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "CloudConnStatus": {
              "type": "string",
              "enum": [
                "",
                "Connected",
                "NotConnected",
                "Unclaimed"
              ],
              "default": null,
              "readOnly": true,
              "description": "Connection state of the Intersight Appliance to the Intersight.  \n"
            },
            "DeploymentSize": {
              "type": "string",
              "readOnly": true,
              "description": "Current running deployment size for the Intersight Appliance cluster. Eg. small, medium, large etc. \n"
            },
            "Hostname": {
              "type": "string",
              "readOnly": true,
              "description": "Publicly accessible FQDN or IP address of the Intersight Appliance. \n"
            },
            "InitDone": {
              "type": "boolean",
              "readOnly": true,
              "description": "Indicates that the setup initialization process has been completed. \n"
            },
            "OperationalStatus": {
              "type": "string",
              "enum": [
                "Unknown",
                "Operational",
                "Impaired",
                "AttentionNeeded"
              ],
              "default": "Unknown",
              "readOnly": true,
              "description": "Operational status of the Intersight Appliance cluster. \n"
            },
            "SerialId": {
              "type": "string",
              "readOnly": true,
              "description": "SerialId of the Intersight Appliance. SerialId is generated when the Intersight Appliance is setup. It is a unique UUID string, and serialId will not change for the life time of the Intersight Appliance. \n"
            },
            "TimeZone": {
              "type": "string",
              "enum": [
                "Pacific/Niue",
                "Pacific/Pago_Pago",
                "Pacific/Honolulu",
                "Pacific/Rarotonga",
                "Pacific/Tahiti",
                "Pacific/Marquesas",
                "America/Anchorage",
                "Pacific/Gambier",
                "America/Los_Angeles",
                "America/Tijuana",
                "America/Vancouver",
                "America/Whitehorse",
                "Pacific/Pitcairn",
                "America/Dawson_Creek",
                "America/Denver",
                "America/Edmonton",
                "America/Hermosillo",
                "America/Mazatlan",
                "America/Phoenix",
                "America/Yellowknife",
                "America/Belize",
                "America/Chicago",
                "America/Costa_Rica",
                "America/El_Salvador",
                "America/Guatemala",
                "America/Managua",
                "America/Mexico_City",
                "America/Regina",
                "America/Tegucigalpa",
                "America/Winnipeg",
                "Pacific/Galapagos",
                "America/Bogota",
                "America/Cancun",
                "America/Cayman",
                "America/Guayaquil",
                "America/Havana",
                "America/Iqaluit",
                "America/Jamaica",
                "America/Lima",
                "America/Nassau",
                "America/New_York",
                "America/Panama",
                "America/Port-au-Prince",
                "America/Rio_Branco",
                "America/Toronto",
                "Pacific/Easter",
                "America/Caracas",
                "America/Asuncion",
                "America/Barbados",
                "America/Boa_Vista",
                "America/Campo_Grande",
                "America/Cuiaba",
                "America/Curacao",
                "America/Grand_Turk",
                "America/Guyana",
                "America/Halifax",
                "America/La_Paz",
                "America/Manaus",
                "America/Martinique",
                "America/Port_of_Spain",
                "America/Porto_Velho",
                "America/Puerto_Rico",
                "America/Santo_Domingo",
                "America/Thule",
                "Atlantic/Bermuda",
                "America/St_Johns",
                "America/Araguaina",
                "America/Argentina/Buenos_Aires",
                "America/Bahia",
                "America/Belem",
                "America/Cayenne",
                "America/Fortaleza",
                "America/Godthab",
                "America/Maceio",
                "America/Miquelon",
                "America/Montevideo",
                "America/Paramaribo",
                "America/Recife",
                "America/Santiago",
                "America/Sao_Paulo",
                "Antarctica/Palmer",
                "Antarctica/Rothera",
                "Atlantic/Stanley",
                "America/Noronha",
                "Atlantic/South_Georgia",
                "America/Scoresbysund",
                "Atlantic/Azores",
                "Atlantic/Cape_Verde",
                "Africa/Abidjan",
                "Africa/Accra",
                "Africa/Bissau",
                "Africa/Casablanca",
                "Africa/El_Aaiun",
                "Africa/Monrovia",
                "America/Danmarkshavn",
                "Atlantic/Canary",
                "Atlantic/Faroe",
                "Atlantic/Reykjavik",
                "Etc/GMT",
                "Europe/Dublin",
                "Europe/Lisbon",
                "Europe/London",
                "Africa/Algiers",
                "Africa/Ceuta",
                "Africa/Lagos",
                "Africa/Ndjamena",
                "Africa/Tunis",
                "Africa/Windhoek",
                "Europe/Amsterdam",
                "Europe/Andorra",
                "Europe/Belgrade",
                "Europe/Berlin",
                "Europe/Brussels",
                "Europe/Budapest",
                "Europe/Copenhagen",
                "Europe/Gibraltar",
                "Europe/Luxembourg",
                "Europe/Madrid",
                "Europe/Malta",
                "Europe/Monaco",
                "Europe/Oslo",
                "Europe/Paris",
                "Europe/Prague",
                "Europe/Rome",
                "Europe/Stockholm",
                "Europe/Tirane",
                "Europe/Vienna",
                "Europe/Warsaw",
                "Europe/Zurich",
                "Africa/Cairo",
                "Africa/Johannesburg",
                "Africa/Maputo",
                "Africa/Tripoli",
                "Asia/Amman",
                "Asia/Beirut",
                "Asia/Damascus",
                "Asia/Gaza",
                "Asia/Jerusalem",
                "Asia/Nicosia",
                "Europe/Athens",
                "Europe/Bucharest",
                "Europe/Chisinau",
                "Europe/Helsinki",
                "Europe/Istanbul",
                "Europe/Kaliningrad",
                "Europe/Kiev",
                "Europe/Riga",
                "Europe/Sofia",
                "Europe/Tallinn",
                "Europe/Vilnius",
                "Africa/Khartoum",
                "Africa/Nairobi",
                "Antarctica/Syowa",
                "Asia/Baghdad",
                "Asia/Qatar",
                "Asia/Riyadh",
                "Europe/Minsk",
                "Europe/Moscow",
                "Asia/Tehran",
                "Asia/Baku",
                "Asia/Dubai",
                "Asia/Tbilisi",
                "Asia/Yerevan",
                "Europe/Samara",
                "Indian/Mahe",
                "Indian/Mauritius",
                "Indian/Reunion",
                "Asia/Kabul",
                "Antarctica/Mawson",
                "Asia/Aqtau",
                "Asia/Aqtobe",
                "Asia/Ashgabat",
                "Asia/Dushanbe",
                "Asia/Karachi",
                "Asia/Tashkent",
                "Asia/Yekaterinburg",
                "Indian/Kerguelen",
                "Indian/Maldives",
                "Asia/Calcutta",
                "Asia/Kolkata",
                "Asia/Colombo",
                "Asia/Katmandu",
                "Antarctica/Vostok",
                "Asia/Almaty",
                "Asia/Bishkek",
                "Asia/Dhaka",
                "Asia/Omsk",
                "Asia/Thimphu",
                "Indian/Chagos",
                "Asia/Rangoon",
                "Indian/Cocos",
                "Antarctica/Davis",
                "Asia/Bangkok",
                "Asia/Hovd",
                "Asia/Jakarta",
                "Asia/Krasnoyarsk",
                "Asia/Saigon",
                "Indian/Christmas",
                "Antarctica/Casey",
                "Asia/Brunei",
                "Asia/Choibalsan",
                "Asia/Hong_Kong",
                "Asia/Irkutsk",
                "Asia/Kuala_Lumpur",
                "Asia/Macau",
                "Asia/Makassar",
                "Asia/Manila",
                "Asia/Shanghai",
                "Asia/Singapore",
                "Asia/Taipei",
                "Asia/Ulaanbaatar",
                "Australia/Perth",
                "Asia/Pyongyang",
                "Asia/Dili",
                "Asia/Jayapura",
                "Asia/Seoul",
                "Asia/Tokyo",
                "Asia/Yakutsk",
                "Pacific/Palau",
                "Australia/Adelaide",
                "Australia/Darwin",
                "Antarctica/DumontDUrville",
                "Asia/Magadan",
                "Asia/Vladivostok",
                "Australia/Brisbane",
                "Australia/Hobart",
                "Australia/Sydney",
                "Pacific/Chuuk",
                "Pacific/Guam",
                "Pacific/Port_Moresby",
                "Pacific/Efate",
                "Pacific/Guadalcanal",
                "Pacific/Kosrae",
                "Pacific/Norfolk",
                "Pacific/Noumea",
                "Pacific/Pohnpei",
                "Asia/Kamchatka",
                "Pacific/Auckland",
                "Pacific/Fiji",
                "Pacific/Funafuti",
                "Pacific/Kwajalein",
                "Pacific/Majuro",
                "Pacific/Nauru",
                "Pacific/Tarawa",
                "Pacific/Wake",
                "Pacific/Wallis",
                "Pacific/Apia",
                "Pacific/Enderbury",
                "Pacific/Fakaofo",
                "Pacific/Tongatapu",
                "Pacific/Kiritimati"
              ],
              "default": "Pacific/Niue",
              "description": "Timezone of the Intersight Appliance. \n"
            },
            "Version": {
              "type": "string",
              "readOnly": true,
              "description": "Current software version of the Intersight Appliance.  \n"
            }
          }
        }
      ]
    },
    "applianceSystemInfoList": {
      "properties": {
        "Count": {
          "description": "The number of applianceSystemInfos matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of applianceSystemInfos matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/applianceSystemInfo"
          }
        }
      }
    },
    "applianceSystemStatusRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceUpdateCertificateTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceUpgradeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceUpgrade": {
      "title": "Appliance:Upgrade",
      "description": "Upgrade tracks the Intersight Appliance's software upgrades. Intersight Appliance's\nupgrade service automatically creates an Upgrade managed object when there is a\npending software upgrade. User may modify an active Upgrade managed object to reset\nthe software upgrade start time. However, user may not be able to postpone an upgrade\nbeyond the limit enforced by the upgrade grace period set in the software manifest.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Active": {
              "type": "boolean",
              "readOnly": true,
              "description": "Indicates if the software upgrade is active or not. \n"
            },
            "AutoCreated": {
              "type": "boolean",
              "readOnly": true,
              "description": "Indicates that the request was automatically created by the system. \n"
            },
            "CompletedPhases": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/onpremUpgradePhase"
              },
              "readOnly": true,
              "description": "Collection of the completed software upgrade phases. \n"
            },
            "CurrentPhase": {
              "$ref": "#/definitions/onpremUpgradePhase",
              "readOnly": true,
              "description": "Current phase of the Intersight Appliance's software upgrade. \n"
            },
            "Description": {
              "type": "string",
              "readOnly": true,
              "description": "Description of the software upgrade. \n"
            },
            "ElapsedTime": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Elapsed time in seconds during the software upgrade. \n"
            },
            "EndTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "End date of the software upgrade. \n"
            },
            "Fingerprint": {
              "type": "string",
              "readOnly": true,
              "description": "Software upgrade manifest's fingerprint. \n"
            },
            "Messages": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Messages generated during the software upgrade process. \n"
            },
            "Services": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Services that are upgraded during the software upgrade process. For example, if the software upgrade has updates for five Intersight micro-services, then this field will have the names of those five micro-services. \n"
            },
            "StartTime": {
              "type": "string",
              "format": "date-time",
              "description": "Start date of the software upgrade. UI can modify startTime to re-schedule an upgrade. \n"
            },
            "Status": {
              "type": "string",
              "readOnly": true,
              "description": "Status of the Intersight Appliance's software upgrade. \n"
            },
            "UiPackages": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Name of the UI packages that are upgraded. For example, if the software upgrade has updates for five Intersight micro-service UI packages, then this field will have the names of those five micro-services. \n"
            },
            "Version": {
              "type": "string",
              "readOnly": true,
              "description": "Software upgrade manifest's version.  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "Upgrade managed object to Account relationship.\n"
            },
            "ImageBundle": {
              "$ref": "#/definitions/applianceImageBundleRef",
              "description": "Upgrade managed object to ImageBundle relationship.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "applianceUpgradeList": {
      "properties": {
        "Count": {
          "description": "The number of applianceUpgrades matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of applianceUpgrades matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/applianceUpgrade"
          }
        }
      }
    },
    "applianceUpgradePolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "applianceUpgradePolicy": {
      "title": "Appliance:Upgrade Policy",
      "description": "UpgradePolicy stores the Intersight Appliance's software upgrade policy. UpgradePolicy\nis a sinlgeton managed object. A default upgrade policy is created during the Intersight\nAppliance setup, and it is configured with an automatic upgrade policy.\n\nAutomatic upgrade policy lets the system start software upgrade after a pre-defined\nnumber of seconds set in the software manifest.\n\nScheduled upgrade pilicy lets the user start software upgrade at a specified schedule.\nHowever, scheduled time cannot be beyond the time limit enforced by the upgrade grace\nperiod set in the software manifest.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "AutoUpgrade": {
              "type": "boolean",
              "description": "Indicates if the upgrade service is set to automatically start the software upgrade or not. If autoUpgrade is true, then the value of the schedule field is ignored. \n",
              "x-nullable": true
            },
            "BlackoutDatesEnabled": {
              "type": "boolean",
              "description": "If enabled, allows the user to define a blackout period during which the appliance will not be upgraded. \n",
              "x-nullable": true
            },
            "BlackoutEndDate": {
              "type": "string",
              "format": "date-time",
              "description": "End date of the black out period. \n"
            },
            "BlackoutStartDate": {
              "type": "string",
              "format": "date-time",
              "description": "Start date of the black out period. The appliance will not be upgraded during this period. \n"
            },
            "Schedule": {
              "$ref": "#/definitions/onpremSchedule",
              "description": "User defined schedule for upgrading the Intersight Appliance software.  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "UpgradePolicy managed object to Account relationship.\n"
            }
          }
        }
      ]
    },
    "applianceUpgradePolicyList": {
      "properties": {
        "Count": {
          "description": "The number of applianceUpgradePolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of applianceUpgradePolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/applianceUpgradePolicy"
          }
        }
      }
    },
    "applianceWaitForUpgradeTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "assetAddressInformationRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "assetAddressInformation": {
      "title": "Asset:Address Information",
      "description": "Type for saving the address information. It is used in asset.DeviceContractInformation object to save customer address.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Address1": {
              "type": "string",
              "readOnly": true,
              "description": "Address Line one of the address information. example \"PO BOX 641570\". \n"
            },
            "Address2": {
              "type": "string",
              "readOnly": true,
              "description": "Address Line two of the address information. example \"Cisco Systems\". \n"
            },
            "City": {
              "type": "string",
              "readOnly": true,
              "description": "City in which the address resides. example \"San Jose\". \n"
            },
            "Country": {
              "type": "string",
              "readOnly": true,
              "description": "Country in which the address resides. example \"US\". \n"
            },
            "Location": {
              "type": "string",
              "readOnly": true,
              "description": "Location in which the address resides. example \"14852\". \n"
            },
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the user whose address is being populated. \n"
            },
            "PostalCode": {
              "type": "string",
              "readOnly": true,
              "description": "Postal Code in which the address resides. example \"95164-1570\". \n"
            },
            "State": {
              "type": "string",
              "readOnly": true,
              "description": "State in which the address resides. example \"CA\".  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "assetClusterMemberRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "assetClusterMember": {
      "title": "Asset:Cluster Member",
      "description": "A node within a cluster of device connectors. A Device Registration may contain multiple ClusterMembers with each holding the connection details of the device connector as well as the nodes current leadership within the cluster.\n",
      "allOf": [
        {
          "$ref": "#/definitions/assetDeviceConnection"
        },
        {
          "type": "object",
          "properties": {
            "Leadership": {
              "type": "string",
              "enum": [
                "Unknown",
                "Primary",
                "Secondary"
              ],
              "default": "Unknown",
              "readOnly": true,
              "description": "The current leadershipstate of this member. Updated by the device connector on failover or leadership change. If a member is elected as Primary within the cluster this connection will be the same as the DeviceRegistration connection. E.g a message addressed to the DeviceRegistration will be forwarded to the ClusterMember connection. \n"
            },
            "LockedLeader": {
              "type": "boolean",
              "description": "Devices lock their leadership on failure to heartbeat with peers. Value acts as a third party tie breaker in election between nodes. Intersight enforces that only one cluster member exists with this value set to true. \n",
              "x-nullable": true
            },
            "MemberIdentity": {
              "type": "string",
              "readOnly": true,
              "description": "The unique identity of the member within the cluster. The identity is retrieved from the platform and reported by the device connector at connection time. \n"
            },
            "ParentClusterMemberIdentity": {
              "type": "string",
              "readOnly": true,
              "description": "The member idenity of the cluster member through which this device is connected if applicable. \n"
            },
            "Sudi": {
              "$ref": "#/definitions/assetSudiInfo",
              "readOnly": true,
              "description": "The SUDI status read from the Trust Anchor Module on a device.  \n"
            },
            "Device": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "A collection of references to the [asset.DeviceRegistration](mo://asset.DeviceRegistration) Managed Object.\n\nWhen this managed object is deleted, the referenced [asset.DeviceRegistration](mo://asset.DeviceRegistration) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "assetClusterMemberList": {
      "properties": {
        "Count": {
          "description": "The number of assetClusterMembers matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of assetClusterMembers matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/assetClusterMember"
          }
        }
      }
    },
    "assetConfirmIntersightAssistConnectivityRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "assetConnectionControlMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "assetConnectionControlMessage": {
      "title": "Asset:Connection Control Message",
      "description": "Control message used to update the context of a devices connection. When a device registration is modified (e.g. by a user modifying the claim status) the process managing the connection must be notified of the change. On changes aurora will attempt to send the change to the current owner of the connection.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Account": {
              "type": "string",
              "description": "The account id to which the device belongs. \n"
            },
            "ConnectorVersion": {
              "type": "string",
              "description": "The version of the device connector currently running on the platform. Deprecated by newer connectors that will report this directly to the device connector gateway in a websocket header, but included to continue to support older versions which report any version change after connect. \n"
            },
            "DeviceId": {
              "type": "string",
              "description": "The Moid of the device under change. Used to route the message to a devices connection. \n"
            },
            "DomainGroup": {
              "type": "string",
              "description": "The domain group id to which the device belongs. \n"
            },
            "Evict": {
              "type": "boolean",
              "description": "Flag to force any open connections to be evicted. Used in case device has been deleted or blacklisted. \n",
              "x-nullable": true
            },
            "Leadership": {
              "type": "string",
              "enum": [
                "Unknown",
                "Primary",
                "Secondary"
              ],
              "default": "Unknown",
              "description": "The current leadership of a device cluster member. \n"
            },
            "NewIdentity": {
              "type": "string",
              "description": "The new identity assigned to a device on ownership change (claim/unclaim). \n"
            },
            "Partition": {
              "type": "integer",
              "format": "int64",
              "description": "The partition the device was last connected to, used to address the control message to the device connector gateway instance holding the devices connection.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "assetContractInformationRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "assetContractInformation": {
      "title": "Asset:Contract Information",
      "description": "Type for saving contract information.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "BillTo": {
              "$ref": "#/definitions/assetAddressInformation",
              "readOnly": true,
              "description": "BillTo address of listed for the contract. \n"
            },
            "BillToGlobalUltimate": {
              "$ref": "#/definitions/assetGlobalUltimate",
              "readOnly": true,
              "description": "BillToGlobalUltimate information listed in the contract. \n"
            },
            "ContractNumber": {
              "type": "string",
              "readOnly": true,
              "description": "Contract number for the Cisco support contract purchased for the Cisco device. \n"
            },
            "LineStatus": {
              "type": "string",
              "readOnly": true,
              "description": "Contract status as per the Cisco Contract APIx.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "assetCustomerInformationRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "assetCustomerInformation": {
      "title": "Asset:Customer Information",
      "description": "Type for saving contract information.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Address": {
              "$ref": "#/definitions/assetAddressInformation",
              "readOnly": true,
              "description": "Address as per the information provided by the user. \n"
            },
            "Id": {
              "type": "string",
              "readOnly": true,
              "description": "Unique identifier for an end customer. This identifier is allocated by Cisco. \n"
            },
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "Name as per the information provided by the user.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "assetDeviceClaimRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "assetDeviceClaim": {
      "title": "Asset:Device Claim",
      "description": "DeviceClaim captures the intent to claim a device to an Intersight account. A device can be unclaimed by performing a DELETE on a DeviceClaim instance. When performing a claim, a secret passphrase must be obtained from the device connector UI/API by a sufficiently privileged user. The passphrase is timebound and proves that the user currently has privileged administrative access to the device being claimed.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "DeviceUpdates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/assetConnectionControlMessage"
              },
              "readOnly": true,
              "description": "The list of devices that underwent change during the claim process. \n"
            },
            "SecurityToken": {
              "type": "string",
              "x-createOnly": true,
              "description": "Obtained from the device connector management UI or API (REST endpoint '/connector/SecurityTokens'). \n"
            },
            "SerialNumber": {
              "type": "string",
              "x-createOnly": true,
              "description": "Obtained from the device connector management UI or API (REST endpoint '/connector/DeviceIdentifiers').  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "The account of the user that has claimed the device.\n",
              "readOnly": true
            },
            "Device": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "A collection of references to the [asset.DeviceRegistration](mo://asset.DeviceRegistration) Managed Object.\n\nWhen this managed object is deleted, the referenced [asset.DeviceRegistration](mo://asset.DeviceRegistration) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "assetDeviceConfigurationRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "assetDeviceConfiguration": {
      "title": "Asset:Device Configuration",
      "description": "The configuration of a device connector. Configuration properties may be changed by a Intersight user or by a device administrator using the connector's API exposed through the platforms management interface.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "LocalConfigurationLocked": {
              "type": "boolean",
              "description": "Specifies whether configuration through the platforms local management interface has been disabled, with only configuration through the Intersight service enabled. \n",
              "x-nullable": true
            },
            "LogLevel": {
              "type": "string",
              "description": "The log level of the device connector service.  \n"
            },
            "Device": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "A collection of references to the [asset.DeviceRegistration](mo://asset.DeviceRegistration) Managed Object.\n\nWhen this managed object is deleted, the referenced [asset.DeviceRegistration](mo://asset.DeviceRegistration) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "assetDeviceConfigurationList": {
      "properties": {
        "Count": {
          "description": "The number of assetDeviceConfigurations matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of assetDeviceConfigurations matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/assetDeviceConfiguration"
          }
        }
      }
    },
    "assetDeviceConnectionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "assetDeviceConnection": {
      "title": "Asset:Device Connection",
      "description": "An abstract class that holds the details of a device connectors connection to Intersight.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "ApiVersion": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "The version of the connector API, describes the capability of the connector's framework.\nIf the version is lower than the current minimum supported version defined in the service managing the connection, the device connector will be connected with limited capabilities until the device connector is upgraded to a fully supported version. For example if a device connector that was released without delta inventory capabilities registers and connects to Intersight, inventory collection may be disabled until it has been upgraded.\n \n"
            },
            "AppPartitionNumber": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "The partition number corresponding to the instance of the Proxy App which is managing the web-socket to the device connector. \n"
            },
            "ConnectionId": {
              "type": "string",
              "readOnly": true,
              "description": "The unique identifier for the current connection. The identifier persists across network connectivity loss and is reset on device connector process restart or platform administrator toggle of the Intersight connectivity. The connectionId can be used by services that need to interact with stateful plugins running in the device connector process. For example if a service schedules an inventory in a devices job scheduler plugin at registration it is not necessary to reschedule the job if the device loses network connectivity due to an Intersight service upgrade or intermittent network issues in the devices datacenter. \n"
            },
            "ConnectionReason": {
              "type": "string",
              "readOnly": true,
              "description": "If 'connectionStatus' is not equal to Connected, connectionReason provides further details about why the device is not connected with the cloud. \n"
            },
            "ConnectionStatus": {
              "type": "string",
              "enum": [
                "",
                "Connected",
                "NotConnected",
                "Unclaimed"
              ],
              "default": null,
              "readOnly": true,
              "description": "The status of the persistent connection between the device connector and Intersight. \n"
            },
            "ConnectionStatusLastChangeTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "The last time at which the 'connectionStatus' property value changed. If connectionStatus is Connected, this time can be interpreted as the starting time since which a persistent connection has been maintained between the cloud and device connector. If connectionStatus is NotConnected, this time can be interpreted as the last time the device connector was connected with the cloud. \n"
            },
            "ConnectorVersion": {
              "type": "string",
              "readOnly": true,
              "description": "The version of the device connector running on the managed device. \n"
            },
            "DeviceExternalIpAddress": {
              "type": "string",
              "readOnly": true,
              "description": "The IP Address of the managed device as seen from the cloud at the time of registration.\nThis could be the IP address of the managed device's interface which has a route to the internet or a NAT IP addresss when the managed device is deployed in a private network. \n"
            },
            "ProxyApp": {
              "type": "string",
              "readOnly": true,
              "description": "The name of the app which will proxy the messages to the device connector.  \n"
            }
          }
        }
      ]
    },
    "assetDeviceConnectorManagerRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "assetDeviceConnectorManager": {
      "title": "Asset:Device Connector Manager",
      "description": "Information pertaining to a Registered Intersight Assist Appliance Device in Intersight.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "Registered Intersight Assist Device within the asset Device Registration.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "assetDeviceConnectorManagerList": {
      "properties": {
        "Count": {
          "description": "The number of assetDeviceConnectorManagers matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of assetDeviceConnectorManagers matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/assetDeviceConnectorManager"
          }
        }
      }
    },
    "assetDeviceContractInformationRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "assetDeviceContractInformation": {
      "title": "Asset:Device Contract Information",
      "description": "Contains information about the Cisco device identified by a unique identifier like serial number. It also contains information about warranty, contract status, validity of the device. In future this object could be expanded to store Case, RMA, device topology details. We observe new asset.DeviceRegisteration and use it as a trigger for creating an instance of this object. Currently the data is restricted to Cisco Standalone IMC servers and Fabric Interconnects. Support for more product lines will be added in future.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Contract": {
              "$ref": "#/definitions/assetContractInformation",
              "readOnly": true,
              "description": "Contract information for the Cisco support contract purchased for the Cisco device. \n"
            },
            "ContractStatus": {
              "type": "string",
              "enum": [
                "Not Covered",
                "Active",
                "Expiring Soon"
              ],
              "default": "Not Covered",
              "readOnly": true,
              "description": "Calculated contract status that is derived based on the service line status and contract end date. It is different from serviceLineStatus property. serviceLineStatus gives us ACTIVE, OVERDUE, EXPIRED. These are transformed into Active, Expiring Soon and Not Covered. \n"
            },
            "CoveredProductLineEndDate": {
              "type": "string",
              "readOnly": true,
              "description": "End date of the covered product line. The coverage end date is fetched from Cisco SN2INFO API. \n"
            },
            "DeviceId": {
              "type": "string",
              "readOnly": true,
              "description": "Unique identifier of the Cisco device. This information is used to query Cisco APIx SN2INFO and CCWR databases. \n"
            },
            "DeviceType": {
              "type": "string",
              "enum": [
                "None",
                "CiscoUcsServer",
                "CiscoUcsFI",
                "CiscoUcsChassis"
              ],
              "default": "None",
              "readOnly": true,
              "description": "Type used to classify the device in Cisco Intersight. Currently supported values are Server and FabricInterconnect. This will be expanded to support more types in future. \n"
            },
            "EndCustomer": {
              "$ref": "#/definitions/assetCustomerInformation",
              "readOnly": true,
              "description": "End customer information for the Cisco support contract purchased for the Cisco device. \n"
            },
            "EndUserGlobalUltimate": {
              "$ref": "#/definitions/assetGlobalUltimate",
              "readOnly": true,
              "description": "EndUserGlobalUltimate information listed in the contract. \n"
            },
            "IsValid": {
              "type": "boolean",
              "readOnly": true,
              "description": "Validates if the device is a genuine Cisco device. Validated is done using the Cisco SN2INFO APIs. \n"
            },
            "ItemType": {
              "type": "string",
              "readOnly": true,
              "description": "Item type of this specific Cisco device. example \"Chassis\". \n"
            },
            "MaintenancePurchaseOrderNumber": {
              "type": "string",
              "readOnly": true,
              "description": "Maintenance purchase order number for the Cisco device. \n"
            },
            "MaintenanceSalesOrderNumber": {
              "type": "string",
              "readOnly": true,
              "description": "Maintenance sales order number for the Cisco device. \n"
            },
            "PlatformType": {
              "type": "string",
              "enum": [
                "",
                "APIC",
                "DCNM",
                "UCSFI",
                "IMC",
                "IMCM4",
                "IMCM5",
                "HX",
                "HXTriton",
                "UCSD",
                "IntersightAppliance",
                "PureStorage",
                "VMware",
                "ServiceEngine"
              ],
              "default": null,
              "readOnly": true,
              "description": "The platform type of the Cisco device. \n"
            },
            "Product": {
              "$ref": "#/definitions/assetProductInformation",
              "readOnly": true,
              "description": "Product information of the offering under a contract. \n"
            },
            "PurchaseOrderNumber": {
              "type": "string",
              "readOnly": true,
              "description": "Purchase order number for the Cisco device. It is a unique number assigned for every purchase. \n"
            },
            "ResellerGlobalUltimate": {
              "$ref": "#/definitions/assetGlobalUltimate",
              "readOnly": true,
              "description": "ResellerGlobalUltimate information listed in the contract. \n"
            },
            "SalesOrderNumber": {
              "type": "string",
              "readOnly": true,
              "description": "Sales order number for the Cisco device. It is a unique number assigned for every sale. \n"
            },
            "ServiceDescription": {
              "type": "string",
              "readOnly": true,
              "description": "The type of service contract that covers the Cisco device. \n"
            },
            "ServiceEndDate": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "End date for the Cisco service contract that covers this Cisco device. \n"
            },
            "ServiceLevel": {
              "type": "string",
              "readOnly": true,
              "description": "The type of service contract that covers the Cisco device. \n"
            },
            "ServiceSku": {
              "type": "string",
              "readOnly": true,
              "description": "The SKU of the service contract that covers the Cisco device. \n"
            },
            "ServiceStartDate": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Start date for the Cisco service contract that covers this Cisco device. \n"
            },
            "StateContract": {
              "type": "string",
              "enum": [
                "Update",
                "OK",
                "Failed",
                "Retry"
              ],
              "default": "Update",
              "description": "Internal property used for triggering and tracking actions for contract information.  \n"
            },
            "WarrantyEndDate": {
              "type": "string",
              "readOnly": true,
              "description": "End date for the warranty that covers the Cisco device. \n"
            },
            "WarrantyType": {
              "type": "string",
              "readOnly": true,
              "description": "Type of warranty that covers the Cisco device.  \n"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "Reference to the device connector through which the device is connected.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "assetDeviceContractInformationList": {
      "properties": {
        "Count": {
          "description": "The number of assetDeviceContractInformations matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of assetDeviceContractInformations matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/assetDeviceContractInformation"
          }
        }
      }
    },
    "assetDeviceRegistrationRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "assetDeviceRegistration": {
      "title": "Asset:Device Registration",
      "description": "DeviceRegistration represents a device connector enabled endpoint which has registered with Intersight.\n",
      "allOf": [
        {
          "$ref": "#/definitions/assetDeviceConnection"
        },
        {
          "type": "object",
          "properties": {
            "AccessKeyId": {
              "type": "string",
              "description": "An identifier for the credential used by the device connector to authenticate with the Intersight web socket gateway. \n"
            },
            "ClaimedByUserName": {
              "type": "string",
              "readOnly": true,
              "description": "The name of the user who claimed the device for the account. \n"
            },
            "ClaimedTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "The date and time at which the device was claimed to this account. \n"
            },
            "DeviceHostname": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "The hostnames of the managed device. There can be multiple hostnames depending on the number of elements managed (i.e. HA clusters). \n"
            },
            "DeviceIpAddress": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "The IP Addresses of the managed device. There can be multiple management IPs depending on the number of elements managed (i.e. HA clusters) and in-band/out-of-band connectivity. \n"
            },
            "ExecutionMode": {
              "type": "string",
              "enum": [
                "",
                "Normal",
                "Emulator",
                "ContainerEmulator"
              ],
              "default": null,
              "x-createOnly": true,
              "description": "Indicates if the platform is an actual device or an emulated device for testing, demos, etc. Permitted values are [Normal, Emulator, ContainerEmulator]. \n"
            },
            "ParentSignature": {
              "$ref": "#/definitions/assetParentConnectionSignature",
              "x-createOnly": true,
              "description": "A signature generated by a parent device used to authenticate that a leaf device is connected through the parent. \n"
            },
            "Pid": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "The product Id of the managed device. \n"
            },
            "PlatformType": {
              "type": "string",
              "enum": [
                "",
                "APIC",
                "DCNM",
                "UCSFI",
                "IMC",
                "IMCM4",
                "IMCM5",
                "HX",
                "HXTriton",
                "UCSD",
                "IntersightAppliance",
                "PureStorage",
                "VMware",
                "ServiceEngine"
              ],
              "default": null,
              "x-createOnly": true,
              "description": "The platform type on which device connector is executing. \n"
            },
            "PublicAccessKey": {
              "type": "string",
              "readOnly": true,
              "description": "The device connector's public key used by the cloud to authenticate a connection from the device connector. The public key is used to verify that the signature a device connector sends on connect has been signed by the connector's private key stored on the device's filesystem. Must be a PEM encoded RSA public key string.  \n"
            },
            "ReadOnly": {
              "type": "boolean",
              "readOnly": true,
              "description": "Flag reported by devices to indicate an administrator of the device has disabled management operations of the device connector and only monitoring is permitted. \n"
            },
            "Serial": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "A list of serial numbers of the individual device elements (e.g. HA primary/secondary or cluster members) which are exposed as a single unit of management by the device connector. \n"
            },
            "Vendor": {
              "type": "string",
              "readOnly": true,
              "description": "The vendor of the managed device.  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "The account to which the device has been claimed.\n",
              "readOnly": true
            },
            "ClaimedByUser": {
              "$ref": "#/definitions/iamUserRef",
              "description": "The user who claimed the device for the account.\n",
              "readOnly": true
            },
            "ClusterMembers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/assetClusterMemberRef"
              },
              "description": "The set of nodes within the devices cluster.\n",
              "readOnly": true
            },
            "DeviceClaim": {
              "$ref": "#/definitions/assetDeviceClaimRef",
              "description": "The user who claimed the device for the account.\n",
              "readOnly": true
            },
            "DeviceConfiguration": {
              "$ref": "#/definitions/assetDeviceConfigurationRef",
              "description": "The devices current configuration.\n",
              "readOnly": true
            },
            "DomainGroup": {
              "$ref": "#/definitions/iamDomainGroupRef",
              "description": "The domain group to which the device has been assigned.\n",
              "readOnly": true
            },
            "ParentConnection": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The parent device of this device, through which this device connector is connected. If present the device will inherit its ownership through this object and any claim operation will be cascaded from it.\ne.g. A rack server may have a parent as the Fabric Interconnect cluster to which it is attached.\n",
              "readOnly": true
            },
            "SecurityToken": {
              "$ref": "#/definitions/assetSecurityTokenRef",
              "description": "The devices current security token that can be used by a device administrator to claim the device.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "assetDeviceRegistrationList": {
      "properties": {
        "Count": {
          "description": "The number of assetDeviceRegistrations matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of assetDeviceRegistrations matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/assetDeviceRegistration"
          }
        }
      }
    },
    "assetGlobalUltimateRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "assetGlobalUltimate": {
      "title": "Asset:Global Ultimate",
      "description": "Type for customer information of the BillToGlobal.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Id": {
              "type": "string",
              "readOnly": true,
              "description": "ID of the user in BillToGlobal. \n"
            },
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the user in BillToGlobal.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "assetManagedDeviceRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "assetManagedDevice": {
      "title": "Managed Device",
      "description": "Attributes for Managed Device in Intersight and it maintains the relationship to the Intersight Assist Device. Once added, Device Connector for the Managed Device type is started on the Intersight Assist and status related to it is maintained.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Credential": {
              "$ref": "#/definitions/commCredential",
              "description": "Credentials to manage Managed Device. \n"
            },
            "DeviceType": {
              "type": "string",
              "enum": [
                "",
                "APIC",
                "DCNM",
                "UCSFI",
                "IMC",
                "IMCM4",
                "IMCM5",
                "HX",
                "HXTriton",
                "UCSD",
                "IntersightAppliance",
                "PureStorage",
                "VMware",
                "ServiceEngine"
              ],
              "default": null,
              "description": "Type of the Device such as VMware, Pure Storage supported by Intersight Assist. \n"
            },
            "IgnoreCert": {
              "type": "boolean",
              "description": "Ignore Certificates with protocol https for connecting to the Managed Device. It is not used for other protocols. \n",
              "x-nullable": true
            },
            "IsEnabled": {
              "type": "boolean",
              "description": "Device is Enabled/Disabled. \n",
              "x-nullable": true
            },
            "ManagementAddress": {
              "type": "string",
              "description": "Management address of the device. It can be IPv4, IPv6 or FQDN. \n"
            },
            "Port": {
              "type": "integer",
              "format": "int64",
              "description": "Port to use for connecting to the Managed Device. Port is optional. If not specified, default port for protocol is used. \n"
            },
            "Protocol": {
              "type": "string",
              "enum": [
                "https",
                "http"
              ],
              "default": "https",
              "description": "Protocol to use for connecting to the Managed Device. \n"
            },
            "Status": {
              "$ref": "#/definitions/assetManagedDeviceStatus",
              "readOnly": true,
              "description": "Status of communication releated to Managed Device.  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "ManagedDevice to Account MO relationship.\n"
            },
            "DeviceConnectorManager": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "Intersight Assist Appliance Device within the asset Device Registration.\n"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "ManagedDevice once auto claimed within the asset Device Registration.\n",
              "readOnly": true
            },
            "WorkflowInfo": {
              "$ref": "#/definitions/workflowWorkflowInfoRef",
              "description": "Worklfow managed object reference associated with managed device. No managed device operations are supported, in case of associated worklfow is in progress.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "assetManagedDeviceList": {
      "properties": {
        "Count": {
          "description": "The number of assetManagedDevices matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of assetManagedDevices matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/assetManagedDevice"
          }
        }
      }
    },
    "assetManagedDeviceStatusRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "assetManagedDeviceStatus": {
      "title": "Asset:Managed Device Status",
      "description": "Maintains the Managed Device Status.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "CloudPort": {
              "type": "integer",
              "format": "int64",
              "description": "Port used for the connection to the Cloud by the Device Connector for the Managed Device. \n"
            },
            "ConnectionFailureReason": {
              "type": "string",
              "description": "Maintains the reason for the failure of connection to the Device in case of connection failure. \n"
            },
            "ConnectionStatus": {
              "type": "string",
              "enum": [
                "Unknown",
                "Success",
                "Failure"
              ],
              "default": "Unknown",
              "description": "Maintains the status of the connection to the Device. \n"
            },
            "ErrorCode": {
              "type": "integer",
              "format": "int64",
              "description": "Maintains code related to error from Device Connector, if any. \n"
            },
            "ErrorReason": {
              "type": "string",
              "description": "Maintains the reason for the error from Device Connector, if any. \n"
            },
            "ProcessId": {
              "type": "integer",
              "format": "int64",
              "description": "Maintains the process pid of the Device Connector for the Managed Device. \n"
            },
            "ServerPort": {
              "type": "integer",
              "format": "int64",
              "description": "Port used for receiving requests from Intersight Assist by the Device Connector for the Managed Device. \n"
            },
            "State": {
              "type": "string",
              "enum": [
                "New",
                "StartSent",
                "StartSentFailure",
                "StartSuccess",
                "StartFailure",
                "UpdateSentFailure",
                "UpdateSent",
                "DeleteSentFailure",
                "DeleteInProgress",
                "DeleteFailure",
                "DeleteSuccess"
              ],
              "default": "New",
              "description": "Maintains the state of the Managed Device, such as Start Success, Start Failure, etc. See ManagedDeviceState for device connection states.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "assetParentConnectionSignatureRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "assetParentConnectionSignature": {
      "title": "Asset:Parent Connection Signature",
      "description": "A signature generated by a device connector with its private key. Signature is passed to leaf device connectors to authenticate connectivity between devices.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "DeviceId": {
              "type": "string",
              "description": "The moid of the parent device registration. \n"
            },
            "NodeId": {
              "type": "string",
              "description": "The node identity of the parent device, corresponds to the parents ClusterMember.memberIdentity. Used on connect to establish through which device in a cluster the child is connected through. \n"
            },
            "Signature": {
              "type": "string",
              "format": "byte",
              "description": "The result of signing the deviceId appended with the timeStamp fields with the devices private key. \n"
            },
            "TimeStamp": {
              "type": "string",
              "format": "date-time",
              "description": "The time at which the signature was generated. Date is accurate to Intersights clock. Used to expire the signature.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "assetProductInformationRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "assetProductInformation": {
      "title": "Asset:Product Information",
      "description": "Type for saving the product information.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "BillTo": {
              "$ref": "#/definitions/assetAddressInformation",
              "readOnly": true,
              "description": "Billing address provided by customer while buying this Cisco product. \n"
            },
            "Description": {
              "type": "string",
              "readOnly": true,
              "description": "Short description of the Cisco product that helps identify the product easily. example \"DISTI:UCS 6248UP 1RU Fabric Int/No PSU/32 UP/ 12p LIC\". \n"
            },
            "Family": {
              "type": "string",
              "readOnly": true,
              "description": "Family that the product belongs to. Example \"UCSB\". \n"
            },
            "Group": {
              "type": "string",
              "readOnly": true,
              "description": "Group that the product belongs to. It is one higher level categorization above family. example \"Switch\". \n"
            },
            "Number": {
              "type": "string",
              "readOnly": true,
              "description": "Product number that identifies the product. example PID. example \"UCS-FI-6248UP-CH2\". \n"
            },
            "ShipTo": {
              "$ref": "#/definitions/assetAddressInformation",
              "readOnly": true,
              "description": "Shipping address provided by customer while buying this Cisco product. \n"
            },
            "SubType": {
              "type": "string",
              "readOnly": true,
              "description": "Sub type of the product being specified. example \"UCS 6200 SER\".  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "assetRegisterManagedDeviceRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "assetSecurityTokenRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "assetSendManagedDeviceDetailsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "assetSudiInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "assetSudiInfo": {
      "title": "Asset:Sudi Info",
      "description": "The SUDI is an X.509v3 certificate, which maintains the product identifier and serial number. The identity is implemented at manufacturing and chained to a publicly identifiable root certificate authority. It can be used as an unchangeable identity for configuration, security, auditing, and management. This strucure contains the SUDI information read from the device's Trust Anchor Module (TAM).\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Pid": {
              "type": "string",
              "description": "The device model (PID) extracted from the X.509 SUDI Leaf Certificate. \n"
            },
            "SerialNumber": {
              "type": "string",
              "description": "The device SerialNumber extracted from the X.509 SUDI Leaf Certiicate. \n"
            },
            "Signature": {
              "type": "string",
              "description": "The signature is obtained by taking the base64 encoding of the Serial Number + PID + Status, taking the SHA256 hash and then signing with the SUDI X.509 Leaf Certifiate. \n"
            },
            "Status": {
              "type": "string",
              "enum": [
                "DeviceStatusUnknown",
                "Verified",
                "CertificateValidationFailed",
                "UnsupportedFirmware",
                "UnsupportedHardware",
                "DeviceNotResponding"
              ],
              "default": "DeviceStatusUnknown",
              "description": "The validation status of the device. \n"
            },
            "SudiCertificate": {
              "$ref": "#/definitions/x509Certificate",
              "description": "The X.509 SUDI Leaf Certificate from the Trust Anchor Module. The certificate is serialized in PEM format (Base64 encoded DER certificate).  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "assetUnregisterManagedDeviceRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "assetWaitForManagedDeviceDeletionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "assetWaitForManagedDeviceEndPointConnectionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "assetWaitForManagedDeviceRegistrationRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "biosBootModeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "biosBootMode": {
      "title": "Bios:Boot Mode",
      "description": "The mode through which bios has booted.\n",
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "type": "object",
          "properties": {
            "ActualBootMode": {
              "type": "string"
            },
            "ComputeRackUnit": {
              "$ref": "#/definitions/computeRackUnitRef",
              "description": "A collection of references to the [compute.RackUnit](mo://compute.RackUnit) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.RackUnit](mo://compute.RackUnit) MO unsets its reference to this deleted MO.\n"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "biosBootModeList": {
      "properties": {
        "Count": {
          "description": "The number of biosBootModes matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of biosBootModes matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/biosBootMode"
          }
        }
      }
    },
    "biosDeployTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "biosPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "biosPolicy": {
      "title": "BIOS",
      "description": "Policy for setting BIOS tokens on the endpoint.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "AcsControlGpu1state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting ACS Control GPU-1 configuration. \n"
            },
            "AcsControlGpu2state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting ACS Control GPU-2 configuration. \n"
            },
            "AcsControlGpu3state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting ACS Control GPU-3 configuration. \n"
            },
            "AcsControlGpu4state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting ACS Control GPU-4 configuration. \n"
            },
            "AcsControlGpu5state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting ACS Control GPU-5 configuration. \n"
            },
            "AcsControlGpu6state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting ACS Control GPU-6 configuration. \n"
            },
            "AcsControlGpu7state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting ACS Control GPU-7 configuration. \n"
            },
            "AcsControlGpu8state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting ACS Control GPU-8 configuration. \n"
            },
            "AcsControlSlot11state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting ACS Control Slot 11 configuration. \n"
            },
            "AcsControlSlot12state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting ACS Control Slot 12 configuration. \n"
            },
            "AcsControlSlot13state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting ACS Control Slot 13 configuration. \n"
            },
            "AcsControlSlot14state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting ACS Control Slot 14 configuration. \n"
            },
            "AdjacentCacheLinePrefetch": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Adjacent Cache Line Prefetcher configuration. \n"
            },
            "AllUsbDevices": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting All USB Devices configuration. \n"
            },
            "Altitude": {
              "type": "string",
              "enum": [
                "platform-default",
                "1500-m",
                "300-m",
                "3000-m",
                "900-m",
                "auto"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Altitude configuration. \n"
            },
            "AspmSupport": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "Force L0s",
                "L1 Only"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting ASPM Support configuration. \n"
            },
            "AssertNmiOnPerr": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Assert NMI on PERR configuration. \n"
            },
            "AssertNmiOnSerr": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Assert NMI on SERR configuration. \n"
            },
            "AutoCcState": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Autonomous Core C-state configuration. \n"
            },
            "AutonumousCstateEnable": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting CPU Autonomous Cstate configuration. \n"
            },
            "BaudRate": {
              "type": "string",
              "enum": [
                "platform-default",
                "115200",
                "19200",
                "38400",
                "57600",
                "9600"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Baud rate configuration. \n"
            },
            "BmeDmaMitigation": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting BME DMA Mitigation configuration. \n"
            },
            "BootOptionNumRetry": {
              "type": "string",
              "enum": [
                "platform-default",
                "13",
                "5",
                "Infinite"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Number of Retries configuration. \n"
            },
            "BootOptionReCoolDown": {
              "type": "string",
              "enum": [
                "platform-default",
                "15",
                "45",
                "90"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Cool Down Time  (sec) configuration. \n"
            },
            "BootOptionRetry": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Boot option retry configuration. \n"
            },
            "BootPerformanceMode": {
              "type": "string",
              "enum": [
                "platform-default",
                "Max Efficient",
                "Max Performance",
                "Set by Intel NM"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Boot Performance Mode configuration. \n"
            },
            "CbsCmnCpuCpb": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Core Performance Boost configuration. \n"
            },
            "CbsCmnCpuGenDowncoreCtrl": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "FOUR (2 + 2)",
                "FOUR (4 + 0)",
                "SIX (3 + 3)",
                "THREE (3 + 0)",
                "TWO (1 + 1)",
                "TWO (2 + 0)"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Downcore control configuration. \n"
            },
            "CbsCmnCpuGlobalCstateCtrl": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "disabled",
                "enabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Global C-state Control configuration. \n"
            },
            "CbsCmnCpuL1streamHwPrefetcher": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "disabled",
                "enabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting L1 Stream HW Prefetcher configuration. \n"
            },
            "CbsCmnCpuL2streamHwPrefetcher": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "disabled",
                "enabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting L2 Stream HW Prefetcher configuration. \n"
            },
            "CbsCmnDeterminismSlider": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Performance",
                "Power"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Determinism Slider configuration. \n"
            },
            "CbsCmnGnbNbIommu": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "disabled",
                "enabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting IOMMU configuration. \n"
            },
            "CbsCmnMemCtrlBankGroupSwapDdr4": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "disabled",
                "enabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Bank Group Swap configuration. \n"
            },
            "CbsCmnMemMapBankInterleaveDdr4": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Chipselect Interleaving configuration. \n"
            },
            "CbsCmncTdpCtl": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Manual"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting cTDP Control configuration. \n"
            },
            "CbsDfCmnMemIntlv": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Channel",
                "Die",
                "None",
                "Socket"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Memory interleaving configuration. \n"
            },
            "CbsDfCmnMemIntlvSize": {
              "type": "string",
              "enum": [
                "platform-default",
                "1 KB",
                "2 KB",
                "256 Bytes",
                "512 Bytes",
                "Auto"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Memory interleaving size configuration. \n"
            },
            "CdnEnable": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Consistent Device Naming configuration. \n"
            },
            "CdnSupport": {
              "type": "string",
              "enum": [
                "platform-default",
                "disabled",
                "enabled",
                "LOMs Only"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting CDN Support for LOM configuration. \n"
            },
            "ChannelInterLeave": {
              "type": "string",
              "enum": [
                "platform-default",
                "1-way",
                "2-way",
                "3-way",
                "4-way",
                "auto"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Channel Interleaving configuration. \n"
            },
            "CiscoAdaptiveMemTraining": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Adaptive Memory Training configuration. \n"
            },
            "CiscoDebugLevel": {
              "type": "string",
              "enum": [
                "platform-default",
                "Maximum",
                "Minimum",
                "Normal"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting BIOS Techlog Level configuration. \n"
            },
            "CiscoOpromLaunchOptimization": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting OptionROM Launch Optimization configuration. \n"
            },
            "CkeLowPolicy": {
              "type": "string",
              "enum": [
                "platform-default",
                "auto",
                "disabled",
                "fast",
                "slow"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting CKE Low Policy configuration. \n"
            },
            "ClosedLoopThermThrotl": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Closed Loop Therm Throt configuration. \n"
            },
            "CmciEnable": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Processor CMCI configuration. \n"
            },
            "ConfigTdp": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Config TDP configuration. \n"
            },
            "ConsoleRedirection": {
              "type": "string",
              "enum": [
                "platform-default",
                "com-0",
                "com-1",
                "disabled",
                "enabled",
                "serial-port-a"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Console redirection configuration. \n"
            },
            "CoreMultiProcessing": {
              "type": "string",
              "enum": [
                "platform-default",
                "1",
                "10",
                "11",
                "12",
                "13",
                "14",
                "15",
                "16",
                "17",
                "18",
                "19",
                "2",
                "20",
                "21",
                "22",
                "23",
                "24",
                "25",
                "26",
                "27",
                "28",
                "3",
                "4",
                "5",
                "6",
                "7",
                "8",
                "9",
                "all"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Core MultiProcessing configuration. \n"
            },
            "CpuEnergyPerformance": {
              "type": "string",
              "enum": [
                "platform-default",
                "balanced-energy",
                "balanced-performance",
                "balanced-power",
                "energy-efficient",
                "performance",
                "power"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Energy Performance configuration. \n"
            },
            "CpuFrequencyFloor": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Frequency Floor Override configuration. \n"
            },
            "CpuPerformance": {
              "type": "string",
              "enum": [
                "platform-default",
                "custom",
                "enterprise",
                "high-throughput",
                "hpc"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting CPU Performance configuration. \n"
            },
            "CpuPowerManagement": {
              "type": "string",
              "enum": [
                "platform-default",
                "custom",
                "disabled",
                "energy-efficient",
                "performance"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Power Technology configuration. \n"
            },
            "DcpmmFirmwareDowngrade": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting DCPMM Firmware Downgrade configuration. \n"
            },
            "DemandScrub": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Demand Scrub configuration. \n"
            },
            "DirectCacheAccess": {
              "type": "string",
              "enum": [
                "platform-default",
                "auto",
                "disabled",
                "enabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Direct Cache Access Support configuration. \n"
            },
            "DramClockThrottling": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Balanced",
                "Energy Efficient",
                "Performance"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting DRAM Clock Throttling configuration. \n"
            },
            "DramRefreshRate": {
              "type": "string",
              "enum": [
                "platform-default",
                "1x",
                "2x",
                "3x",
                "4x",
                "Auto"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting DRAM Refresh Rate configuration. \n"
            },
            "EnergyEfficientTurbo": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Energy Efficient Turbo configuration. \n"
            },
            "EngPerfTuning": {
              "type": "string",
              "enum": [
                "platform-default",
                "BIOS",
                "OS"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Energy Performance Tuning configuration. \n"
            },
            "EnhancedIntelSpeedStepTech": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Enhanced Intel Speedstep (R) Technology configuration. \n"
            },
            "EppProfile": {
              "type": "string",
              "enum": [
                "platform-default",
                "Balanced Performance",
                "Balanced Power",
                "Performance",
                "Power"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting EPP Profile configuration. \n"
            },
            "ExecuteDisableBit": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Execute Disable Bit configuration. \n"
            },
            "ExtendedApic": {
              "type": "string",
              "enum": [
                "platform-default",
                "disabled",
                "enabled",
                "X2APIC",
                "XAPIC"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Local X2 Apic configuration. \n"
            },
            "FlowControl": {
              "type": "string",
              "enum": [
                "platform-default",
                "none",
                "rts-cts"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Flow Control configuration. \n"
            },
            "Frb2enable": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting FRB-2 Timer configuration. \n"
            },
            "HardwarePrefetch": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Hardware Prefetcher configuration. \n"
            },
            "HwpmEnable": {
              "type": "string",
              "enum": [
                "platform-default",
                "Disabled",
                "HWPM Native Mode",
                "HWPM OOB Mode",
                "NATIVE MODE",
                "Native Mode with no Legacy",
                "OOB MODE"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting CPU Hardware Power Management configuration. \n"
            },
            "ImcInterleave": {
              "type": "string",
              "enum": [
                "platform-default",
                "1-way Interleave",
                "2-way Interleave",
                "Auto"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting IMC Interleaving configuration. \n"
            },
            "IntelHyperThreadingTech": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Intel HyperThreading Tech configuration. \n"
            },
            "IntelSpeedSelect": {
              "type": "string",
              "enum": [
                "platform-default",
                "Base",
                "Config 1",
                "Config 2"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Intel Speed Select configuration. \n"
            },
            "IntelTurboBoostTech": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Intel Turbo Boost Tech configuration. \n"
            },
            "IntelVirtualizationTechnology": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Intel (R) VT configuration. \n"
            },
            "IntelVtForDirectedIo": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Intel VT for directed IO configuration. \n"
            },
            "IntelVtdCoherencySupport": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Intel (R) VT-d Coherency Support configuration. \n"
            },
            "IntelVtdInterruptRemapping": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Intel (R) VT-d Interrupt Remapping configuration. \n"
            },
            "IntelVtdPassThroughDmaSupport": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Intel (R) VT-d PassThrough DMA support configuration. \n"
            },
            "IntelVtdatsSupport": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Intel VTD ATS support configuration. \n"
            },
            "IohErrorEnable": {
              "type": "string",
              "enum": [
                "platform-default",
                "No",
                "Yes"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting IIO Error Enable configuration. \n"
            },
            "IohResource": {
              "type": "string",
              "enum": [
                "platform-default",
                "IOH0 24k IOH1 40k",
                "IOH0 32k IOH1 32k",
                "IOH0 40k IOH1 24k",
                "IOH0 48k IOH1 16k",
                "IOH0 56k IOH1 8k"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting IOH Resource Allocation configuration. \n"
            },
            "IpPrefetch": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting DCU IP Prefetcher configuration. \n"
            },
            "Ipv6pxe": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting IPV6 PXE Support configuration. \n"
            },
            "KtiPrefetch": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting KTI Prefetch configuration. \n"
            },
            "LegacyOsRedirection": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Legacy OS redirection configuration. \n"
            },
            "LegacyUsbSupport": {
              "type": "string",
              "enum": [
                "platform-default",
                "auto",
                "disabled",
                "enabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Legacy USB Support configuration. \n"
            },
            "LlcPrefetch": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting LLC Prefetch configuration. \n"
            },
            "LomPort0state": {
              "type": "string",
              "enum": [
                "platform-default",
                "disabled",
                "enabled",
                "Legacy Only",
                "UEFI Only"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting LOM Port 0 OptionROM configuration. \n"
            },
            "LomPort1state": {
              "type": "string",
              "enum": [
                "platform-default",
                "disabled",
                "enabled",
                "Legacy Only",
                "UEFI Only"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting LOM Port 1 OptionRom configuration. \n"
            },
            "LomPort2state": {
              "type": "string",
              "enum": [
                "platform-default",
                "disabled",
                "enabled",
                "Legacy Only",
                "UEFI Only"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting LOM Port 2 OptionRom configuration. \n"
            },
            "LomPort3state": {
              "type": "string",
              "enum": [
                "platform-default",
                "disabled",
                "enabled",
                "Legacy Only",
                "UEFI Only"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting LOM Port 3 OptionRom configuration. \n"
            },
            "LomPortsAllState": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting All Onboard LOM Ports configuration. \n"
            },
            "LvDdrMode": {
              "type": "string",
              "enum": [
                "platform-default",
                "auto",
                "performance-mode",
                "power-saving-mode"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Low Voltage DDR Mode configuration. \n"
            },
            "MakeDeviceNonBootable": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Make Device Non Bootable configuration. \n"
            },
            "MemoryInterLeave": {
              "type": "string",
              "enum": [
                "platform-default",
                "1 Way Node Interleave",
                "2 Way Node Interleave",
                "4 Way Node Interleave",
                "8 Way Node Interleave",
                "disabled",
                "enabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Memory Interleaving configuration. \n"
            },
            "MemoryMappedIoAbove4gb": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Memory mapped IO above 4GB configuration. \n"
            },
            "MirroringMode": {
              "type": "string",
              "enum": [
                "platform-default",
                "inter-socket",
                "intra-socket"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Mirroring Mode configuration. \n"
            },
            "MmcfgBase": {
              "type": "string",
              "enum": [
                "platform-default",
                "1 GB",
                "2 GB",
                "2.5 GB",
                "3 GB",
                "Auto"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting MMCFG BASE configuration. \n"
            },
            "NumaOptimized": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting NUMA optimized configuration. \n"
            },
            "Onboard10gbitLom": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Onboard 10Gbit LOM configuration. \n"
            },
            "OnboardGbitLom": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Onboard Gbit LOM configuration. \n"
            },
            "OnboardScuStorageSupport": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Onboard SCU Storage Support configuration. \n"
            },
            "OnboardScuStorageSwStack": {
              "type": "string",
              "enum": [
                "platform-default",
                "Intel RSTe",
                "LSI SW RAID"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Onboard SCU Storage SW Stack configuration. \n"
            },
            "OsBootWatchdogTimer": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting OS Boot Watchdog Timer configuration. \n"
            },
            "OsBootWatchdogTimerPolicy": {
              "type": "string",
              "enum": [
                "platform-default",
                "do-nothing",
                "power-off",
                "reset"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting OS Boot Watchdog Timer Policy configuration. \n"
            },
            "OsBootWatchdogTimerTimeout": {
              "type": "string",
              "enum": [
                "platform-default",
                "10-minutes",
                "15-minutes",
                "20-minutes",
                "5-minutes"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting OS Boot Watchdog Timer Timeout configuration. \n"
            },
            "OutOfBandMgmtPort": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Out-of-Band Mgmt Port configuration. \n"
            },
            "PackageCstateLimit": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "C0 C1 State",
                "C0/C1",
                "C2",
                "C6 Non Retention",
                "C6 Retention",
                "No Limit"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Package C State Limit configuration. \n"
            },
            "PatrolScrub": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Patrol Scrub configuration. \n"
            },
            "PatrolScrubDuration": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Patrol Scrub Interval configuration. \n"
            },
            "PcIeSsdHotPlugSupport": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting NVMe SSD Hot-Plug Support configuration. \n"
            },
            "PchUsb30mode": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting xHCI Mode configuration. \n"
            },
            "PciOptionRoMs": {
              "type": "string",
              "enum": [
                "platform-default",
                "disabled",
                "enabled",
                "Legacy Only",
                "UEFI Only"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting All PCIe Slots OptionROM configuration. \n"
            },
            "PciRomClp": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCI ROM CLP configuration. \n"
            },
            "PopSupport": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Power ON Password configuration. \n"
            },
            "PostErrorPause": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting POST Error Pause configuration. \n"
            },
            "ProcessorC1e": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Processor C1E configuration. \n"
            },
            "ProcessorC3report": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Processor C3 Report configuration. \n"
            },
            "ProcessorC6report": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Processor C6 Report configuration. \n"
            },
            "ProcessorCstate": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting CPU C State configuration. \n"
            },
            "Psata": {
              "type": "string",
              "enum": [
                "platform-default",
                "AHCI",
                "Disabled",
                "LSI SW RAID"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting P-SATA mode configuration. \n"
            },
            "PstateCoordType": {
              "type": "string",
              "enum": [
                "platform-default",
                "HW ALL",
                "SW ALL",
                "SW ANY"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting P-STATE Coordination configuration. \n"
            },
            "PuttyKeyPad": {
              "type": "string",
              "enum": [
                "platform-default",
                "ESCN",
                "LINUX",
                "SCO",
                "VT100",
                "VT400",
                "XTERMR6"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Putty KeyPad configuration. \n"
            },
            "PwrPerfTuning": {
              "type": "string",
              "enum": [
                "platform-default",
                "bios",
                "os"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Power Performance Tuning configuration. \n"
            },
            "QpiLinkFrequency": {
              "type": "string",
              "enum": [
                "platform-default",
                "6.4-gt/s",
                "7.2-gt/s",
                "8.0-gt/s",
                "9.6-gt/s",
                "auto"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting QPI Link Frequency Select configuration. \n"
            },
            "QpiSnoopMode": {
              "type": "string",
              "enum": [
                "platform-default",
                "auto",
                "cluster-on-die",
                "early-snoop",
                "home-directory-snoop",
                "home-directory-snoop-with-osb",
                "home-snoop"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting QPI Snoop Mode configuration. \n"
            },
            "RankInterLeave": {
              "type": "string",
              "enum": [
                "platform-default",
                "1-way",
                "2-way",
                "4-way",
                "8-way",
                "auto"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Rank Interleaving configuration. \n"
            },
            "RedirectionAfterPost": {
              "type": "string",
              "enum": [
                "platform-default",
                "Always Enable",
                "Bootloader"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Redirection After BIOS POST configuration. \n"
            },
            "SataModeSelect": {
              "type": "string",
              "enum": [
                "platform-default",
                "AHCI",
                "Disabled",
                "LSI SW RAID"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting SATA mode configuration. \n"
            },
            "SelectMemoryRasConfiguration": {
              "type": "string",
              "enum": [
                "platform-default",
                "adddc-sparing",
                "lockstep",
                "maximum-performance",
                "mirror-mode-1lm",
                "mirroring",
                "sparing"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting SelectMemory RAS configuration configuration. \n"
            },
            "SerialPortAenable": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Serial A Enable configuration. \n"
            },
            "SinglePctlEnable": {
              "type": "string",
              "enum": [
                "platform-default",
                "No",
                "Yes"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Single PCTL configuration. \n"
            },
            "Slot10linkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:10 Link Speed configuration. \n"
            },
            "Slot10state": {
              "type": "string",
              "enum": [
                "platform-default",
                "disabled",
                "enabled",
                "Legacy Only",
                "UEFI Only"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Slot 10 state configuration. \n"
            },
            "Slot11linkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:11 Link Speed configuration. \n"
            },
            "Slot11state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Slot 11 state configuration. \n"
            },
            "Slot12linkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:12 Link Speed configuration. \n"
            },
            "Slot12state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Slot 12 state configuration. \n"
            },
            "Slot13state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot 13 OptionROM configuration. \n"
            },
            "Slot14state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot 14 OptionROM configuration. \n"
            },
            "Slot1linkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:1 Link Speed configuration. \n"
            },
            "Slot1state": {
              "type": "string",
              "enum": [
                "platform-default",
                "disabled",
                "enabled",
                "Legacy Only",
                "UEFI Only"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Slot 1 state configuration. \n"
            },
            "Slot2linkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:2 Link Speed configuration. \n"
            },
            "Slot2state": {
              "type": "string",
              "enum": [
                "platform-default",
                "disabled",
                "enabled",
                "Legacy Only",
                "UEFI Only"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Slot 2 state configuration. \n"
            },
            "Slot3linkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:3 Link Speed configuration. \n"
            },
            "Slot3state": {
              "type": "string",
              "enum": [
                "platform-default",
                "disabled",
                "enabled",
                "Legacy Only",
                "UEFI Only"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Slot 3 state configuration. \n"
            },
            "Slot4linkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:4 Link Speed configuration. \n"
            },
            "Slot4state": {
              "type": "string",
              "enum": [
                "platform-default",
                "disabled",
                "enabled",
                "Legacy Only",
                "UEFI Only"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Slot 4 state configuration. \n"
            },
            "Slot5linkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:5 Link Speed configuration. \n"
            },
            "Slot5state": {
              "type": "string",
              "enum": [
                "platform-default",
                "disabled",
                "enabled",
                "Legacy Only",
                "UEFI Only"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Slot 5 state configuration. \n"
            },
            "Slot6linkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:6 Link Speed configuration. \n"
            },
            "Slot6state": {
              "type": "string",
              "enum": [
                "platform-default",
                "disabled",
                "enabled",
                "Legacy Only",
                "UEFI Only"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Slot 6 state configuration. \n"
            },
            "Slot7linkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:7 Link Speed configuration. \n"
            },
            "Slot7state": {
              "type": "string",
              "enum": [
                "platform-default",
                "disabled",
                "enabled",
                "Legacy Only",
                "UEFI Only"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Slot 7 state configuration. \n"
            },
            "Slot8linkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:8 Link Speed configuration. \n"
            },
            "Slot8state": {
              "type": "string",
              "enum": [
                "platform-default",
                "disabled",
                "enabled",
                "Legacy Only",
                "UEFI Only"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Slot 8 state configuration. \n"
            },
            "Slot9linkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:9 Link Speed configuration. \n"
            },
            "Slot9state": {
              "type": "string",
              "enum": [
                "platform-default",
                "disabled",
                "enabled",
                "Legacy Only",
                "UEFI Only"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Slot 9 state configuration. \n"
            },
            "SlotFlomLinkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:FLOM Link Speed configuration. \n"
            },
            "SlotFrontNvme1linkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:Front Nvme1 Link Speed configuration. \n"
            },
            "SlotFrontNvme2linkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:Front Nvme2 Link Speed configuration. \n"
            },
            "SlotFrontSlot5linkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:Front1 Link Speed configuration. \n"
            },
            "SlotFrontSlot6linkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:Front2 Link Speed configuration. \n"
            },
            "SlotGpu1state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting GPU1 OptionROM configuration. \n"
            },
            "SlotGpu2state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting GPU2 OptionROM configuration. \n"
            },
            "SlotGpu3state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting GPU3 OptionROM configuration. \n"
            },
            "SlotGpu4state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting GPU4 OptionROM configuration. \n"
            },
            "SlotGpu5state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting GPU5 OptionROM configuration. \n"
            },
            "SlotGpu6state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting GPU6 OptionROM configuration. \n"
            },
            "SlotGpu7state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting GPU7 OptionROM configuration. \n"
            },
            "SlotGpu8state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting GPU8 OptionROM configuration. \n"
            },
            "SlotHbaLinkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:HBA Link Speed configuration. \n"
            },
            "SlotHbaState": {
              "type": "string",
              "enum": [
                "platform-default",
                "disabled",
                "enabled",
                "Legacy Only",
                "UEFI Only"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:HBA OptionROM configuration. \n"
            },
            "SlotLom1link": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe LOM:1 Link configuration. \n"
            },
            "SlotLom2link": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe LOM:2 Link configuration. \n"
            },
            "SlotMezzState": {
              "type": "string",
              "enum": [
                "platform-default",
                "disabled",
                "enabled",
                "Legacy Only",
                "UEFI Only"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Slot Mezz state configuration. \n"
            },
            "SlotMlomLinkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:MLOM Link Speed configuration. \n"
            },
            "SlotMlomState": {
              "type": "string",
              "enum": [
                "platform-default",
                "disabled",
                "enabled",
                "Legacy Only",
                "UEFI Only"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot MLOM OptionROM configuration. \n"
            },
            "SlotMraidLinkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting MRAID Link Speed configuration. \n"
            },
            "SlotMraidState": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot MRAID OptionROM configuration. \n"
            },
            "SlotN10state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot N10 OptionROM configuration. \n"
            },
            "SlotN11state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot N11 OptionROM configuration. \n"
            },
            "SlotN12state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot N12 OptionROM configuration. \n"
            },
            "SlotN13state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot N13 OptionROM configuration. \n"
            },
            "SlotN14state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot N14 OptionROM configuration. \n"
            },
            "SlotN15state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot N15 OptionROM configuration. \n"
            },
            "SlotN16state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot N16 OptionROM configuration. \n"
            },
            "SlotN17state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot N17 OptionROM configuration. \n"
            },
            "SlotN18state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot N18 OptionROM configuration. \n"
            },
            "SlotN19state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot N19 OptionROM configuration. \n"
            },
            "SlotN1state": {
              "type": "string",
              "enum": [
                "platform-default",
                "disabled",
                "enabled",
                "Legacy Only",
                "UEFI Only"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot N1 OptionROM configuration. \n"
            },
            "SlotN20state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot N20 OptionROM configuration. \n"
            },
            "SlotN21state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot N21 OptionROM configuration. \n"
            },
            "SlotN22state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot N22 OptionROM configuration. \n"
            },
            "SlotN23state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot N23 OptionROM configuration. \n"
            },
            "SlotN24state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot N24 OptionROM configuration. \n"
            },
            "SlotN2state": {
              "type": "string",
              "enum": [
                "platform-default",
                "disabled",
                "enabled",
                "Legacy Only",
                "UEFI Only"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot N2 OptionROM configuration. \n"
            },
            "SlotN3state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot N3 OptionROM configuration. \n"
            },
            "SlotN4state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot N4 OptionROM configuration. \n"
            },
            "SlotN5state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot N5 OptionROM configuration. \n"
            },
            "SlotN6state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot N6 OptionROM configuration. \n"
            },
            "SlotN7state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot N7 OptionROM configuration. \n"
            },
            "SlotN8state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot N8 OptionROM configuration. \n"
            },
            "SlotN9state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot N9 OptionROM configuration. \n"
            },
            "SlotRaidLinkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting RAID Link Speed configuration. \n"
            },
            "SlotRaidState": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot RAID OptionROM configuration. \n"
            },
            "SlotRearNvme1linkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:Rear Nvme1 Link Speed configuration. \n"
            },
            "SlotRearNvme1state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:Rear NVME 1 OptionRom configuration. \n"
            },
            "SlotRearNvme2linkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:Rear Nvme2 Link Speed configuration. \n"
            },
            "SlotRearNvme2state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:Rear NVME 2 OptionRom configuration. \n"
            },
            "SlotRearNvme3state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:Rear NVME 3 OptionRom configuration. \n"
            },
            "SlotRearNvme4state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:Rear NVME 4 OptionRom configuration. \n"
            },
            "SlotRearNvme5state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:Rear NVME 5 OptionRom configuration. \n"
            },
            "SlotRearNvme6state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:Rear NVME 6 OptionRom configuration. \n"
            },
            "SlotRearNvme7state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:Rear NVME 7 OptionRom configuration. \n"
            },
            "SlotRearNvme8state": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:Rear NVME 8 OptionRom configuration. \n"
            },
            "SlotRiser1linkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:Riser1 Link Speed configuration. \n"
            },
            "SlotRiser1slot1linkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:Riser1 Slot1 Link Speed configuration. \n"
            },
            "SlotRiser1slot2linkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:Riser1 Slot2 Link Speed configuration. \n"
            },
            "SlotRiser1slot3linkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:Riser1 Slot3 Link Speed configuration. \n"
            },
            "SlotRiser2linkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:Riser2 Link Speed configuration. \n"
            },
            "SlotRiser2slot4linkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:Riser2 Slot4 Link Speed configuration. \n"
            },
            "SlotRiser2slot5linkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:Riser2 Slot5 Link Speed configuration. \n"
            },
            "SlotRiser2slot6linkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:Riser2 Slot6 Link Speed configuration. \n"
            },
            "SlotSasState": {
              "type": "string",
              "enum": [
                "platform-default",
                "disabled",
                "enabled",
                "Legacy Only",
                "UEFI Only"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:SAS OptionROM configuration. \n"
            },
            "SlotSsdSlot1linkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:FrontPcie1 Link Speed configuration. \n"
            },
            "SlotSsdSlot2linkSpeed": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Disabled",
                "GEN1",
                "GEN2",
                "GEN3"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting PCIe Slot:FrontPcie2 Link Speed configuration. \n"
            },
            "Smee": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting SMEE configuration. \n"
            },
            "SmtMode": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "Off"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting SMT Mode configuration. \n"
            },
            "Snc": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "disabled",
                "enabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Sub Numa Clustering configuration. \n"
            },
            "SparingMode": {
              "type": "string",
              "enum": [
                "platform-default",
                "dimm-sparing",
                "rank-sparing"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Sparing Mode configuration. \n"
            },
            "SrIov": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting SR-IOV Support configuration. \n"
            },
            "StreamerPrefetch": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting DCU Streamer Prefetch configuration. \n"
            },
            "SvmMode": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting SVM Mode configuration. \n"
            },
            "TerminalType": {
              "type": "string",
              "enum": [
                "platform-default",
                "pc-ansi",
                "vt-utf8",
                "vt100",
                "vt100-plus"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Terminal Type configuration. \n"
            },
            "TpmControl": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Trusted Platform Module State configuration. \n"
            },
            "TpmSupport": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting TPM Support configuration. \n"
            },
            "TxtSupport": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Intel Trusted Execution Technology Support configuration. \n"
            },
            "UcsmBootOrderRule": {
              "type": "string",
              "enum": [
                "platform-default",
                "Loose",
                "Strict"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Boot Order Rules configuration. \n"
            },
            "UsbEmul6064": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Port 60/64 Emulation configuration. \n"
            },
            "UsbPortFront": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting USB Port Front configuration. \n"
            },
            "UsbPortInternal": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting USB Port Internal configuration. \n"
            },
            "UsbPortKvm": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting USB Port KVM configuration. \n"
            },
            "UsbPortRear": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting USB Port Rear configuration. \n"
            },
            "UsbPortSdCard": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting USB Port SD Card configuration. \n"
            },
            "UsbPortVmedia": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting USB Port VMedia configuration. \n"
            },
            "UsbXhciSupport": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting XHCI Legacy Support configuration. \n"
            },
            "VgaPriority": {
              "type": "string",
              "enum": [
                "platform-default",
                "Offboard",
                "Onboard",
                "Onboard VGA Disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting VGA Priority configuration. \n"
            },
            "VmdEnable": {
              "type": "string",
              "enum": [
                "platform-default",
                "enabled",
                "disabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting VMD Enablement configuration. \n"
            },
            "WorkLoadConfig": {
              "type": "string",
              "enum": [
                "platform-default",
                "Balanced",
                "I/O Sensitive",
                "NUMA",
                "UMA"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting Workload Configuration configuration. \n"
            },
            "XptPrefetch": {
              "type": "string",
              "enum": [
                "platform-default",
                "Auto",
                "disabled",
                "enabled"
              ],
              "default": "platform-default",
              "description": "BIOS Token for setting XPT Prefetch configuration.  \n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            },
            "Profiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/policyAbstractConfigProfileRef"
              },
              "description": "Relationship to the profile objects.\n"
            }
          }
        }
      ]
    },
    "biosPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of biosPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of biosPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/biosPolicy"
          }
        }
      }
    },
    "biosUnitRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "biosUnit": {
      "title": "Bios:Unit",
      "description": "Bios Unit.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "InitSeq": {
              "type": "string",
              "readOnly": true
            },
            "InitTs": {
              "type": "string",
              "readOnly": true
            },
            "ComputeBlade": {
              "$ref": "#/definitions/computeBladeRef",
              "description": "A collection of references to the [compute.Blade](mo://compute.Blade) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.Blade](mo://compute.Blade) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "ComputeRackUnit": {
              "$ref": "#/definitions/computeRackUnitRef",
              "description": "A collection of references to the [compute.RackUnit](mo://compute.RackUnit) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.RackUnit](mo://compute.RackUnit) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            },
            "RunningFirmware": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/firmwareRunningFirmwareRef"
              },
              "readOnly": true
            }
          }
        }
      ]
    },
    "biosUnitList": {
      "properties": {
        "Count": {
          "description": "The number of biosUnits matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of biosUnits matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/biosUnit"
          }
        }
      }
    },
    "biosValidationTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "bootBootloaderRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "bootBootloader": {
      "title": "Boot:Bootloader",
      "description": "Lists the bootloader properties that can be overriden for boot from Local disk and SAN boot.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "type": "string",
              "description": "Carries more information about the bootloader. \n"
            },
            "Name": {
              "type": "string",
              "description": "Name of the bootloader. \n"
            },
            "Path": {
              "type": "string",
              "description": "Path to the bootloader image.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "bootDeviceBaseRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "bootDeviceBase": {
      "title": "Boot:Device Base",
      "description": "Lists properties that are common to all device types. It serves as base class for other device types.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Specifies if the boot device is enabled or disabled. \n",
              "x-nullable": true
            },
            "Name": {
              "type": "string",
              "description": "A name that helps identify a boot device. It can be any string that adheres to the following constraints. It should start and end with an alphanumeric character. It can have underscores and hyphens. It cannot be more than 30 characters.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "bootDeviceBootModeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "bootDeviceBootMode": {
      "title": "Boot:Device Boot Mode",
      "description": "Boot mode of the devices that BIOS uses to boot them.\n",
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "type": "object",
          "properties": {
            "ConfiguredBootMode": {
              "type": "string"
            },
            "ComputeRackUnit": {
              "$ref": "#/definitions/computeRackUnitRef",
              "description": "A collection of references to the [compute.RackUnit](mo://compute.RackUnit) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.RackUnit](mo://compute.RackUnit) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "bootDeviceBootModeList": {
      "properties": {
        "Count": {
          "description": "The number of bootDeviceBootModes matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of bootDeviceBootModes matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/bootDeviceBootMode"
          }
        }
      }
    },
    "bootIscsiRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "bootIscsi": {
      "title": "iSCSI Boot",
      "description": "Device type used when booting from iSCSI boot device.\n",
      "allOf": [
        {
          "$ref": "#/definitions/bootDeviceBase"
        },
        {
          "type": "object",
          "properties": {
            "Port": {
              "type": "integer",
              "format": "int64",
              "description": "Port ID of the ISCSI boot device. \n"
            },
            "Slot": {
              "type": "string",
              "description": "The slot id of the device. Supported values are (1 - 255, \"MLOM\", \"L\", \"L1\", \"L2\", \"OCP\").  \n"
            }
          }
        }
      ]
    },
    "bootLocalCddRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "bootLocalCdd": {
      "title": "Local CDD",
      "description": "Device type used when booting from local CD drive.\n",
      "allOf": [
        {
          "$ref": "#/definitions/bootDeviceBase"
        },
        {
          "type": "object"
        }
      ]
    },
    "bootLocalDiskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "bootLocalDisk": {
      "title": "Local Disk",
      "description": "Device type used when booting from a local disk device.\n",
      "allOf": [
        {
          "$ref": "#/definitions/bootDeviceBase"
        },
        {
          "type": "object",
          "properties": {
            "Bootloader": {
              "$ref": "#/definitions/bootBootloader",
              "description": "Details of the bootloader to be used during boot from local disk. \n"
            },
            "Slot": {
              "type": "string",
              "description": "The slot id of the local disk device. Supported values are (1-255, \"M\", \"HBA\", \"SAS\", \"RAID\", \"MRAID\", \"MSTOR-RAID\").  \n"
            }
          }
        }
      ]
    },
    "bootNvmeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "bootNvme": {
      "title": "NVMe",
      "description": "Device type used when booting from a NVMe device.\n",
      "allOf": [
        {
          "$ref": "#/definitions/bootDeviceBase"
        },
        {
          "type": "object"
        }
      ]
    },
    "bootPchStorageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "bootPchStorage": {
      "title": "PCH Storage",
      "description": "Device type used when booting from a PCH Storage device.\n",
      "allOf": [
        {
          "$ref": "#/definitions/bootDeviceBase"
        },
        {
          "type": "object",
          "properties": {
            "Lun": {
              "type": "integer",
              "format": "int64",
              "description": "The Logical Unit Number (LUN) of the device. It is the Virtual Drive number for Cisco UCS C-Series Servers. Virtual Drive number is found in storage inventory.  \n"
            }
          }
        }
      ]
    },
    "bootPrecisionDeployTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "bootPrecisionPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "bootPrecisionPolicy": {
      "title": "Boot Order",
      "description": "Boot order policy models a reusable boot order configuration that can be applied to multiple servers via profile association. It supports advanced boot order configuration on Cisco CIMC servers.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "BootDevices": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/bootDeviceBase"
              },
              "description": "Set of boot devices to be configured. \n"
            },
            "ConfiguredBootMode": {
              "type": "string",
              "enum": [
                "Legacy",
                "Uefi"
              ],
              "default": "Legacy",
              "description": "Sets the BIOS boot mode. UEFI uses the GUID Partition Table (GPT) whereas Legacy mode uses the Master Boot Record (MBR) partitioning scheme. \n"
            },
            "EnforceUefiSecureBoot": {
              "type": "boolean",
              "description": "If UEFI secure boot is enabled, the boot mode is set to UEFI by default. Secure boot enforces that device boots using only software that is trusted by the Original Equipment Manufacturer (OEM).  \n",
              "x-nullable": true
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            },
            "Profiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/policyAbstractConfigProfileRef"
              },
              "description": "Reference to the profile objects that this policy is a part of.\n"
            }
          }
        }
      ]
    },
    "bootPrecisionPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of bootPrecisionPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of bootPrecisionPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/bootPrecisionPolicy"
          }
        }
      }
    },
    "bootPrecisionValidationTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "bootPxeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "bootPxe": {
      "title": "PXE Boot",
      "description": "Device type used when booting from a PXE boot device.\n",
      "allOf": [
        {
          "$ref": "#/definitions/bootDeviceBase"
        },
        {
          "type": "object",
          "properties": {
            "InterfaceName": {
              "type": "string",
              "description": "The name of the underlying virtual ethernet interface used by the PXE boot device. \n"
            },
            "InterfaceSource": {
              "type": "string",
              "enum": [
                "name",
                "mac",
                "port"
              ],
              "default": "name",
              "description": "Lists the supported Interface Source for PXE device. Supported values are \"name\" and \"mac\". \n"
            },
            "IpType": {
              "type": "string",
              "enum": [
                "None",
                "IPv4",
                "IPv6"
              ],
              "default": "None",
              "description": "The IP Address family type to use during the PXE Boot process. \n"
            },
            "MacAddress": {
              "type": "string",
              "description": "The MAC Address of the underlying virtual ethernet interface used by the PXE boot device. \n"
            },
            "Port": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "The logical port id of the ethernet interface used by the PXE device. Port is a deprecated property. Default value is changed to '-1' as this is invalid port. New or modified pxe device has the port value always set to '-1'. \n"
            },
            "Slot": {
              "type": "string",
              "description": "The slot ID of the adapter on which the underlying virtual ethernet interface is present. Supported values are ( 1 - 255, \"MLOM\", \"L\", \"L1\", \"L2\", \"OCP\").  \n"
            }
          }
        }
      ]
    },
    "bootSanRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "bootSan": {
      "title": "SAN Boot",
      "description": "Device type used when booting from SAN Boot device.\n",
      "allOf": [
        {
          "$ref": "#/definitions/bootDeviceBase"
        },
        {
          "type": "object",
          "properties": {
            "Bootloader": {
              "$ref": "#/definitions/bootBootloader",
              "description": "Details of the bootloader to be used during SAN boot. \n"
            },
            "Lun": {
              "type": "integer",
              "format": "int64",
              "description": "The Logical Unit Number (LUN) of the device. \n"
            },
            "Slot": {
              "type": "string",
              "description": "Slot ID of the device. Supported values are ( 1 - 255, \"MLOM\", \"L1\", \"L2\" ).  \n"
            }
          }
        }
      ]
    },
    "bootSdCardRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "bootSdCard": {
      "title": "SD Card",
      "description": "Device type used when booting from SD Card device.\n",
      "allOf": [
        {
          "$ref": "#/definitions/bootDeviceBase"
        },
        {
          "type": "object",
          "properties": {
            "Lun": {
              "type": "integer",
              "format": "int64",
              "description": "The Logical Unit Number (LUN) of the device. \n"
            },
            "Subtype": {
              "type": "string",
              "enum": [
                "None",
                "flex-util",
                "flex-flash",
                "SDCARD"
              ],
              "default": "None",
              "description": "The subtype for the selected device type.  \n"
            }
          }
        }
      ]
    },
    "bootUefiShellRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "bootUefiShell": {
      "title": "UEFI Shell",
      "description": "Device type used when booting from UEFI shell.\n",
      "allOf": [
        {
          "$ref": "#/definitions/bootDeviceBase"
        },
        {
          "type": "object"
        }
      ]
    },
    "bootUsbRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "bootUsb": {
      "title": "USB",
      "description": "Device type used when booting from USB device.\n",
      "allOf": [
        {
          "$ref": "#/definitions/bootDeviceBase"
        },
        {
          "type": "object",
          "properties": {
            "Subtype": {
              "type": "string",
              "enum": [
                "None",
                "usb-cd",
                "usb-fdd",
                "usb-hdd"
              ],
              "default": "None",
              "description": "The subtype for the selected device type.  \n"
            }
          }
        }
      ]
    },
    "bootVirtualMediaRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "bootVirtualMedia": {
      "title": "Virtual Media",
      "description": "Device type used when booting from Virtual Media device.\n",
      "allOf": [
        {
          "$ref": "#/definitions/bootDeviceBase"
        },
        {
          "type": "object",
          "properties": {
            "Subtype": {
              "type": "string",
              "enum": [
                "None",
                "cimc-mapped-dvd",
                "cimc-mapped-hdd",
                "kvm-mapped-dvd",
                "kvm-mapped-hdd",
                "kvm-mapped-fdd"
              ],
              "default": "None",
              "description": "The subtype for the selected device type.  \n"
            }
          }
        }
      ]
    },
    "cepDownloadArtifactsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "cepInitiateClusterBringupRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "cepKvPairRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "cepSparkClusterRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "cepVerifyClusterBringupRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "cmrfCmRfRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "cmrfCmRf": {
      "title": "Cmrf:Cm Rf",
      "description": "A reference to a REST resource from a complex type, uniquely identified by object type and Moid.\nCMRF is a short term workaround until MoRef properties of complex types can be supported.\nCMRF means complex type managed object reference and is unique enough that it can be removed easily later.\nThe long term solution is to support for relationships stanza under complextypes.\nDeprecated.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Moid": {
              "type": "string",
              "readOnly": true,
              "description": "The Moid of the referenced REST resource. \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "commConcreteCredentialRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "commConcreteCredential": {
      "title": "Comm:Concrete Credential",
      "description": "Credential common for most of the Managed Devices that require only username and password.\n",
      "allOf": [
        {
          "$ref": "#/definitions/commCredential"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "description": "Name for the credential entry that is created.  \n"
            }
          }
        }
      ]
    },
    "commCredentialRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "commCredential": {
      "title": "Comm:Credential",
      "description": "Base Credential for all the Managed Devices.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "IsPasswordSet": {
              "type": "boolean",
              "x-nullable": true
            },
            "Password": {
              "type": "string",
              "description": "Password for the Managed Device. \n"
            },
            "Username": {
              "type": "string",
              "description": "Username for the Managed Device. Format and restrictions are not enforced here but usually follow the ManagedDevice requirements.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "commIpV4InterfaceRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "commIpV4Interface": {
      "title": "Comm:Ip V4 Interface",
      "description": "The configuration data of a single IPv4 interface, including IP address, netmask, and default gateway.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Gateway": {
              "type": "string",
              "description": "The IPv4 address of the default gateway. \n"
            },
            "IpAddress": {
              "type": "string",
              "description": "The IPv4 Address, represented in the standard dot-decimal notation, e.g. 192.168.1.3. \n"
            },
            "Netmask": {
              "type": "string",
              "description": "The IPv4 Netmask, represented in the standard dot-decimal notation, e.g. 255.255.255.0.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "commIpV6InterfaceRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "commVmwareCredentialRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "commVmwareCredential": {
      "title": "Comm:Vmware Credential",
      "description": "Credential for VMware Managed Device.\n",
      "allOf": [
        {
          "$ref": "#/definitions/commCredential"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "description": "Name for the credential entry that is created.  \n"
            }
          }
        }
      ]
    },
    "computeBladeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "computeBlade": {
      "title": "Compute:Blade",
      "description": "Server which is housed in a chassis and shares some of the hardware with other servers in the chassis.\n",
      "allOf": [
        {
          "$ref": "#/definitions/computePhysical"
        },
        {
          "type": "object",
          "properties": {
            "ChassisId": {
              "type": "string",
              "readOnly": true,
              "description": "The id of the chassis that the blade is located in. \n"
            },
            "ScaledMode": {
              "type": "string",
              "readOnly": true
            },
            "SlotId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "Adapters": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/adapterUnitRef"
              },
              "readOnly": true
            },
            "BiosUnits": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/biosUnitRef"
              },
              "readOnly": true
            },
            "Bmc": {
              "$ref": "#/definitions/managementControllerRef",
              "readOnly": true
            },
            "Board": {
              "$ref": "#/definitions/computeBoardRef",
              "readOnly": true
            },
            "EquipmentChassis": {
              "$ref": "#/definitions/equipmentChassisRef",
              "description": "A collection of references to the [equipment.Chassis](mo://equipment.Chassis) Managed Object.\n\nWhen this managed object is deleted, the referenced [equipment.Chassis](mo://equipment.Chassis) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "EquipmentIoExpanders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/equipmentIoExpanderRef"
              },
              "readOnly": true
            },
            "GenericInventoryHolders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/inventoryGenericInventoryHolderRef"
              },
              "readOnly": true
            },
            "LocatorLed": {
              "$ref": "#/definitions/equipmentLocatorLedRef",
              "readOnly": true
            },
            "PciDevices": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/pciDeviceRef"
              },
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            },
            "StorageEnclosures": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storageEnclosureRef"
              },
              "readOnly": true
            },
            "TopSystem": {
              "$ref": "#/definitions/topSystemRef",
              "description": "A collection of references to the [top.System](mo://top.System) Managed Object.\n\nWhen this managed object is deleted, the referenced [top.System](mo://top.System) MO unsets its reference to this deleted MO.\n"
            }
          }
        }
      ]
    },
    "computeBladeList": {
      "properties": {
        "Count": {
          "description": "The number of computeBlades matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of computeBlades matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/computeBlade"
          }
        }
      }
    },
    "computeBoardRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "computeBoard": {
      "title": "Compute:Board",
      "description": "Mother board of a server.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "BoardId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "CpuTypeController": {
              "type": "string",
              "readOnly": true
            },
            "OperPowerState": {
              "type": "string",
              "readOnly": true
            },
            "Presence": {
              "type": "string",
              "readOnly": true
            },
            "ComputeBlade": {
              "$ref": "#/definitions/computeBladeRef",
              "description": "A collection of references to the [compute.Blade](mo://compute.Blade) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.Blade](mo://compute.Blade) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "ComputeRackUnit": {
              "$ref": "#/definitions/computeRackUnitRef",
              "description": "A collection of references to the [compute.RackUnit](mo://compute.RackUnit) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.RackUnit](mo://compute.RackUnit) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "EquipmentTpms": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/equipmentTpmRef"
              },
              "readOnly": true
            },
            "GraphicsCards": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/graphicsCardRef"
              },
              "description": "It shows Graphics cards present in a server.\n",
              "readOnly": true
            },
            "MemoryArrays": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/memoryArrayRef"
              },
              "readOnly": true
            },
            "PciCoprocessorCards": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/pciCoprocessorCardRef"
              },
              "description": "It shows PCI CoprocessorCard present in a server.\n",
              "readOnly": true
            },
            "PciSwitch": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/pciSwitchRef"
              },
              "description": "It shows PCI Switches presen in a server.\n",
              "readOnly": true
            },
            "PersistentMemoryConfiguration": {
              "$ref": "#/definitions/memoryPersistentMemoryConfigurationRef",
              "description": "This represents the configuration applied on the persistent memory modules on a server.\n",
              "readOnly": true
            },
            "Processors": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/processorUnitRef"
              },
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            },
            "SecurityUnits": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/securityUnitRef"
              },
              "readOnly": true
            },
            "StorageControllers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storageControllerRef"
              },
              "readOnly": true
            },
            "StorageFlexFlashControllers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storageFlexFlashControllerRef"
              },
              "readOnly": true
            },
            "StorageFlexUtilControllers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storageFlexUtilControllerRef"
              },
              "readOnly": true
            }
          }
        }
      ]
    },
    "computeBoardList": {
      "properties": {
        "Count": {
          "description": "The number of computeBoards matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of computeBoards matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/computeBoard"
          }
        }
      }
    },
    "computeIpAddressRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "computeIpAddress": {
      "title": "Compute:Ip Address",
      "description": "Complex type representing an ip address in UCSM.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Address": {
              "type": "string",
              "readOnly": true
            },
            "Category": {
              "type": "string",
              "enum": [
                "Equipment",
                "ServiceProfile"
              ],
              "default": "Equipment",
              "readOnly": true
            },
            "DefaultGateway": {
              "type": "string",
              "readOnly": true
            },
            "Dn": {
              "type": "string",
              "readOnly": true
            },
            "HttpPort": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "HttpsPort": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "KvmPort": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "Name": {
              "type": "string",
              "enum": [
                "Outband",
                "Inband"
              ],
              "default": "Outband",
              "readOnly": true
            },
            "Subnet": {
              "type": "string",
              "readOnly": true
            },
            "Type": {
              "type": "string",
              "enum": [
                "MgmtInterface",
                "VnicIpV4StaticAddr",
                "VnicIpV4PooledAddr",
                "VnicIpV4MgmtPooledAddr",
                "VnicIpV6StaticAddr",
                "VnicIpV6MgmtPooledAddr",
                "VnicIpV4ProfDerivedAddr"
              ],
              "default": "MgmtInterface",
              "readOnly": true
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "computeLocatorLedOperationTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "computeOneTimeBootConfigurationTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "computeOperationResultHandlerRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "computePhysicalRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "computePhysical": {
      "title": "Compute:Physical",
      "description": "Abstract class for all physical servers.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "AdminPowerState": {
              "type": "string",
              "readOnly": true
            },
            "AssetTag": {
              "type": "string",
              "readOnly": true
            },
            "AvailableMemory": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "FaultSummary": {
              "type": "integer",
              "format": "int64"
            },
            "KvmIpAddresses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/computeIpAddress"
              },
              "description": "KVM address of the device. \n"
            },
            "MemorySpeed": {
              "type": "string",
              "readOnly": true
            },
            "MgmtIpAddress": {
              "type": "string",
              "description": "Management address of the server. \n"
            },
            "NumAdaptors": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Total number of Adaptors available. \n"
            },
            "NumCpuCores": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "NumCpuCoresEnabled": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Number of CPU cores enabled. \n"
            },
            "NumCpus": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Total number of CPU's available. \n"
            },
            "NumEthHostInterfaces": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Number of Ethernet Host Interfaces. \n"
            },
            "NumFcHostInterfaces": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "NumThreads": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Number of threads enabled. \n"
            },
            "OperPowerState": {
              "type": "string",
              "readOnly": true
            },
            "OperState": {
              "type": "string",
              "readOnly": true
            },
            "Operability": {
              "type": "string",
              "readOnly": true
            },
            "PlatformType": {
              "type": "string",
              "description": "Platform type of the device. \n"
            },
            "Presence": {
              "type": "string",
              "readOnly": true
            },
            "ServiceProfile": {
              "type": "string",
              "readOnly": true
            },
            "TotalMemory": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "UserLabel": {
              "type": "string",
              "readOnly": true
            },
            "Uuid": {
              "type": "string",
              "readOnly": true
            }
          }
        }
      ]
    },
    "computePhysicalSummaryRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "computePhysicalSummary": {
      "title": "Compute:Physical Summary",
      "description": "Consolidated view of Blades and RackUnits.\n",
      "allOf": [
        {
          "$ref": "#/definitions/viewsView"
        },
        {
          "type": "object",
          "properties": {
            "AdminPowerState": {
              "type": "string",
              "readOnly": true
            },
            "AssetTag": {
              "type": "string",
              "readOnly": true
            },
            "AvailableMemory": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "ChassisId": {
              "type": "string",
              "readOnly": true,
              "description": "The id of the chassis that the blade is located in. \n"
            },
            "CpuCapacity": {
              "type": "number",
              "format": "float",
              "readOnly": true,
              "description": "CPU Capacity = Number of CPU Sockets x Enabled Cores x Speed (GHz). \n"
            },
            "DeviceMoId": {
              "type": "string",
              "readOnly": true
            },
            "Dn": {
              "type": "string",
              "readOnly": true,
              "description": "The Distinguished Name unambiguously identifies an object in the system. \n"
            },
            "FaultSummary": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "Firmware": {
              "type": "string",
              "readOnly": true,
              "description": "The firmware version of the Cisco Integrated Management Controller (CIMC) for this server. \n"
            },
            "Ipv4Address": {
              "type": "string",
              "readOnly": true,
              "description": "The IPv4 address configured on the management interface of the Integrated Management Controller. \n"
            },
            "KvmIpAddresses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/computeIpAddress"
              },
              "readOnly": true,
              "description": "KVM address of the device. \n"
            },
            "MemorySpeed": {
              "type": "string",
              "readOnly": true
            },
            "MgmtIpAddress": {
              "type": "string",
              "readOnly": true,
              "description": "The IP address of the management interface on the UCS Fabric Interconnect or Cisco Integrated Management Controller. \n"
            },
            "Model": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the model of the given component. \n"
            },
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "The name of the UCS Fabric Interconnect cluster or Cisco Integrated Management Controller (CIMC).\n\nWhen this server is attached to a UCS Fabric Interconnect, the value of this property is the name of the UCS Fabric Interconnect.\nWhen this server configured in standalone mode, the value of this property is the name of the Cisco Integrated Management Controller.\n \n"
            },
            "NumAdaptors": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Total number of Adaptors available. \n"
            },
            "NumCpuCores": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "NumCpuCoresEnabled": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Number of CPU cores enabled. \n"
            },
            "NumCpus": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Total number of CPU's available. \n"
            },
            "NumEthHostInterfaces": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Number of Ethernet Host Interfaces. \n"
            },
            "NumFcHostInterfaces": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "NumThreads": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Number of threads enabled. \n"
            },
            "OperPowerState": {
              "type": "string",
              "readOnly": true
            },
            "OperState": {
              "type": "string",
              "readOnly": true
            },
            "Operability": {
              "type": "string",
              "readOnly": true
            },
            "PlatformType": {
              "type": "string",
              "readOnly": true,
              "description": "Platform type of the device. \n"
            },
            "Presence": {
              "type": "string",
              "readOnly": true
            },
            "Revision": {
              "type": "string",
              "readOnly": true
            },
            "Rn": {
              "type": "string",
              "readOnly": true,
              "description": "The Relative Name uniquely identifies an object within a given context. \n"
            },
            "ScaledMode": {
              "type": "string",
              "readOnly": true
            },
            "Serial": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the serial of the given component. \n"
            },
            "ServerId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "ServiceProfile": {
              "type": "string",
              "readOnly": true
            },
            "SlotId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "SourceObjectType": {
              "type": "string",
              "readOnly": true,
              "description": "The source object type of this view MO. \n"
            },
            "TotalMemory": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "UserLabel": {
              "type": "string",
              "readOnly": true
            },
            "Uuid": {
              "type": "string",
              "readOnly": true
            },
            "Vendor": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the vendor of the given component.  \n"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "computePhysicalSummaryList": {
      "properties": {
        "Count": {
          "description": "The number of computePhysicalSummaries matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of computePhysicalSummaries matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/computePhysicalSummary"
          }
        }
      }
    },
    "computeRackUnitRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "computeRackUnit": {
      "title": "Compute:Rack Unit",
      "description": "Rack-mounted server.\n",
      "allOf": [
        {
          "$ref": "#/definitions/computePhysical"
        },
        {
          "type": "object",
          "properties": {
            "ServerId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "Adapters": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/adapterUnitRef"
              },
              "readOnly": true
            },
            "BiosBootmode": {
              "$ref": "#/definitions/biosBootModeRef"
            },
            "Biosunits": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/biosUnitRef"
              },
              "readOnly": true
            },
            "Bmc": {
              "$ref": "#/definitions/managementControllerRef",
              "readOnly": true
            },
            "Board": {
              "$ref": "#/definitions/computeBoardRef",
              "readOnly": true
            },
            "BootDeviceBootmode": {
              "$ref": "#/definitions/bootDeviceBootModeRef",
              "readOnly": true
            },
            "Fanmodules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/equipmentFanModuleRef"
              },
              "readOnly": true
            },
            "GenericInventoryHolders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/inventoryGenericInventoryHolderRef"
              },
              "readOnly": true
            },
            "LocatorLed": {
              "$ref": "#/definitions/equipmentLocatorLedRef",
              "readOnly": true
            },
            "PciDevices": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/pciDeviceRef"
              },
              "readOnly": true
            },
            "Psus": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/equipmentPsuRef"
              },
              "readOnly": true
            },
            "RackEnclosureSlot": {
              "$ref": "#/definitions/equipmentRackEnclosureSlotRef",
              "description": "A collection of references to the [equipment.RackEnclosureSlot](mo://equipment.RackEnclosureSlot) Managed Object.\n\nWhen this managed object is deleted, the referenced [equipment.RackEnclosureSlot](mo://equipment.RackEnclosureSlot) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            },
            "SasExpanders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storageSasExpanderRef"
              }
            },
            "StorageEnclosures": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storageEnclosureRef"
              },
              "readOnly": true
            },
            "TopSystem": {
              "$ref": "#/definitions/topSystemRef",
              "description": "A collection of references to the [top.System](mo://top.System) Managed Object.\n\nWhen this managed object is deleted, the referenced [top.System](mo://top.System) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "computeRackUnitList": {
      "properties": {
        "Count": {
          "description": "The number of computeRackUnits matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of computeRackUnits matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/computeRackUnit"
          }
        }
      }
    },
    "computeServerConfigRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "computeServerConfig": {
      "title": "Compute:Server Config",
      "description": "Configurable properties of servers common to both a server and a server profile. The user will apply these properties on a server directly when the server is not associated with a server profile and through a server profile when the server is attached with a server profile.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "AssetTag": {
              "type": "string",
              "description": "User defined asset tag of the server. \n"
            },
            "UserLabel": {
              "type": "string",
              "description": "User defined description of the server.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "computeServerOperationTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "computeServerSettingRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "computeServerSetting": {
      "title": "Server Settings",
      "description": "Models the configurable properties of a server in Intersight.\n",
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "type": "object",
          "properties": {
            "AdminLocatorLedState": {
              "type": "string",
              "enum": [
                "None",
                "On",
                "Off"
              ],
              "default": "None",
              "description": "User configured state of the locator LED for the server. \n"
            },
            "AdminPowerState": {
              "type": "string",
              "enum": [
                "Policy",
                "PowerOn",
                "PowerOff",
                "PowerCycle",
                "HardReset",
                "Shutdown",
                "Reboot"
              ],
              "default": "Policy",
              "description": "User configured power state of the server. \n"
            },
            "ConfigState": {
              "type": "string",
              "enum": [
                "Applied",
                "Applying",
                "Failed"
              ],
              "default": "Applied",
              "readOnly": true,
              "description": "The configured state of these settings in the target server. The value is any one of Applied, Applying, Failed. Applied - This state denotes that the settings are applied successfully in the target server. Applying - This state denotes that the settings are being applied in the target server. Failed - This state denotes that the settings could not be applied in the target server. \n"
            },
            "OneTimeBootDevice": {
              "type": "string",
              "description": "The name of the device chosen by user for configuring One-Time Boot device. \n"
            },
            "ServerConfig": {
              "$ref": "#/definitions/computeServerConfig",
              "description": "The common server configurable properties between a server and a server profile.  \n"
            },
            "LocatorLed": {
              "$ref": "#/definitions/equipmentLocatorLedRef",
              "description": "Relates to locator LED MO of this server.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "Relates to the device end point from which this server was discovered.\n",
              "readOnly": true
            },
            "Server": {
              "$ref": "#/definitions/computeRackUnitRef",
              "description": "Compute RackUnit for which the settings are related to.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "computeServerSettingList": {
      "properties": {
        "Count": {
          "description": "The number of computeServerSettings matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of computeServerSettings matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/computeServerSetting"
          }
        }
      }
    },
    "condAlarmRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "condAlarm": {
      "title": "Cond:Alarm",
      "description": "A state-full entity representing a found problem. Alarms can be reported by the managed system itself or can be determined by Intersight.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "AffectedMoId": {
              "type": "string",
              "description": "MoId of the affected object from the managed system's point of view. \n"
            },
            "AffectedMoType": {
              "type": "string",
              "description": "Managed system affected object type. For example Adaptor, FI, CIMC. \n"
            },
            "AffectedObject": {
              "type": "string",
              "description": "A unique key for an alarm instance, consists of a combination of a unique system name and msAffectedObject. \n"
            },
            "AncestorMoId": {
              "type": "string",
              "description": "Parent MoId of the fault from managed system. For example, Blade moid for adaptor fault. \n"
            },
            "AncestorMoType": {
              "type": "string",
              "description": "Parent MO type of the fault from managed system. For example, Blade for adaptor fault. \n"
            },
            "Code": {
              "type": "string",
              "description": "A unique alarm code. For alarms mapped from UCS faults, this will be the same as the UCS fault code. \n"
            },
            "CreationTime": {
              "type": "string",
              "format": "date-time",
              "description": "The time the alarm was created. \n"
            },
            "Description": {
              "type": "string",
              "description": "A longer description of the alarm than the name. The description contains details of the component reporting the issue. \n"
            },
            "LastTransitionTime": {
              "type": "string",
              "format": "date-time",
              "description": "The time the alarm last had a change in severity. \n"
            },
            "MsAffectedObject": {
              "type": "string",
              "description": "A unique key for the alarm from the managed system's point of view. For example, in the case of UCS, this is the fault's dn. \n"
            },
            "Name": {
              "type": "string",
              "description": "Uniquely identifies the type of alarm. For alarms originating from Intersight, this will be a descriptive name. For alarms that are mapped from faults, the name will be derived from fault properties. For example, alarms mapped from UCS faults will use a prefix of UCS and appended with the fault code. \n"
            },
            "OrigSeverity": {
              "type": "string",
              "enum": [
                "None",
                "Info",
                "Critical",
                "Warning",
                "Cleared"
              ],
              "default": "None",
              "description": "The original severity when the alarm was first created. \n"
            },
            "Severity": {
              "type": "string",
              "enum": [
                "None",
                "Info",
                "Critical",
                "Warning",
                "Cleared"
              ],
              "default": "None",
              "description": "The severity of the alarm. Valid values are Critical, Warning, Info, and Cleared.  \n"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "Relationship to set accountMoid on Alarms. With \"onpeerdelete\" set to \"cascade\", Alarms get deleted when the associated registered device is deleted.\n"
            }
          }
        }
      ]
    },
    "condAlarmList": {
      "properties": {
        "Count": {
          "description": "The number of condAlarms matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of condAlarms matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/condAlarm"
          }
        }
      }
    },
    "condHclStatusRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "condHclStatus": {
      "title": "Cond:Hcl Status",
      "description": "The HCL status of a managed object after we have validated the managed object components' firmware and drivers against the HCL.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "ComponentStatus": {
              "type": "string",
              "enum": [
                "Incomplete",
                "Not-Found",
                "Not-Listed",
                "Validated",
                "Not-Evaluated"
              ],
              "default": "Incomplete",
              "description": "The overall status for the components found in the HCL. This will provide the HCL validation status for all the components. It can be one of the following. \"Validated\" - all the components hardware/software profiles are listed in the HCL. \"Not-Listed\" - one or more components hardware/software profiles are not listed in the HCL \"Incomplete\" - the components are not evaluated as the server's software/hardware profiles are not listed in the HCL. \"Not-Evaluated\" - The components are not evaluated against the HCL because it is exempted. \n"
            },
            "HardwareStatus": {
              "type": "string",
              "enum": [
                "Incomplete",
                "Not-Found",
                "Not-Listed",
                "Validated",
                "Not-Evaluated"
              ],
              "default": "Incomplete",
              "description": "The server model, processor and firmware are considered as part of the hardware profile for the server. This will provide the HCL validation status for the hardware profile. For the failure reason see the serverReason property. The status can be one of the following \"Validated\" - The server model, processor and firmware combination is listed in the HCL \"Not-Listed\" - The server model, processor and firmware combination is not listed in the HCL. \"Not-Evaluated\" - The server is not evaluated against the HCL because it is exempted. \n"
            },
            "HclFirmwareVersion": {
              "type": "string",
              "description": "The current CIMC version for the server normalized for querying HCL data. It is empty if we are missing this information. \n"
            },
            "HclModel": {
              "type": "string",
              "description": "The managed object's model to validate normalized for querying HCL data. It is empty if we are missing this information. \n"
            },
            "HclOsVendor": {
              "type": "string",
              "description": "The OS Vendor for the managed object to validate normalized for querying HCL data. It is empty if we are missing this information. \n"
            },
            "HclOsVersion": {
              "type": "string",
              "description": "The OS Version for the managed object to validate normalized for querying HCL data. It is empty if we are missing this information. \n"
            },
            "HclProcessor": {
              "type": "string",
              "description": "The managed object's processor to validate if applicable normalized for querying HCL data. It is empty if we are missing this information. \n"
            },
            "InvFirmwareVersion": {
              "type": "string",
              "description": "The current CIMC version for the server as received from inventory. It is empty if we are missing this information. \n"
            },
            "InvModel": {
              "type": "string",
              "description": "The managed object's model to validate as received from the inventory. It is empty if we are missing this information. \n"
            },
            "InvOsVendor": {
              "type": "string",
              "description": "The OS Vendor for the managed object to validate as received from inventory. It is empty if we are missing this information. \n"
            },
            "InvOsVersion": {
              "type": "string",
              "description": "The OS Version for the managed object to validate as received from inventory. It is empty if we are missing this information. \n"
            },
            "InvProcessor": {
              "type": "string",
              "description": "The managed object's processor to validate if applicable as received from inventory. It is empty if we are missing this information. \n"
            },
            "Reason": {
              "type": "string",
              "enum": [
                "Missing-Os-Info",
                "Incompatible-Components",
                "Compatible",
                "Not-Evaluated"
              ],
              "default": "Missing-Os-Info",
              "description": "The reason for the HCL status. It will be one of the following \"Missing-Os-Info\" - we are missing os information in the inventory from the device connector \"Incompatible-Components\" - we have 1 or more components with \"Not-Validated\" status \"Compatible\" - all the components have \"Validated\" status. \"Not-Evaluated\" - The server is not evaluated against the HCL because it is exempted. \n"
            },
            "ServerReason": {
              "type": "string",
              "enum": [
                "Missing-Os-Driver-Info",
                "Incompatible-Server",
                "Incompatible-Processor",
                "Incompatible-Os-Info",
                "Incompatible-Firmware",
                "Service-Unavailable",
                "Service-Error",
                "Not-Evaluated",
                "Incompatible-Components",
                "Compatible"
              ],
              "default": "Missing-Os-Driver-Info",
              "description": "The reason generated by the server's HCL validation. For HCL the evaluation can be seen in three logical stages 1. Evaluate the server's hardware status 2. Evaluate the server's software status 3. Evaluate the server's components (each component has its own hardware/software evaluation) The evaluation does not proceed to the next stage until the previous stage is evaluated. Therefore there can be only one validation reason. \"Incompatible-Server\" - the server model is not listed in the HCL. \"Incompatible-Processor\" - the server model and processor combination is not listed in HCL. \"Incompatible-Firmware\" - the server model, processor and server firmware is not listed in HCL. \"Missing-Os-Info\" - the os vendor and version is not listed in HCL with the HW profile. \"Incompatible-Os-Info\" - the os vendor and version is not listed in HCL with the HW profile. \"Incompatible-Components\" - there is one or more components with \"Not-Validated\" status \"Service-Unavailable\" - HCL data service is unavailable at the moment (try again later). \"Compatible\" - the server and all its components are validated. \"Not-Evaluated\" - The server is not evaluated against the HCL because it is exempted. \n"
            },
            "SoftwareStatus": {
              "type": "string",
              "enum": [
                "Incomplete",
                "Not-Found",
                "Not-Listed",
                "Validated",
                "Not-Evaluated"
              ],
              "default": "Incomplete",
              "description": "The OS vendor and version are considered part of the software profile for the server. This will provide the HCL validation status for the software profile. For the failure reason see the serverReason property. The status can be be one of the following \"Validated\" - The os vendor/version is listed in the HCL for the server model, processor and firmware \"Not-Listed\" - The os vendor/version is not listed in the HCL for the server model, processor and firmware \"Incomplete\" - The inventory is missing os vendor/version and HCL validation was not performed. \"Not-Evaluated\" - The server is not evaluated against the HCL because it is exempted. \n"
            },
            "Status": {
              "type": "string",
              "enum": [
                "Incomplete",
                "Not-Found",
                "Not-Listed",
                "Validated",
                "Not-Evaluated"
              ],
              "default": "Incomplete",
              "description": "The HCL compatibility status of the managed object. The status can be one of the following \"Incomplete\" - there is no enough information to evaluate against the HCL data \"Validated\" - all components have been evaluated against the HCL and they all have \"Validated\" status \"Not-Listed\" - all components have been evaluated against the HCL and one or more have \"Not-Listed\" status. \"Not-Evaluated\" - server is not evaluated against the HCL because it is exempted.  \n"
            },
            "Details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/condHclStatusDetailRef"
              },
              "description": "The collection of all the detailed related components for which we performed HCL validation.\n",
              "readOnly": true
            },
            "ManagedObject": {
              "$ref": "#/definitions/inventoryBaseRef",
              "description": "The managed object relationship for this HCLStatus.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Relationship to the registered device. We need this in order to correctly set permissions during device claim.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "condHclStatusList": {
      "properties": {
        "Count": {
          "description": "The number of condHclStatuses matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of condHclStatuses matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/condHclStatus"
          }
        }
      }
    },
    "condHclStatusDetailRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "condHclStatusDetail": {
      "title": "Cond:Hcl Status Detail",
      "description": "The HCL status detail for each component firmware and driver.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "HardwareStatus": {
              "type": "string",
              "enum": [
                "Missing-Os-Driver-Info",
                "Incompatible-Server-With-Component",
                "Incompatible-Processor",
                "Incompatible-Os-Info",
                "Incompatible-Component-Model",
                "Incompatible-Firmware",
                "Incompatible-Driver",
                "Incompatible-Firmware-Driver",
                "Service-Unavailable",
                "Service-Error",
                "Unrecognized-Protocol",
                "Not-Evaluated",
                "Compatible"
              ],
              "default": "Missing-Os-Driver-Info",
              "description": "The model is considered as part of the hardware profile for the component. This will provide the HCL validation status for the hardware profile. The reasons can be one of the following \"Incompatible-Server-With-Component\" - the server model and component combination is not listed in HCL \"Incompatible-Firmware\" - The server's firmware is not listed for this component's hardware profile \"Incompatible-Component\" - the component's model is not listed in the HCL \"Service-Unavailable\" - HCL data service is unavailable at the moment (try again later). This could be due to HCL data updating \"Not-Evaluated\" - the hardware profile was not evaulated for the component because the server's hw/sw status is not listed or server is exempted. \"Compatible\" - this component's hardware profile is listed in the HCL. \n"
            },
            "HclCimcVersion": {
              "type": "string",
              "description": "The current CIMC version for the server normalized for querying HCL data. \n"
            },
            "HclDriverName": {
              "type": "string",
              "description": "The current driver name of the component we are validating normalized for querying HCL data. \n"
            },
            "HclDriverVersion": {
              "type": "string",
              "description": "The current driver version of the component we are validating normalized for querying HCL data. \n"
            },
            "HclFirmwareVersion": {
              "type": "string",
              "description": "The current firmware version of the component model normalized for querying HCL data. \n"
            },
            "HclModel": {
              "type": "string",
              "description": "The component model we are trying to validate normalized for querying HCL data. \n"
            },
            "InvCimcVersion": {
              "type": "string",
              "description": "The current CIMC version for the server as received from inventory. \n"
            },
            "InvDriverName": {
              "type": "string",
              "description": "The current driver name of the component we are validating as received from inventory. \n"
            },
            "InvDriverVersion": {
              "type": "string",
              "description": "The current driver version of the component we are validating as received from inventory. \n"
            },
            "InvFirmwareVersion": {
              "type": "string",
              "description": "The current firmware version of the component model as received from inventory. \n"
            },
            "InvModel": {
              "type": "string",
              "description": "The component model we are trying to validate as received from inventory. \n"
            },
            "Reason": {
              "type": "string",
              "enum": [
                "Missing-Os-Driver-Info",
                "Incompatible-Server-With-Component",
                "Incompatible-Processor",
                "Incompatible-Os-Info",
                "Incompatible-Component-Model",
                "Incompatible-Firmware",
                "Incompatible-Driver",
                "Incompatible-Firmware-Driver",
                "Service-Unavailable",
                "Service-Error",
                "Unrecognized-Protocol",
                "Not-Evaluated",
                "Compatible"
              ],
              "default": "Missing-Os-Driver-Info",
              "description": "The reason for the status. The reason can be one of \"Incompatible-Server-With-Component\" - HCL validation has failed because the server model is not validated with this component \"Incompatible-Processor\" - HCL validation has failed because the processor is not validated with this server \"Incompatible-Os-Info\" - HCL validation has failed because the os vendor and version is not validated with this server \"Incompatible-Component-Model\" - HCL validation has failed because the component model is not validated \"Incompatible-Firmware\" - HCL validation has failed because the component or server firmware version is not validated \"Incompatible-Driver\" - HCL validation has failed because the driver version is not validated \"Incompatible-Firmware-Driver\" - HCL validation has failed because the firmware version and driver version is not validated \"Missing-Os-Driver-Info\" - HCL validation was not performed because we are missing os driver information form the inventory \"Service-Unavailable\" - HCL data service is unavailable at the moment (try again later). This could be due to HCL data updating \"Service-Error\" - HCL data service is available but an error occured when making the request or parsing the response \"Unrecognized-Protocol\" - This service does not recognize the reason code in the response from the HCL data service \"Compatible\" - this component's inventory data has \"Validated\" status with the HCL. \"Not-Evaluated\" - The component is not evaluated against the HCL because the server is exempted. \n"
            },
            "SoftwareStatus": {
              "type": "string",
              "enum": [
                "Missing-Os-Driver-Info",
                "Incompatible-Server-With-Component",
                "Incompatible-Processor",
                "Incompatible-Os-Info",
                "Incompatible-Component-Model",
                "Incompatible-Firmware",
                "Incompatible-Driver",
                "Incompatible-Firmware-Driver",
                "Service-Unavailable",
                "Service-Error",
                "Unrecognized-Protocol",
                "Not-Evaluated",
                "Compatible"
              ],
              "default": "Missing-Os-Driver-Info",
              "description": "The firmware, driver name and driver version are considered as part of the software profile for the component. This will provide the HCL validation status for the software profile. The reasons can be one of the following \"Incompatible-Firmware\" - the component's firmware is not listed under the server's hardware and software profile and the component's hardware profile \"Incompatible-Driver\" - the component's driver is not listed under the server's hardware and software profile and the component's hardware profile \"Incompatible-Firmware-Driver\" - the component's firmware and driver are not listed under the server's hardware and software profile and the component's hardware profile \"Service-Unavailable\" - HCL data service is unavailable at the moment (try again later). This could be due to HCL data updating \"Not-Evaluated\" - the component's hardware status was not evaluated because the server's hardware or software profile is not listed or server is exempted. \"Compatible\" - this component's hardware profile is listed in the HCL. \n"
            },
            "Status": {
              "type": "string",
              "enum": [
                "Incomplete",
                "Not-Found",
                "Not-Listed",
                "Validated",
                "Not-Evaluated"
              ],
              "default": "Incomplete",
              "description": "The status for the component model, firmware version, driver name, and driver version after validating against the HCL. The status can be one of the following \"Unknown\" - we do not have enough information to evaluate against the HCL data \"Validated\" - we have validated this component against the HCL and it has \"Validated\" status \"Not-Validated\" - we have validated this component against the HCL and it has \"Not-Validated\" status. \"Not-Evaluated\" - The component is not evaluated against the HCL because the server is exempted.  \n"
            },
            "Component": {
              "$ref": "#/definitions/inventoryBaseRef",
              "description": "The related component associated to this status detail HclStatusDetail (adapter or storage controller).\n",
              "readOnly": true
            },
            "HclStatus": {
              "$ref": "#/definitions/condHclStatusRef",
              "description": "A collection of references to the [cond.HclStatus](mo://cond.HclStatus) Managed Object.\n\nWhen this managed object is deleted, the referenced [cond.HclStatus](mo://cond.HclStatus) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "condHclStatusDetailList": {
      "properties": {
        "Count": {
          "description": "The number of condHclStatusDetails matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of condHclStatusDetails matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/condHclStatusDetail"
          }
        }
      }
    },
    "condHclStatusJobRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "condHclStatusJob": {
      "title": "Cond:Hcl Status Job",
      "description": "An HCLStatusJob is used to batch mo inventory notifications and process the evaluation of HCLStatus. When we receive a notification for an inventory MO, we will create a HCLStatusJob and inserted into the DB if it doesn't already exist. Then based on a timer we process the jobs in the DB and clear them.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "ManagedObject": {
              "$ref": "#/definitions/inventoryBaseRef",
              "description": "The related managed object that will be re-evaluated when this job executes.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The registered device associated with this job. We need this to correctly set permissions for the HCLStatus that will be re-evaluated when this job executes.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "condHclStatusJobList": {
      "properties": {
        "Count": {
          "description": "The number of condHclStatusJobs matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of condHclStatusJobs matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/condHclStatusJob"
          }
        }
      }
    },
    "connectorAuthMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorBaseMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorCloseStreamMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorCollectStatRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorCommandControlMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorCommandExecuteResultRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorCommandExecuteStreamRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorCommandTerminalStreamRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorCommonInventoryCollectionMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorCommonInventoryScopedCollectionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorCommonInventoryStartMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorCommonInventoryTriggerCollectionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorCommonInventoryTriggerSyncRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorConnectorTechsupportCollectRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorControlMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorDataSetRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorDownloadStatusRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorEventRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorEventChannelControlRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorFetchStreamMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorFileChecksumRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorFileDownloadMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorFileInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorFileMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorFileServerEntryRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorFileServerMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorFileUploadMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorFlowControlAckRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorFlowControlMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorHttpRequestRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorHttpResponseRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorInternalEventRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorInventoryApiRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorInventoryBuildConditionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorInventoryBuildStringRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorInventoryDetailsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorInventoryEtlInitRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorInventoryEtlObjectRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorInventoryEtlPropertyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorInventoryEtlRelationshipRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorInventoryExtractRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorInventoryExtractSubtractRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorInventoryExtractSumRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorInventoryObjectsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorInventoryPathExtractRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorInventoryRelSelectorRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorInventoryTransformRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorInventoryTransformBitShiftRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorInventoryTransformStringOpRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorInventoryTransformValueMapRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorJobAsyncResponseRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorJobMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorLogFileRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorLogTailerConfigRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorMessageToApplianceRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorNetConnectionTestRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorNetDnsQueryRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorNetMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorNetworkAgentEventRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorNetworkAgentMoEnvelopeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorNetworkAgentRequestRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorNetworkAgentResponseRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorPlatformParamBaseRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorPtyBorgBaseStimulusRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorPtyBorgCloseAllTerminalsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorPtyBorgDataMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorPtyBorgExpectScriptRequestRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorPtyBorgResultRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorPtyBorgScriptRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorPtyBorgStimulusSetRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorPtyBorgTerminalConfigRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorPtyBorgTerminalInstanceRequestRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorPtyBorgTerminalRequestRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorPtyBorgTextFsmTemplateRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorPtyBorgTextFsmTemplateConfigRequestRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorRecordRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorRecordSectionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorSftpRemoteFileRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorSftpRemoteFileInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorSshCommandOutputRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorSshConfigRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorSshMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorStartStreamRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorStartStreamFromDeviceRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorStatFieldRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorStatTransformationRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorStreamRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorStreamInputRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorStreamMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorTechsupportMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorUpgradeRequestRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorUrlRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorXmlApiMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorpackArtifactRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorpackConnectorPackRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorpackConnectorPackMetaRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorpackConnectorPackSummaryRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorpackDependentRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorpackInstallConnectorPacksRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorpackUpgradeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "connectorpackWaitForConnectorPackInstallRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "contentBaseParameterRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "contentBaseParameter": {
      "title": "BaseParameter",
      "description": "A Baseparameter is an abstract definition of specific value to be extracted from a given API or\ndevice response.\n\nThe BaseParameter object provides the name, type and content specific path, such as XPath or\nJSONPath, that points to the location of the parameter value in the content. Additional parameters\nnecessary to extract data based on content type needs to extend BaseParameter.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "AcceptSingleValue": {
              "type": "boolean",
              "description": "The flag that allows single values in content to be extracted as a\nsingle element collection in case the parameter is of Collection type.\n\nThis flag is applicable for parameters of type Collection only.\n \n",
              "x-nullable": true
            },
            "ComplexType": {
              "type": "string",
              "description": "The name of the complex type definition in case this is a complex\nparameter. The content.Grammar object must have a complex type, content.ComplexType,\ndefined with the specified name in types collection property.\n \n"
            },
            "ItemType": {
              "type": "string",
              "enum": [
                "simple",
                "complex",
                "collection"
              ],
              "default": "simple",
              "description": "The type of the collection item in case this is a collection parameter.\n \n"
            },
            "Name": {
              "type": "string",
              "description": "The name of the parameter. \n"
            },
            "Path": {
              "type": "string",
              "description": "The content specific path information that identifies the parameter\nvalue within the content. The value is usually a XPath or JSONPath or a\nregular expression in case of text content.\n \n"
            },
            "Type": {
              "type": "string",
              "enum": [
                "simple",
                "complex",
                "collection"
              ],
              "default": "simple",
              "description": "The type of the parameter. Accepted values are simple, complex,\ncollection.\n  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "contentComplexTypeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "contentComplexType": {
      "title": "Complex Type",
      "description": "If the given API/device response is a collection of items, each item and\nits properties can be modeled as a complex type.\n\nThe types are uniquely named within the grammar and provides the list of\nparameters to be extracted from each item. Name of the complex type can be\nused as the type of parameter that represents the complex value.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "description": "The unique name of this complex type within the grammar specification.\n \n"
            },
            "Parameters": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/contentBaseParameter"
              },
              "description": "The collection of parameters that are part of this complex type.\n  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "contentGrammarRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "contentGrammar": {
      "title": "Grammar Specification",
      "description": "Content handler framework supports extraction of required values from API/device\nresponses. These responses may be of various content types such as XML, JSON, etc.\nThe values of importance are modeled as parameters in the content handler framework.\n\nThe parameters can be of a scalar value type or a collection of values. A group\nof related parameters can be modeled as a single complex type parameter. These\ncomplex types will be very useful to extract a set of repeating group of related\nparameters.\n\nA grammar specification defines the set of parameters that need to be extracted\nfrom the content. The grammar specification allows complex type definitions to be\ndefined for any complex parameters.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "ErrorParameters": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/contentBaseParameter"
              },
              "description": "The list of parameter definitions, if found in a given API/device response,\nmakes the content handlers to treat the response as error response.\n\nThis is optional parameter.\n \n"
            },
            "Parameters": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/contentBaseParameter"
              },
              "description": "The list of parameter definitions that mark the parameters to be\nextracted using this grammar specification.\n \n"
            },
            "Types": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/contentComplexType"
              },
              "description": "The collection of complex types definitions used in this grammar\nspecification.\n\nThis is required only if any of the parameters provided in this grammar\nis of complex type.\n  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "contentParameterRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "contentParameter": {
      "title": "Parameter",
      "description": "Concrete implementation of BaseParameter for XML and JSON content types.\n",
      "allOf": [
        {
          "$ref": "#/definitions/contentBaseParameter"
        },
        {
          "type": "object"
        }
      ]
    },
    "contentTextParameterRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "contentTextParameter": {
      "title": "Content:Text Parameter",
      "description": "Concrete implementation of BaseParameter for Text content.\n",
      "allOf": [
        {
          "$ref": "#/definitions/contentBaseParameter"
        },
        {
          "type": "object",
          "properties": {
            "IsDelimiter": {
              "type": "boolean",
              "description": "Data to be extracted from text content can be simple type or complex type or collection of\nsimple/complex types. Complex types are group of simple or complex type.\n\nDelimiter is required to stop parsing list and complex data types.\n\nisDelimiter specifies whether given TextParameter is a delimiter or regular rule to capture\nthe text data.\n \n",
              "x-nullable": true
            },
            "IsNextCaptureOnSameLine": {
              "type": "boolean",
              "description": "Set to true of the next value to capture resides on the same text line of current match.\nBy default textFSM engine gets the next text line on finding the first match.\n \n",
              "x-nullable": true
            },
            "RegexLine": {
              "type": "string",
              "description": "Regular expression of the line containing the data to be extracted from text content.\n  \n"
            }
          }
        }
      ]
    },
    "cryptAccountKeyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "cryptDecryptRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "cryptEncryptRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "cryptEncryptionKeyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "cryptEncryptionTokenRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "deviceconnectorDeployTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "deviceconnectorPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "deviceconnectorPolicy": {
      "title": "Device Connector",
      "description": "Device Connector Policy.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "LockoutEnabled": {
              "type": "boolean",
              "description": "Enables configuration lockout on the endpoint.  \n",
              "x-nullable": true
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            },
            "Profiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/policyAbstractConfigProfileRef"
              },
              "description": "Relationship to the profile object.\n"
            }
          }
        }
      ]
    },
    "deviceconnectorPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of deviceconnectorPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of deviceconnectorPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/deviceconnectorPolicy"
          }
        }
      }
    },
    "deviceconnectorValidationTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "deviceproxyHttpRequestRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "devopsAbstractTriggerDetailsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "devopsMemoryProfileRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "devopsNotificationTriggerRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "devopsReconciliationTriggerRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "devopsTriggerRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "devopsViewTriggerRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "epansibleRunnerRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "equipmentAbstractDeviceRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "equipmentAbstractDevice": {
      "title": "Equipment:Abstract Device",
      "description": "Common attributes for inventory device in Intersight.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "Administrator defined name for the device. \n"
            },
            "Uuid": {
              "type": "string",
              "readOnly": true,
              "description": "Unique identity of the device. \n"
            },
            "Version": {
              "type": "string",
              "readOnly": true,
              "description": "Current running software version of the device.  \n"
            }
          }
        }
      ]
    },
    "equipmentBaseRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "equipmentBase": {
      "title": "Equipment:Base",
      "description": "Abstract base class for all equipments which have a vendor /model / serial.\n",
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "type": "object",
          "properties": {
            "Model": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the model of the given component. \n"
            },
            "Revision": {
              "type": "string",
              "readOnly": true
            },
            "Serial": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the serial of the given component. \n"
            },
            "Vendor": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the vendor of the given component.  \n"
            }
          }
        }
      ]
    },
    "equipmentChassisRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "equipmentChassis": {
      "title": "Equipment:Chassis",
      "description": "A physical holder housing blade servers.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "ChassisId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "The assigned identifier for a chassis. \n"
            },
            "ConnectionPath": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the connectivity path for the chassis enclosure. \n"
            },
            "ConnectionStatus": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the connectivity status for the chassis enclosure. \n"
            },
            "Description": {
              "type": "string",
              "readOnly": true,
              "description": "This field is to provide description for chassis model. \n"
            },
            "FaultSummary": {
              "type": "integer",
              "format": "int64"
            },
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the name for the chassis enclosure. \n"
            },
            "OperState": {
              "type": "string",
              "readOnly": true
            },
            "PartNumber": {
              "type": "string",
              "readOnly": true,
              "description": "Part Number identifier for the chassis enclosure. \n"
            },
            "Pid": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the Product ID for the chassis enclosure. \n"
            },
            "PlatformType": {
              "type": "string"
            },
            "ProductName": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the Product Name for the chassis enclosure. \n"
            },
            "Sku": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the Stock Keeping Unit for the chassis enclosure. \n"
            },
            "Vid": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the Vendor ID for the chassis enclosure.  \n"
            },
            "Blades": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/computeBladeRef"
              },
              "readOnly": true
            },
            "Fanmodules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/equipmentFanModuleRef"
              },
              "readOnly": true
            },
            "Ioms": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/equipmentIoCardRef"
              },
              "readOnly": true
            },
            "Psus": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/equipmentPsuRef"
              },
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            },
            "Sasexpanders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storageSasExpanderRef"
              },
              "readOnly": true
            },
            "Siocs": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/equipmentSystemIoControllerRef"
              },
              "readOnly": true
            },
            "StorageEnclosures": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storageEnclosureRef"
              },
              "description": "This field identifies the chassis enclosures.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "equipmentChassisList": {
      "properties": {
        "Count": {
          "description": "The number of equipmentChasses matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of equipmentChasses matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/equipmentChassis"
          }
        }
      }
    },
    "equipmentDeviceSummaryRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "equipmentDeviceSummary": {
      "title": "Equipment:Device Summary",
      "description": "Aggregation of properties pertaining to different inventory MOs.\n",
      "allOf": [
        {
          "$ref": "#/definitions/viewsView"
        },
        {
          "type": "object",
          "properties": {
            "Dn": {
              "type": "string",
              "readOnly": true,
              "description": "The distinguished name for the Network Element. \n"
            },
            "Model": {
              "type": "string",
              "readOnly": true,
              "description": "The model information of the Network Element. \n"
            },
            "Serial": {
              "type": "string",
              "readOnly": true,
              "description": "The serial number for the Network Element. \n"
            },
            "SourceObjectType": {
              "type": "string",
              "readOnly": true,
              "description": "The source object type of this view MO.  \n"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "equipmentDeviceSummaryList": {
      "properties": {
        "Count": {
          "description": "The number of equipmentDeviceSummaries matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of equipmentDeviceSummaries matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/equipmentDeviceSummary"
          }
        }
      }
    },
    "equipmentFanRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "equipmentFan": {
      "title": "Equipment:Fan",
      "description": "Fan in a Fabric Interconnect / Chassis / RackUnit.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "type": "string",
              "readOnly": true,
              "description": "This field is to provide description for the fan. \n"
            },
            "FanId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "This field acts as the identifier for this particular Fan, within the Fabric Interconnect. \n"
            },
            "FanModuleId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "This field is used to identify the Fan Module to which this Fan belongs. \n"
            },
            "ModuleId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Fan module Identifier for the fan. \n"
            },
            "OperState": {
              "type": "string",
              "readOnly": true
            },
            "PartNumber": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the Part Number for this Fan Unit. \n"
            },
            "Pid": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the Product ID for the fans. \n"
            },
            "Presence": {
              "type": "string",
              "readOnly": true,
              "description": "This field is used to indicate this fan unit's presence. \n"
            },
            "Sku": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the Stockkeeping Unit for this Fan Unit. \n"
            },
            "TrayId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Tray identifier for the fan module. \n"
            },
            "Vid": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the Vendor ID for this Fan Unit.  \n"
            },
            "EquipmentFanModule": {
              "$ref": "#/definitions/equipmentFanModuleRef",
              "description": "A collection of references to the [equipment.FanModule](mo://equipment.FanModule) Managed Object.\n\nWhen this managed object is deleted, the referenced [equipment.FanModule](mo://equipment.FanModule) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "equipmentFanList": {
      "properties": {
        "Count": {
          "description": "The number of equipmentFans matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of equipmentFans matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/equipmentFan"
          }
        }
      }
    },
    "equipmentFanModuleRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "equipmentFanModule": {
      "title": "Equipment:Fan Module",
      "description": "Moudule housing one or more fans.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "type": "string",
              "readOnly": true,
              "description": "This field is to provide description for the fan module. \n"
            },
            "ModuleId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "This field acts as the identifier for this particular Module, within the Fabric Interconnect. \n"
            },
            "OperState": {
              "type": "string",
              "readOnly": true,
              "description": "This field is used to indicate this fan module's operational state. \n"
            },
            "PartNumber": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the Part Number for this Fan Module. \n"
            },
            "Pid": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the Product ID for the fan module. \n"
            },
            "Presence": {
              "type": "string",
              "readOnly": true,
              "description": "This field is used to indicate this fan module's presence. \n"
            },
            "Sku": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the Stockkeeping Unit for this Fan Module. \n"
            },
            "TrayId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Tray identifier for the fan module. \n"
            },
            "Vid": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the Vendor ID for this Fan Module.  \n"
            },
            "ComputeRackUnit": {
              "$ref": "#/definitions/computeRackUnitRef",
              "description": "A collection of references to the [compute.RackUnit](mo://compute.RackUnit) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.RackUnit](mo://compute.RackUnit) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "EquipmentChassis": {
              "$ref": "#/definitions/equipmentChassisRef",
              "description": "A collection of references to the [equipment.Chassis](mo://equipment.Chassis) Managed Object.\n\nWhen this managed object is deleted, the referenced [equipment.Chassis](mo://equipment.Chassis) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "EquipmentRackEnclosure": {
              "$ref": "#/definitions/equipmentRackEnclosureRef",
              "description": "A collection of references to the [equipment.RackEnclosure](mo://equipment.RackEnclosure) Managed Object.\n\nWhen this managed object is deleted, the referenced [equipment.RackEnclosure](mo://equipment.RackEnclosure) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "Fans": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/equipmentFanRef"
              },
              "readOnly": true
            },
            "NetworkElement": {
              "$ref": "#/definitions/networkElementRef",
              "description": "A collection of references to the [network.Element](mo://network.Element) Managed Object.\n\nWhen this managed object is deleted, the referenced [network.Element](mo://network.Element) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "equipmentFanModuleList": {
      "properties": {
        "Count": {
          "description": "The number of equipmentFanModules matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of equipmentFanModules matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/equipmentFanModule"
          }
        }
      }
    },
    "equipmentFexRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "equipmentFex": {
      "title": "Equipment:Fex",
      "description": "Fabric Extender which can mutiplex traffic from the host facing ports.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "OperState": {
              "type": "string",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "equipmentFexList": {
      "properties": {
        "Count": {
          "description": "The number of equipmentFexes matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of equipmentFexes matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/equipmentFex"
          }
        }
      }
    },
    "equipmentIoCardRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "equipmentIoCard": {
      "title": "Equipment:Io Card",
      "description": "I/O module on a chassis which multiplexes traffic from blade servers.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "OperState": {
              "type": "string",
              "readOnly": true
            },
            "EquipmentChassis": {
              "$ref": "#/definitions/equipmentChassisRef",
              "description": "A collection of references to the [equipment.Chassis](mo://equipment.Chassis) Managed Object.\n\nWhen this managed object is deleted, the referenced [equipment.Chassis](mo://equipment.Chassis) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "equipmentIoCardList": {
      "properties": {
        "Count": {
          "description": "The number of equipmentIoCards matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of equipmentIoCards matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/equipmentIoCard"
          }
        }
      }
    },
    "equipmentIoExpanderRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "equipmentIoExpander": {
      "title": "Equipment:Io Expander",
      "description": "I/O expander card which is used as an extension for servers in a Colusa Chassis.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "OperState": {
              "type": "string",
              "readOnly": true,
              "description": "Identifies the operational state of I/O expander. \n"
            },
            "Presence": {
              "type": "string",
              "readOnly": true,
              "description": "Identifies the availability of I/O expander.  \n"
            },
            "ComputeBlade": {
              "$ref": "#/definitions/computeBladeRef",
              "description": "A collection of references to the [compute.Blade](mo://compute.Blade) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.Blade](mo://compute.Blade) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "equipmentIoExpanderList": {
      "properties": {
        "Count": {
          "description": "The number of equipmentIoExpanders matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of equipmentIoExpanders matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/equipmentIoExpander"
          }
        }
      }
    },
    "equipmentLocatorLedRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "equipmentLocatorLed": {
      "title": "Equipment:Locator Led",
      "description": "Locator Led of an Equipment like Rack, Disk etc.\n",
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "type": "object",
          "properties": {
            "Color": {
              "type": "string",
              "readOnly": true
            },
            "OperState": {
              "type": "string",
              "readOnly": true
            },
            "ComputeBlade": {
              "$ref": "#/definitions/computeBladeRef",
              "description": "A collection of references to the [compute.Blade](mo://compute.Blade) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.Blade](mo://compute.Blade) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "ComputeRackUnit": {
              "$ref": "#/definitions/computeRackUnitRef",
              "description": "A collection of references to the [compute.RackUnit](mo://compute.RackUnit) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.RackUnit](mo://compute.RackUnit) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            },
            "StoragePhysicalDisk": {
              "$ref": "#/definitions/storagePhysicalDiskRef",
              "description": "A collection of references to the [storage.PhysicalDisk](mo://storage.PhysicalDisk) Managed Object.\n\nWhen this managed object is deleted, the referenced [storage.PhysicalDisk](mo://storage.PhysicalDisk) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "equipmentLocatorLedList": {
      "properties": {
        "Count": {
          "description": "The number of equipmentLocatorLeds matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of equipmentLocatorLeds matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/equipmentLocatorLed"
          }
        }
      }
    },
    "equipmentPsuRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "equipmentPsu": {
      "title": "Equipment:Psu",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "type": "string",
              "readOnly": true,
              "description": "This field is to provide description for the power supply unit. \n"
            },
            "OperState": {
              "type": "string",
              "readOnly": true
            },
            "PartNumber": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the Part Number for this Power Supply Unit. \n"
            },
            "Pid": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the Product ID for the Power Supply. \n"
            },
            "Presence": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the presence state of the psu. \n"
            },
            "PsuFwVersion": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the Firmware Version of the Power Supply. \n"
            },
            "PsuId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "PsuInputSrc": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the input source for the Power Supply. \n"
            },
            "PsuType": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the type of the Power Supply. \n"
            },
            "PsuWattage": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the Wattage of the Power Supply. \n"
            },
            "Sku": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the Stockkeeping Unit for this Power Supply. \n"
            },
            "Vid": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the Vendor ID for this Power Supply Unit. \n"
            },
            "Voltage": {
              "type": "string",
              "readOnly": true,
              "description": "This field is used to indicate the Voltage for this Power Supply.  \n"
            },
            "ComputeRackUnit": {
              "$ref": "#/definitions/computeRackUnitRef",
              "description": "A collection of references to the [compute.RackUnit](mo://compute.RackUnit) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.RackUnit](mo://compute.RackUnit) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "EquipmentChassis": {
              "$ref": "#/definitions/equipmentChassisRef",
              "description": "A collection of references to the [equipment.Chassis](mo://equipment.Chassis) Managed Object.\n\nWhen this managed object is deleted, the referenced [equipment.Chassis](mo://equipment.Chassis) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "EquipmentRackEnclosure": {
              "$ref": "#/definitions/equipmentRackEnclosureRef",
              "description": "A collection of references to the [equipment.RackEnclosure](mo://equipment.RackEnclosure) Managed Object.\n\nWhen this managed object is deleted, the referenced [equipment.RackEnclosure](mo://equipment.RackEnclosure) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "NetworkElement": {
              "$ref": "#/definitions/networkElementRef",
              "description": "A collection of references to the [network.Element](mo://network.Element) Managed Object.\n\nWhen this managed object is deleted, the referenced [network.Element](mo://network.Element) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "equipmentPsuList": {
      "properties": {
        "Count": {
          "description": "The number of equipmentPsus matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of equipmentPsus matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/equipmentPsu"
          }
        }
      }
    },
    "equipmentRackEnclosureRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "equipmentRackEnclosure": {
      "title": "Equipment:Rack Enclosure",
      "description": "A physical holder housing rack servers.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "EnclosureId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "Fanmodules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/equipmentFanModuleRef"
              },
              "readOnly": true
            },
            "Psus": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/equipmentPsuRef"
              },
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            },
            "Slots": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/equipmentRackEnclosureSlotRef"
              },
              "readOnly": true
            }
          }
        }
      ]
    },
    "equipmentRackEnclosureList": {
      "properties": {
        "Count": {
          "description": "The number of equipmentRackEnclosures matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of equipmentRackEnclosures matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/equipmentRackEnclosure"
          }
        }
      }
    },
    "equipmentRackEnclosureSlotRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "equipmentRackEnclosureSlot": {
      "title": "Equipment:Rack Enclosure Slot",
      "description": "Rack Server Slot in a RackEnclosure.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "RackId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "RackUnitDn": {
              "type": "string",
              "readOnly": true
            },
            "EquipmentRackEnclosure": {
              "$ref": "#/definitions/equipmentRackEnclosureRef",
              "description": "A collection of references to the [equipment.RackEnclosure](mo://equipment.RackEnclosure) Managed Object.\n\nWhen this managed object is deleted, the referenced [equipment.RackEnclosure](mo://equipment.RackEnclosure) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RackUnit": {
              "$ref": "#/definitions/computeRackUnitRef",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "equipmentRackEnclosureSlotList": {
      "properties": {
        "Count": {
          "description": "The number of equipmentRackEnclosureSlots matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of equipmentRackEnclosureSlots matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/equipmentRackEnclosureSlot"
          }
        }
      }
    },
    "equipmentSharedIoModuleRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "equipmentSharedIoModule": {
      "title": "Equipment:Shared Io Module",
      "description": "I/O Controller present inside SIOC to provide data path from S-series server to FI.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "ConfigState": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the configuration state for this SIOM Unit. \n"
            },
            "Discovery": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the discovery state of SIOM.  \n"
            },
            "MacOfSharedIomAside": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the MAC of IOM-A side. \n"
            },
            "MacOfSharedIomBside": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the MAC of IOM-B side. \n"
            },
            "OperState": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the SIOM operational state. \n"
            },
            "PartNumber": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the Part Number for this SIOM Unit. \n"
            },
            "Reachability": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the reachability to FI-A and B side. \n"
            },
            "UsrLbl": {
              "type": "string",
              "readOnly": true,
              "description": "User label configured for the SIOM. \n"
            },
            "Vid": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the vendor id for this SIOM Unit.  \n"
            },
            "EquipmentSystemIoController": {
              "$ref": "#/definitions/equipmentSystemIoControllerRef",
              "description": "A collection of references to the [equipment.SystemIoController](mo://equipment.SystemIoController) Managed Object.\n\nWhen this managed object is deleted, the referenced [equipment.SystemIoController](mo://equipment.SystemIoController) MO unsets its reference to this deleted MO.\n"
            },
            "PortGroups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/portGroupRef"
              },
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "equipmentSharedIoModuleList": {
      "properties": {
        "Count": {
          "description": "The number of equipmentSharedIoModules matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of equipmentSharedIoModules matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/equipmentSharedIoModule"
          }
        }
      }
    },
    "equipmentSwitchCardRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "equipmentSwitchCard": {
      "title": "Equipment:Switch Card",
      "description": "Fixed / Removable module on a Fabric Interconnect / Switch.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "type": "string",
              "readOnly": true
            },
            "NumPorts": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "Presence": {
              "type": "string",
              "readOnly": true
            },
            "SlotId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "State": {
              "type": "string",
              "readOnly": true
            },
            "NetworkElement": {
              "$ref": "#/definitions/networkElementRef",
              "description": "A collection of references to the [network.Element](mo://network.Element) Managed Object.\n\nWhen this managed object is deleted, the referenced [network.Element](mo://network.Element) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "PortGroups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/portGroupRef"
              },
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "equipmentSwitchCardList": {
      "properties": {
        "Count": {
          "description": "The number of equipmentSwitchCards matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of equipmentSwitchCards matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/equipmentSwitchCard"
          }
        }
      }
    },
    "equipmentSystemIoControllerRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "equipmentSystemIoController": {
      "title": "Equipment:System Io Controller",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "ChassisId": {
              "type": "string",
              "readOnly": true,
              "description": "The assigned identifier for a chassis. \n"
            },
            "ConnectionPath": {
              "type": "string",
              "readOnly": true,
              "description": "Connection Path identifies the data path available between IOModule and FI. \n"
            },
            "ConnectionStatus": {
              "type": "string",
              "readOnly": true,
              "description": "Connection status identifies the status of data path. \n"
            },
            "Description": {
              "type": "string",
              "readOnly": true,
              "description": "This field gives a brief information on systemIOController. \n"
            },
            "ManagingInstance": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the CIMC that manages the controller. \n"
            },
            "OperState": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the SIOC operational state. \n"
            },
            "PartNumber": {
              "type": "string",
              "readOnly": true,
              "description": "Part Number identifier for the IO module. \n"
            },
            "Pid": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the Product ID for systemIOController. \n"
            },
            "SystemIoControllerId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "This represents system I/O Controller identifier.  \n"
            },
            "EquipmentChassis": {
              "$ref": "#/definitions/equipmentChassisRef",
              "description": "A collection of references to the [equipment.Chassis](mo://equipment.Chassis) Managed Object.\n\nWhen this managed object is deleted, the referenced [equipment.Chassis](mo://equipment.Chassis) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            },
            "SharedIoModule": {
              "$ref": "#/definitions/equipmentSharedIoModuleRef",
              "description": "This represents the adaptor housed in system I/O controller.\n"
            }
          }
        }
      ]
    },
    "equipmentSystemIoControllerList": {
      "properties": {
        "Count": {
          "description": "The number of equipmentSystemIoControllers matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of equipmentSystemIoControllers matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/equipmentSystemIoController"
          }
        }
      }
    },
    "equipmentTpmRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "equipmentTpm": {
      "title": "Equipment:Tpm",
      "description": "TPM security chip on server board.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "ActivationStatus": {
              "type": "string",
              "readOnly": true
            },
            "AdminState": {
              "type": "string",
              "readOnly": true
            },
            "Ownership": {
              "type": "string",
              "readOnly": true,
              "description": "Identifies the ownership information of the TPM. \n"
            },
            "Presence": {
              "type": "string",
              "readOnly": true,
              "description": "Identifies the presence of the trusted platform module. \n"
            },
            "TpmId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "Version": {
              "type": "string",
              "readOnly": true
            },
            "ComputeBoard": {
              "$ref": "#/definitions/computeBoardRef",
              "description": "A collection of references to the [compute.Board](mo://compute.Board) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.Board](mo://compute.Board) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "equipmentTpmList": {
      "properties": {
        "Count": {
          "description": "The number of equipmentTpms matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of equipmentTpms matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/equipmentTpm"
          }
        }
      }
    },
    "etherPhysicalPortRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "etherPhysicalPort": {
      "title": "Ether:Physical Port",
      "description": "Physical ethernet port present on a FI.\n",
      "allOf": [
        {
          "$ref": "#/definitions/portPhysical"
        },
        {
          "type": "object",
          "properties": {
            "MacAddress": {
              "type": "string",
              "readOnly": true
            },
            "TransceiverType": {
              "type": "string",
              "readOnly": true
            },
            "PortGroup": {
              "$ref": "#/definitions/portGroupRef",
              "description": "A collection of references to the [port.Group](mo://port.Group) Managed Object.\n\nWhen this managed object is deleted, the referenced [port.Group](mo://port.Group) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "PortSubGroup": {
              "$ref": "#/definitions/portSubGroupRef",
              "description": "A collection of references to the [port.SubGroup](mo://port.SubGroup) Managed Object.\n\nWhen this managed object is deleted, the referenced [port.SubGroup](mo://port.SubGroup) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "etherPhysicalPortList": {
      "properties": {
        "Count": {
          "description": "The number of etherPhysicalPorts matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of etherPhysicalPorts matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/etherPhysicalPort"
          }
        }
      }
    },
    "externalsiteAuthorizationRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "externalsiteAuthorization": {
      "title": "Externalsite:Authorization",
      "description": "An authentication request that will be used to get authorized from external repository like cisco.com in order to download the image. This MO creation is a one time configuration before calling firmware.Upgrade API. This MO has to be modified with updated details whenever the user has updated the credentials in external repository.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "IsPasswordSet": {
              "type": "boolean",
              "x-nullable": true
            },
            "IsUserIdSet": {
              "type": "boolean",
              "x-nullable": true
            },
            "Password": {
              "type": "string",
              "description": "The password of the given username to download the image from external repository like cisco.com. \n"
            },
            "RepositoryType": {
              "type": "string",
              "enum": [
                "cisco"
              ],
              "default": "cisco",
              "description": "The repository type to which this authorization will be requested. Cisco is the only available repository today. \n"
            },
            "UserId": {
              "type": "string",
              "description": "The username that has permission to download the image from external repository like cisco.com.  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "Reference of the account to which this authorization configuration is owned.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "externalsiteAuthorizationList": {
      "properties": {
        "Count": {
          "description": "The number of externalsiteAuthorizations matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of externalsiteAuthorizations matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/externalsiteAuthorization"
          }
        }
      }
    },
    "extsearchAppConfigRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "extsearchImportRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "faultInstanceRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "faultInstance": {
      "title": "Fault:Instance",
      "description": "An endpoint anomaly is represented by this object.\n",
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "type": "object",
          "properties": {
            "Acknowledged": {
              "type": "string",
              "readOnly": true
            },
            "AffectedDn": {
              "type": "string",
              "readOnly": true
            },
            "AffectedMoId": {
              "type": "string",
              "readOnly": true,
              "description": "Managed object Id which was affected. \n"
            },
            "AffectedMoType": {
              "type": "string",
              "readOnly": true,
              "description": "Managed object type which was affected. \n"
            },
            "AncestorMoId": {
              "type": "string",
              "readOnly": true
            },
            "AncestorMoType": {
              "type": "string",
              "readOnly": true
            },
            "Code": {
              "type": "string",
              "readOnly": true
            },
            "CreationTime": {
              "type": "string",
              "readOnly": true
            },
            "Description": {
              "type": "string",
              "readOnly": true,
              "description": "Short summary of the fault found. \n"
            },
            "LastTransitionTime": {
              "type": "string",
              "readOnly": true
            },
            "NumOccurrences": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "OriginalSeverity": {
              "type": "string",
              "readOnly": true
            },
            "PreviousSeverity": {
              "type": "string",
              "readOnly": true
            },
            "Rule": {
              "type": "string",
              "readOnly": true
            },
            "Severity": {
              "type": "string",
              "readOnly": true,
              "description": "Severity of the fault found.  \n"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "faultInstanceList": {
      "properties": {
        "Count": {
          "description": "The number of faultInstances matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of faultInstances matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/faultInstance"
          }
        }
      }
    },
    "fcPhysicalPortRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "fcPhysicalPort": {
      "title": "Fc:Physical Port",
      "description": "Physical fibre channel port present on a FI.\n",
      "allOf": [
        {
          "$ref": "#/definitions/portPhysical"
        },
        {
          "type": "object",
          "properties": {
            "TransceiverType": {
              "type": "string",
              "readOnly": true
            },
            "Wwn": {
              "type": "string",
              "readOnly": true
            },
            "PortGroup": {
              "$ref": "#/definitions/portGroupRef",
              "description": "A collection of references to the [port.Group](mo://port.Group) Managed Object.\n\nWhen this managed object is deleted, the referenced [port.Group](mo://port.Group) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "fcPhysicalPortList": {
      "properties": {
        "Count": {
          "description": "The number of fcPhysicalPorts matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of fcPhysicalPorts matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/fcPhysicalPort"
          }
        }
      }
    },
    "feedbackFeedbackRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "feedbackFeedbackDataRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "feedbackFeedbackData": {
      "title": "Feedback:Feedback Data",
      "description": "Feedback data that collected on the UI from user.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "AccountName": {
              "type": "string",
              "description": "Account name of the feedback sender. Copied in order to be persisted in case of account removal. \n"
            },
            "Comment": {
              "type": "string",
              "description": "Text of the feedback as provided by the user, if it is a bug or a comment. \n"
            },
            "Email": {
              "type": "string",
              "description": "User's email address details. \n"
            },
            "Evaluation": {
              "type": "string",
              "enum": [
                "Excellent",
                "Poor",
                "Fair",
                "Good"
              ],
              "default": "Excellent",
              "description": "Evalation rating as provided by the user to capture user sentiment regarding the issue. \n"
            },
            "FollowUp": {
              "type": "boolean",
              "description": "If a user is open for follow-up or not. \n",
              "x-nullable": true
            },
            "TraceIds": {
              "type": "object",
              "description": "Bunch of last traceId for reproducing user last activity. \n"
            },
            "Type": {
              "type": "string",
              "enum": [
                "Evaluation",
                "Bug"
              ],
              "default": "Evaluation",
              "description": "Type of the feedback from user.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "feedbackFeedbackPostRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "feedbackFeedbackPost": {
      "title": "Feedback:Feedback Post",
      "description": "Initial feedback submitted by the user from UI.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "FeedbackData": {
              "$ref": "#/definitions/feedbackFeedbackData",
              "description": "Feedback collected from the user and latest activity.  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "An Intersight Account. An account provides personalized access to Intersight.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "feedbackFeedbackSettingsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "feedbackHistoryItemRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "firmwareBaseDistributableRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "firmwareBaseDistributable": {
      "title": "Firmware:Base Distributable",
      "description": "An image distributed by Cisco.\n",
      "allOf": [
        {
          "$ref": "#/definitions/softwarerepositoryFile"
        },
        {
          "type": "object",
          "properties": {
            "BundleType": {
              "type": "string",
              "readOnly": true,
              "description": "The bundle type of the image, as published on cisco.com. \n"
            },
            "Guid": {
              "type": "string",
              "readOnly": true,
              "description": "The unique identifier for an image in a Cisco repository. \n"
            },
            "Mdfid": {
              "type": "string",
              "description": "The mdfid of the image provided by cisco.com. \n"
            },
            "Model": {
              "type": "string",
              "readOnly": true,
              "description": "The endpoint model for which this firmware image is applicable.  \n"
            },
            "PlatformType": {
              "type": "string",
              "readOnly": true,
              "description": "The platform type of the image. \n"
            },
            "RecommendedBuild": {
              "type": "string",
              "description": "The build which is recommended by Cisco. \n"
            },
            "ReleaseNotesUrl": {
              "type": "string",
              "description": "The url for the release notes of this image. \n"
            },
            "SoftwareTypeId": {
              "type": "string",
              "readOnly": true,
              "description": "The software type id provided by cisco.com. \n"
            },
            "SupportedModels": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The server models for which this image is applicable. \n"
            },
            "Vendor": {
              "type": "string",
              "description": "The vendor or publisher of this file.  \n",
              "default": "Cisco"
            }
          }
        }
      ]
    },
    "firmwareCifsServerRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "firmwareCifsServer": {
      "title": "Firmware:Cifs Server",
      "description": "An external file repository accessible through the CIFS protocol.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "MountOptions": {
              "type": "string",
              "enum": [
                "none",
                "ntlm",
                "ntlmi",
                "ntlmv2",
                "ntlmv2i",
                "ntlmssp",
                "ntlmsspi"
              ],
              "default": "none",
              "description": "Mount option (Authentication Protocol) as configured on the CIFS Server. Example:ntlmv2. \n"
            },
            "RemoteFile": {
              "type": "string",
              "description": "Filename of the image in the remote share location. Example:ucs-c220m5-huu-3.1.2c.iso. \n"
            },
            "RemoteIp": {
              "type": "string",
              "description": "CIFS Server Hostname or IP Address. Example:CIFS-server-hostname or 10.10.8.7. \n"
            },
            "RemoteShare": {
              "type": "string",
              "description": "Directory where the image is stored. Example:share/subfolder.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "firmwareDirectDownloadRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "firmwareDirectDownload": {
      "title": "Firmware:Direct Download",
      "description": "A specification for downloading the image from Cisco or appliance repository or user provided HTTP file server that hosts the image for firmware upgrade.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "HttpServer": {
              "$ref": "#/definitions/firmwareHttpServer",
              "description": "HTTP Server option when the image source is a local https server. \n"
            },
            "ImageSource": {
              "type": "string",
              "enum": [
                "cisco",
                "localHttp"
              ],
              "default": "cisco",
              "description": "Source type referring the image to be downloaded from CCO or from a local https server. \n"
            },
            "IsPasswordSet": {
              "type": "boolean",
              "x-nullable": true
            },
            "Password": {
              "type": "string",
              "description": "Password as configured on the local https server. \n"
            },
            "Upgradeoption": {
              "type": "string",
              "enum": [
                "sd_upgrade_mount_only",
                "sd_download_only",
                "sd_upgrade_only",
                "sd_upgrade_full"
              ],
              "default": "sd_upgrade_mount_only",
              "description": "Option to control the upgrade, e.g., sd_upgrade_mount_only - download the image into sd and upgrade wait for the server on-next boot. \n"
            },
            "Username": {
              "type": "string",
              "description": "Username as configured on the local https server.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "firmwareDistributableRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "firmwareDistributable": {
      "title": "Firmware:Distributable",
      "description": "An image distributed by Cisco.\n",
      "allOf": [
        {
          "$ref": "#/definitions/firmwareBaseDistributable"
        },
        {
          "type": "object",
          "properties": {
            "Catalog": {
              "$ref": "#/definitions/softwarerepositoryCatalogRef",
              "description": "The catalog where this image is present.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "firmwareDistributableList": {
      "properties": {
        "Count": {
          "description": "The number of firmwareDistributables matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of firmwareDistributables matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/firmwareDistributable"
          }
        }
      }
    },
    "firmwareDriverDistributableRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "firmwareDriverDistributable": {
      "title": "Firmware:Driver Distributable",
      "description": "A device driver image distributed by Cisco.\n",
      "allOf": [
        {
          "$ref": "#/definitions/firmwareBaseDistributable"
        },
        {
          "type": "object",
          "properties": {
            "Catalog": {
              "$ref": "#/definitions/softwarerepositoryCatalogRef",
              "description": "The catalog where this image is present.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "firmwareDriverDistributableList": {
      "properties": {
        "Count": {
          "description": "The number of firmwareDriverDistributables matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of firmwareDriverDistributables matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/firmwareDriverDistributable"
          }
        }
      }
    },
    "firmwareEulaRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "firmwareEula": {
      "title": "Firmware:Eula",
      "description": "EULA (End User License Agreement) acceptance status for an account to use cisco.com, to download software.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Accepted": {
              "type": "boolean",
              "readOnly": true,
              "description": "EULA acceptance status for the account. \n"
            },
            "Content": {
              "type": "string",
              "readOnly": true,
              "description": "EULA acceptance form content provided by cisco.com.  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "The account associated with this EULA acceptance status.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "firmwareEulaList": {
      "properties": {
        "Count": {
          "description": "The number of firmwareEulas matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of firmwareEulas matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/firmwareEula"
          }
        }
      }
    },
    "firmwareHttpServerRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "firmwareHttpServer": {
      "title": "Firmware:Http Server",
      "description": "An external HTTP file server.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "LocationLink": {
              "type": "string",
              "description": "HTTP/HTTPS link to the image. Accepted formats HTTP[s]://server-hostname/share/image or HTTP[s]://serverip/share/image. \n"
            },
            "MountOptions": {
              "type": "string",
              "description": "Mount option as configured on the HTTP server. Empty if nothing is configured.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "firmwareNetworkShareRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "firmwareNetworkShare": {
      "title": "Firmware:Network Share",
      "description": "Firmware upgrade where the image is located in remote shared machine.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "CifsServer": {
              "$ref": "#/definitions/firmwareCifsServer",
              "description": "CIFS file server option for network share upgrade. \n"
            },
            "HttpServer": {
              "$ref": "#/definitions/firmwareHttpServer",
              "description": "HTTP (for WWW) file server option for network share upgrade. \n"
            },
            "IsPasswordSet": {
              "type": "boolean",
              "x-nullable": true
            },
            "MapType": {
              "type": "string",
              "enum": [
                "nfs",
                "cifs",
                "www"
              ],
              "default": "nfs",
              "description": "File server protocols like CIFS, NFS, WWW for HTTP (S) that hosts the image. \n"
            },
            "NfsServer": {
              "$ref": "#/definitions/firmwareNfsServer",
              "description": "NFS file server option for network share upgrade. \n"
            },
            "Password": {
              "type": "string",
              "description": "Password as configured on the file server. \n"
            },
            "Upgradeoption": {
              "type": "string",
              "enum": [
                "nw_upgrade_full",
                "nw_upgrade_mount_only"
              ],
              "default": "nw_upgrade_full",
              "description": "Option to control the upgrade, e.g., 1) nw_upgrade_mount_only - mount the image from a file server and run upgrade on-next server boot 2) nw_upgrade_full - mount the image and run upgrade immediately. \n"
            },
            "Username": {
              "type": "string",
              "description": "Username as configured on the file server.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "firmwareNfsServerRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "firmwareNfsServer": {
      "title": "Firmware:Nfs Server",
      "description": "Network share file server.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "MountOptions": {
              "type": "string",
              "description": "Mount option as configured on the NFS Server. Example:nolock. \n"
            },
            "RemoteFile": {
              "type": "string",
              "description": "Filename of the image in the remote share location. Example:ucs-c220m5-huu-3.1.2c.iso. \n"
            },
            "RemoteIp": {
              "type": "string",
              "description": "NFS Server Hostname or IP Address. Example:NFS-server-hostname or 10.10.8.7. \n"
            },
            "RemoteShare": {
              "type": "string",
              "description": "Directory where the image is stored. Example:/share/subfolder.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "firmwareRunningFirmwareRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "firmwareRunningFirmware": {
      "title": "Firmware:Running Firmware",
      "description": "Running Firmware on an endpoint.\n",
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "type": "object",
          "properties": {
            "Component": {
              "type": "string",
              "readOnly": true,
              "description": "Kind of the firmware - boot-booloader/system/kernel. \n"
            },
            "PackageVersion": {
              "type": "string",
              "readOnly": true,
              "description": "Package version which the firmware belongs to. \n"
            },
            "Type": {
              "type": "string",
              "readOnly": true,
              "description": "Type of the firmware. \n"
            },
            "Version": {
              "type": "string",
              "readOnly": true,
              "description": "Version of the firmware.  \n"
            },
            "BiosUnit": {
              "$ref": "#/definitions/biosUnitRef",
              "description": "A collection of references to the [bios.Unit](mo://bios.Unit) Managed Object.\n\nWhen this managed object is deleted, the referenced [bios.Unit](mo://bios.Unit) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "ManagementController": {
              "$ref": "#/definitions/managementControllerRef",
              "description": "A collection of references to the [management.Controller](mo://management.Controller) Managed Object.\n\nWhen this managed object is deleted, the referenced [management.Controller](mo://management.Controller) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "NetworkElements": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/networkElementRef"
              }
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            },
            "StorageController": {
              "$ref": "#/definitions/storageControllerRef",
              "description": "A collection of references to the [storage.Controller](mo://storage.Controller) Managed Object.\n\nWhen this managed object is deleted, the referenced [storage.Controller](mo://storage.Controller) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "StoragePhysicalDisk": {
              "$ref": "#/definitions/storagePhysicalDiskRef",
              "description": "A collection of references to the [storage.PhysicalDisk](mo://storage.PhysicalDisk) Managed Object.\n\nWhen this managed object is deleted, the referenced [storage.PhysicalDisk](mo://storage.PhysicalDisk) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "firmwareRunningFirmwareList": {
      "properties": {
        "Count": {
          "description": "The number of firmwareRunningFirmwares matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of firmwareRunningFirmwares matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/firmwareRunningFirmware"
          }
        }
      }
    },
    "firmwareServerConfigurationUtilityDistributableRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "firmwareServerConfigurationUtilityDistributable": {
      "title": "Server Configuration Utility",
      "description": "A server configuration utility image distributed by Cisco.\n",
      "allOf": [
        {
          "$ref": "#/definitions/firmwareBaseDistributable"
        },
        {
          "type": "object",
          "properties": {
            "Catalog": {
              "$ref": "#/definitions/softwarerepositoryCatalogRef",
              "description": "The catalog where this image is present.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "firmwareServerConfigurationUtilityDistributableList": {
      "properties": {
        "Count": {
          "description": "The number of firmwareServerConfigurationUtilityDistributables matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of firmwareServerConfigurationUtilityDistributables matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/firmwareServerConfigurationUtilityDistributable"
          }
        }
      }
    },
    "firmwareUpgradeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "firmwareUpgrade": {
      "title": "Firmware:Upgrade",
      "description": "Firmware upgrade operation that downloads the image from Cisco/appliance/user provided HTTP repository or use the image from a network share and upgrade. The direct download is used for upgrade to use the image from Cisco repository or appliance repository. The network share is used for upgrade to use the image from a network share in user data center.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "DirectDownload": {
              "$ref": "#/definitions/firmwareDirectDownload",
              "description": "Direct download options in case the upgradeType is direct download based upgrade. \n"
            },
            "NetworkShare": {
              "$ref": "#/definitions/firmwareNetworkShare",
              "description": "Network share options in case of the upgradeType is network share based upgrade. \n"
            },
            "UpgradeType": {
              "type": "string",
              "enum": [
                "direct_upgrade",
                "network_upgrade"
              ],
              "default": "direct_upgrade",
              "description": "Desired upgrade mode to choose either direct download based upgrade or network share upgrade.  \n"
            },
            "Device": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The device onto which the upgrade is peformed.\n",
              "readOnly": true
            },
            "Distributable": {
              "$ref": "#/definitions/firmwareDistributableRef",
              "description": "The image that is used to upgrade the server for direct download upgrade type operation.\n"
            },
            "Server": {
              "$ref": "#/definitions/computeRackUnitRef",
              "description": "The server on which this upgrade operation is performed.\n"
            },
            "UpgradeStatus": {
              "$ref": "#/definitions/firmwareUpgradeStatusRef",
              "description": "Captures status of this upgrade information.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "firmwareUpgradeList": {
      "properties": {
        "Count": {
          "description": "The number of firmwareUpgrades matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of firmwareUpgrades matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/firmwareUpgrade"
          }
        }
      }
    },
    "firmwareUpgradeStatusRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "firmwareUpgradeStatus": {
      "title": "Firmware:Upgrade Status",
      "description": "Status of the upgrade operation includes the status of download and upgrade stages.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "DownloadError": {
              "type": "string",
              "description": "The error message from the endpoint during the download. \n"
            },
            "DownloadPercentage": {
              "type": "integer",
              "format": "int64",
              "description": "The percentage of the image downloaded in the endpoint. \n"
            },
            "DownloadStage": {
              "type": "string",
              "description": "The image download stages. Example:downloading, flashing. \n"
            },
            "DownloadStatus": {
              "type": "string",
              "description": "The download status of the image in the endpoint. \n"
            },
            "EpPowerStatus": {
              "type": "string",
              "enum": [
                "none",
                "powered on",
                "powered off"
              ],
              "default": "none",
              "description": "The server power status after the upgrade request is submitted in the endpoint. \n"
            },
            "OverallError": {
              "type": "string",
              "description": "The reason for the operation failure. \n"
            },
            "OverallPercentage": {
              "type": "integer",
              "format": "int64",
              "description": "The overall percentage of the operation. \n"
            },
            "Overallstatus": {
              "type": "string",
              "enum": [
                "none",
                "started",
                "download initiating",
                "download initiated",
                "downloading",
                "downloaded",
                "upgrade initiating",
                "upgrade initiated",
                "upgrading",
                "upgraded",
                "success",
                "failed",
                "pending"
              ],
              "default": "none",
              "description": "The overall status of the operation. \n"
            },
            "PendingType": {
              "type": "string",
              "enum": [
                "none",
                "pending for next reboot"
              ],
              "default": "none",
              "description": "Pending reason for the upgrade waiting.  \n"
            },
            "Upgrade": {
              "$ref": "#/definitions/firmwareUpgradeRef",
              "description": "A collection of references to the [firmware.Upgrade](mo://firmware.Upgrade) Managed Object.\n\nWhen this managed object is deleted, the referenced [firmware.Upgrade](mo://firmware.Upgrade) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "firmwareUpgradeStatusList": {
      "properties": {
        "Count": {
          "description": "The number of firmwareUpgradeStatuses matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of firmwareUpgradeStatuses matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/firmwareUpgradeStatus"
          }
        }
      }
    },
    "firmwareimcCancelPendingFirmwareUpgradeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "firmwareimcCheckForExistingUpgradeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "firmwareimcFirmwareUpgradeResultHandlerRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "firmwareimcHuuFirmwareUpgradeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "firmwareimcInitiateDownloadRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "firmwareimcWaitForDownloadRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "firmwareimcWaitForFirmwareUpgradeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "forecastCatalogRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "forecastCatalog": {
      "title": "Forecast:Catalog",
      "description": "A catalog for managing forecast settings.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "SchedTime": {
              "type": "string",
              "readOnly": true,
              "description": "The time at which the regression model needs to run for all the metrics specified in catalog. \n"
            },
            "Version": {
              "type": "string",
              "readOnly": true,
              "description": "The catalog version used in forecast configuration service.  \n"
            },
            "Definition": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/forecastDefinitionRef"
              },
              "description": "The list of forecast definitions.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "forecastCatalogList": {
      "properties": {
        "Count": {
          "description": "The number of forecastCatalogs matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of forecastCatalogs matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/forecastCatalog"
          }
        }
      }
    },
    "forecastDefinitionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "forecastDefinition": {
      "title": "Forecast:Definition",
      "description": "Definition for forecast metric settings.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "AlertThresholdInPercentage": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Threshold above which user needs to be indicated through alarm/alert. \n"
            },
            "DataSource": {
              "type": "string",
              "readOnly": true,
              "description": "Data source from where we get the data for the metrics to compute regression model. For example Druid. \n"
            },
            "MetricName": {
              "type": "string",
              "readOnly": true,
              "description": "Metric for which forecast prediction is done. Metrics are defined in the catalog file. Currently its only HyperFlex cluster storage capacity usage. \n"
            },
            "MinNumOfDaysOfData": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Minimum number of days of data required for computing forecast model. \n"
            },
            "NumOfDaysOfHistoricalData": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Number of days of data queried from the data source (example Druid ) which is used as input data for computing forecast model. \n"
            },
            "PlatformType": {
              "type": "string",
              "readOnly": true,
              "description": "The platform type for which we want to compute forecast. For example HyperFlex, NetworkElement.  \n"
            },
            "Catalog": {
              "$ref": "#/definitions/forecastCatalogRef",
              "description": "A collection of references to the [forecast.Catalog](mo://forecast.Catalog) Managed Object.\n\nWhen this managed object is deleted, the referenced [forecast.Catalog](mo://forecast.Catalog) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "forecastDefinitionList": {
      "properties": {
        "Count": {
          "description": "The number of forecastDefinitions matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of forecastDefinitions matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/forecastDefinition"
          }
        }
      }
    },
    "forecastInstanceRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "forecastInstance": {
      "title": "Forecast:Instance",
      "description": "Entity representing forecast result for instance of managed object, ie, data source.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "AltModel": {
              "type": "array",
              "items": {
                "type": "number"
              },
              "readOnly": true,
              "description": "Experimental predictive model generated from the historical data using experimental algorithm. The two models are used to plot and do a comparision. \n"
            },
            "DeviceId": {
              "type": "string",
              "readOnly": true,
              "description": "The Moid of the Intersight managed device instance for which regression model is derived. \n"
            },
            "FullCapDays": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "The number of days remaining before the device reaches its full functional capacity. \n"
            },
            "MetricName": {
              "type": "string",
              "readOnly": true,
              "description": "The name of the metric for which regression model is generated. \n"
            },
            "MinDaysForForecast": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "The minimum number of days the HyperFlex cluster should be up for computing forecast. \n"
            },
            "Model": {
              "$ref": "#/definitions/forecastModel",
              "readOnly": true,
              "description": "Predictive model generated from the historical data of a device or source. \n"
            },
            "ThresholdDays": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "The number of days remaining before the device reaches the specified threshold for the metric as defined in definition.  \n"
            },
            "ForecastDef": {
              "$ref": "#/definitions/forecastDefinitionRef",
              "description": "The relationship to the forecast definition based on which the instance is generated.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The relationship to the registered device for which forecast is computed.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "forecastInstanceList": {
      "properties": {
        "Count": {
          "description": "The number of forecastInstances matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of forecastInstances matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/forecastInstance"
          }
        }
      }
    },
    "forecastModelRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "forecastModel": {
      "title": "Forecast:Model",
      "description": "Model encapsulated model type and the model generated based on the type for computing forecast. For example if linear regression predictive modeling is used then the model data contains slope, coefficient and RMSE.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Accuracy": {
              "type": "number",
              "format": "float",
              "description": "The standard error of the estimate is a measure of the accuracy of predictions from predective modeling. \n"
            },
            "ModelData": {
              "type": "array",
              "items": {
                "type": "number"
              },
              "description": "The collection of model data returned by running a predictive modeling. Data can range from slope, coefficient and more depending on the type of model used. \n"
            },
            "ModelType": {
              "type": "string",
              "enum": [
                "Linear"
              ],
              "default": "Linear",
              "description": "Model type indicating type of predictive model used for computing forecast.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "graphicsCardRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "graphicsCard": {
      "title": "Graphics:Card",
      "description": "Graphics Card present in a server.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "CardId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "It shows the id of graphics card. \n"
            },
            "DeviceId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "It shows the device id of grphics card. \n"
            },
            "ExpanderSlot": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the expander slot inforamtion for the card. \n"
            },
            "FirmwareVersion": {
              "type": "string",
              "readOnly": true,
              "description": "It shows current firmware version of graphics card. \n"
            },
            "Mode": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the current mode of graphics card. \n"
            },
            "NumGpus": {
              "type": "string",
              "description": "It shows number of controllers under each card. \n"
            },
            "OperState": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the current operational state of graphics card. \n"
            },
            "PciAddress": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the pci address of graphics card. \n"
            },
            "PciAddressList": {
              "type": "string",
              "readOnly": true,
              "description": "This list contains the pci address of all controllers for corresponding card. \n"
            },
            "PciSlot": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the pci slot name for grapchics card.  \n"
            },
            "ComputeBoard": {
              "$ref": "#/definitions/computeBoardRef",
              "description": "A collection of references to the [compute.Board](mo://compute.Board) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.Board](mo://compute.Board) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "GraphicsControllers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/graphicsControllerRef"
              },
              "description": "It shows the controllers under each graphics card.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "graphicsCardList": {
      "properties": {
        "Count": {
          "description": "The number of graphicsCards matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of graphicsCards matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/graphicsCard"
          }
        }
      }
    },
    "graphicsControllerRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "graphicsController": {
      "title": "Graphics:Controller",
      "description": "Controller for a Graphics Card.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "ControllerId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "It shows the id of graphics controller. \n"
            },
            "PciAddr": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the pci address of graphics controller. \n"
            },
            "PciSlot": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the pci slot inforamtion of graphics controller.  \n"
            },
            "GraphicsCard": {
              "$ref": "#/definitions/graphicsCardRef",
              "description": "A collection of references to the [graphics.Card](mo://graphics.Card) Managed Object.\n\nWhen this managed object is deleted, the referenced [graphics.Card](mo://graphics.Card) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "graphicsControllerList": {
      "properties": {
        "Count": {
          "description": "The number of graphicsControllers matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of graphicsControllers matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/graphicsController"
          }
        }
      }
    },
    "hclCompatibilityInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hclCompatibilityStatusRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hclCompatibilityStatus": {
      "title": "Hcl:Compatibility Status",
      "description": "Check the compatibility status for the given hardware and software configurations.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "ProfileList": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hclHardwareCompatibilityProfile"
              },
              "description": "List of HardwareCompatibilityProfiles for which the compatibility status needs to be computed. \n"
            },
            "RequestType": {
              "type": "string",
              "enum": [
                "FillSupportedVersions",
                "CheckCompatibility",
                "GetRecommendedDrivers"
              ],
              "default": "FillSupportedVersions",
              "description": "Type of the request to be served.  \n"
            }
          }
        }
      ]
    },
    "hclConstraintRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hclConstraint": {
      "title": "Hcl:Constraint",
      "description": "A key value pair, determining a compatibility constraint for the matching version combinations.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "ConstraintName": {
              "type": "string",
              "description": "Name or key of the applicable compatibility constraint. \n"
            },
            "ConstraintValue": {
              "type": "string",
              "description": "Value of the applicable compatibility constraint. Could either be a string value or a regex.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "hclDataImportLogRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hclDriverImageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hclDriverImage": {
      "title": "Hcl:Driver Image",
      "description": "Collection used to store the driver ISO urls for each server based on how it is managed.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "DriverIsoUrl": {
              "type": "string",
              "description": "URL of the driver ISO images. \n"
            },
            "ManagementType": {
              "type": "string",
              "enum": [
                "UCSM",
                "IMC"
              ],
              "default": "UCSM",
              "description": "Type of the UCS version indicating whether it is a UCSM release vesion or a IMC release. \n"
            },
            "ServerPid": {
              "type": "string",
              "description": "Three part ID representing the server model as returned by UCSM/CIMC XML APIs.  \n"
            }
          }
        }
      ]
    },
    "hclDriverImageList": {
      "properties": {
        "Count": {
          "description": "The number of hclDriverImages matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hclDriverImages matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hclDriverImage"
          }
        }
      }
    },
    "hclExemptedCatalogRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hclExemptedCatalog": {
      "title": "Hcl:Exempted Catalog",
      "description": "Collection used to store exempted products (ie. adapters, storage controllers, etc). These products should be ignored for HCL validation purposes.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Comments": {
              "type": "string",
              "description": "Reason for the exemption. \n"
            },
            "Name": {
              "type": "string",
              "description": "A unique descriptive name of the exemption. \n"
            },
            "OsVendor": {
              "type": "string",
              "description": "Vendor of the Operating System. \n"
            },
            "OsVersion": {
              "type": "string",
              "description": "Version of the Operating system. \n"
            },
            "ProcessorName": {
              "type": "string",
              "description": "Name of the processor supported for the server. \n"
            },
            "ProductModels": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Models of the product/adapter. \n"
            },
            "ProductType": {
              "type": "string",
              "description": "Type of the product/adapter say PT for Pass Through controllers. \n"
            },
            "ServerPid": {
              "type": "string",
              "description": "Three part ID representing the server model as returned by UCSM/CIMC XML APIs. \n"
            },
            "UcsVersion": {
              "type": "string",
              "description": "Version of the UCS software. \n"
            },
            "VersionType": {
              "type": "string",
              "description": "Type of the UCS version indicating whether it is a UCSM release vesion or a IMC release.  \n"
            }
          }
        }
      ]
    },
    "hclExemptedCatalogList": {
      "properties": {
        "Count": {
          "description": "The number of hclExemptedCatalogs matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hclExemptedCatalogs matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hclExemptedCatalog"
          }
        }
      }
    },
    "hclFirmwareRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hclFirmware": {
      "title": "Hcl:Firmware",
      "description": "Model which holds the details of firmware version and driver version.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "DriverName": {
              "type": "string",
              "description": "Protocol for which the driver is provided. E.g.  enic, fnic, lsi_mr3. \n"
            },
            "DriverVersion": {
              "type": "string",
              "description": "Version of the Driver supported. \n"
            },
            "ErrorCode": {
              "type": "string",
              "enum": [
                "Success",
                "Unknown",
                "UnknownServer",
                "InvalidUcsVersion",
                "ProcessorNotSupported",
                "OSNotSupported",
                "OSUnknown",
                "UCSVersionNotSupported",
                "UcsVersionServerOSCombinationNotSupported",
                "ProductUnknown",
                "ProductNotSupported",
                "DriverNameNotSupported",
                "FirmwareVersionNotSupported",
                "DriverVersionNotSupported",
                "FirmwareVersionDriverVersionCombinationNotSupported",
                "FirmwareVersionAndDriverVersionNotSupported",
                "FirmwareVersionAndDriverNameNotSupported",
                "InternalError",
                "MarshallingError",
                "Exempted"
              ],
              "default": "Success",
              "readOnly": true,
              "description": "Error code for the support status. \n"
            },
            "FirmwareVersion": {
              "type": "string",
              "description": "Firmware version of the product/adapter supported. \n"
            },
            "Id": {
              "type": "string",
              "description": "Identifier of the firmware. \n"
            },
            "LatestDriver": {
              "type": "boolean",
              "readOnly": true,
              "description": "True if the driver is latest recommended driver. \n"
            },
            "LatestFirmware": {
              "type": "boolean",
              "readOnly": true,
              "description": "True if the firmware is latest recommended firmware.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "hclHardwareCompatibilityProfileRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hclHardwareCompatibilityProfile": {
      "title": "Hcl:Hardware Compatibility Profile",
      "description": "Profile giving server hardware details, OS details and UCS Version details.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "DriverIsoUrl": {
              "type": "string",
              "description": "Url for the ISO with the drivers supported for the server. \n"
            },
            "ErrorCode": {
              "type": "string",
              "enum": [
                "Success",
                "Unknown",
                "UnknownServer",
                "InvalidUcsVersion",
                "ProcessorNotSupported",
                "OSNotSupported",
                "OSUnknown",
                "UCSVersionNotSupported",
                "UcsVersionServerOSCombinationNotSupported",
                "ProductUnknown",
                "ProductNotSupported",
                "DriverNameNotSupported",
                "FirmwareVersionNotSupported",
                "DriverVersionNotSupported",
                "FirmwareVersionDriverVersionCombinationNotSupported",
                "FirmwareVersionAndDriverVersionNotSupported",
                "FirmwareVersionAndDriverNameNotSupported",
                "InternalError",
                "MarshallingError",
                "Exempted"
              ],
              "default": "Success",
              "readOnly": true,
              "description": "Error code indicating the compatibility status. \n"
            },
            "Id": {
              "type": "string",
              "description": "Identifier of the hardware compatibility profile. \n"
            },
            "OsVendor": {
              "type": "string",
              "description": "Vendor of the Operating System running on the server. \n"
            },
            "OsVersion": {
              "type": "string",
              "description": "Version of the Operating System running on the server. \n"
            },
            "ProcessorModel": {
              "type": "string",
              "description": "Model of the processor present in the server. \n"
            },
            "Products": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hclProduct"
              },
              "description": "List of the products (adapters/storage controllers) for which compatibility status needs to be checked. \n"
            },
            "ServerModel": {
              "type": "string",
              "description": "Model of the server as returned by UCSM/CIMC XML API. \n"
            },
            "ServerRevision": {
              "type": "string",
              "description": "Revision of the server model. \n"
            },
            "UcsVersion": {
              "type": "string",
              "description": "Version of the UCS software. \n"
            },
            "VersionType": {
              "type": "string",
              "enum": [
                "UCSM",
                "IMC"
              ],
              "default": "UCSM",
              "description": "Type of the UCS version indicating whether it is a UCSM release vesion or a IMC release.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "hclHyperflexSoftwareCompatibilityInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hclHyperflexSoftwareCompatibilityInfo": {
      "title": "Hyperflex Software Compatibility Information",
      "description": "Lists software compatibility information between different HperFlex component versions like HyperFlex Data Platform, Hypervisor, Drive Firmware, etc.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Constraints": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hclConstraint"
              },
              "description": "Constraint for the matching software compatibility info, in case the match is applicable for certain cases only. For example a combination of (HyperFlex Data Platform, serverFw and hypervisor) versions can be applicable only for a HyperFlex Cluster UPGRADE operation, so a constraint of \"supportedOperations=upgrade\" can be added to the matching row. \n"
            },
            "HxdpVersion": {
              "type": "string",
              "description": "HXDP component software version. \n"
            },
            "HypervisorType": {
              "type": "string",
              "enum": [
                "Unknown",
                "Hyper-V",
                "ESXi"
              ],
              "default": "Unknown",
              "description": "Type fo Hypervisor the HyperFlex components versions are compatible with. For example ESX, Hyperv or KVM. \n"
            },
            "HypervisorVersion": {
              "type": "string",
              "description": "Hypervisor component software version. \n"
            },
            "ServerFwVersion": {
              "type": "string",
              "description": "UCS Server Firmware component software version.  \n"
            },
            "AppCatalog": {
              "$ref": "#/definitions/hyperflexAppCatalogRef",
              "description": "A collection of references to the [hyperflex.AppCatalog](mo://hyperflex.AppCatalog) Managed Object.\n\nWhen this managed object is deleted, the referenced [hyperflex.AppCatalog](mo://hyperflex.AppCatalog) MO unsets its reference to this deleted MO.\n"
            }
          }
        }
      ]
    },
    "hclHyperflexSoftwareCompatibilityInfoList": {
      "properties": {
        "Count": {
          "description": "The number of hclHyperflexSoftwareCompatibilityInfos matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hclHyperflexSoftwareCompatibilityInfos matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hclHyperflexSoftwareCompatibilityInfo"
          }
        }
      }
    },
    "hclNoteRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hclOperatingSystemRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hclOperatingSystem": {
      "title": "Hcl:Operating System",
      "description": "Collection used to store operating system details.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Version": {
              "type": "string",
              "description": "Version of the Operating System.  \n"
            },
            "Vendor": {
              "$ref": "#/definitions/hclOperatingSystemVendorRef",
              "description": "Vendor distributing the operating system.\n"
            }
          }
        }
      ]
    },
    "hclOperatingSystemList": {
      "properties": {
        "Count": {
          "description": "The number of hclOperatingSystems matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hclOperatingSystems matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hclOperatingSystem"
          }
        }
      }
    },
    "hclOperatingSystemVendorRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hclOperatingSystemVendor": {
      "title": "Hcl:Operating System Vendor",
      "description": "Collection used to store operating system vendors details.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "description": "Name of the vendor of the operating system.  \n"
            }
          }
        }
      ]
    },
    "hclOperatingSystemVendorList": {
      "properties": {
        "Count": {
          "description": "The number of hclOperatingSystemVendors matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hclOperatingSystemVendors matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hclOperatingSystemVendor"
          }
        }
      }
    },
    "hclProductRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hclProduct": {
      "title": "Hcl:Product",
      "description": "Model giving the details of product.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "DriverNames": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Supported driver names of the product. \n"
            },
            "ErrorCode": {
              "type": "string",
              "enum": [
                "Success",
                "Unknown",
                "UnknownServer",
                "InvalidUcsVersion",
                "ProcessorNotSupported",
                "OSNotSupported",
                "OSUnknown",
                "UCSVersionNotSupported",
                "UcsVersionServerOSCombinationNotSupported",
                "ProductUnknown",
                "ProductNotSupported",
                "DriverNameNotSupported",
                "FirmwareVersionNotSupported",
                "DriverVersionNotSupported",
                "FirmwareVersionDriverVersionCombinationNotSupported",
                "FirmwareVersionAndDriverVersionNotSupported",
                "FirmwareVersionAndDriverNameNotSupported",
                "InternalError",
                "MarshallingError",
                "Exempted"
              ],
              "default": "Success",
              "readOnly": true,
              "description": "Error code indicating the support status. \n"
            },
            "Firmwares": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hclFirmware"
              },
              "description": "Supported firmwares list of the product. \n"
            },
            "Id": {
              "type": "string",
              "description": "Identifier of the product. \n"
            },
            "Model": {
              "type": "string",
              "description": "Model/PID of the product/adapter. \n"
            },
            "Revision": {
              "type": "string",
              "description": "Revision of the adapter model. \n"
            },
            "Type": {
              "type": "string",
              "description": "Type of the product/adapter say OCP, PT, GPU. \n"
            },
            "Vendor": {
              "type": "string",
              "description": "Vendor of the product or adapter.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "hclProductSoftwareRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hclServiceStatusRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hclServiceStatus": {
      "title": "Hcl:Service Status",
      "description": "Status of the service indicatating if the service is up or under maintenance due to data update. Service will not be able serve any requests when the data is being updated. Collection will have only one document.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "ExemptionFileVersion": {
              "type": "string",
              "description": "Version of the last modified exemption file. \n"
            },
            "Identity": {
              "type": "string",
              "description": "A field to uniquely identify the document with the status. \n"
            },
            "LastHclDataModifiedTime": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of the last modified record in the HCL tool database. Used to query and get updated records. \n"
            },
            "LastImportedDataChecksum": {
              "type": "string",
              "description": "Checksum of the data dump used as the base for delta updates. \n"
            },
            "Status": {
              "type": "string",
              "enum": [
                "Unknown",
                "Initializing",
                "DataRefreshing",
                "Active"
              ],
              "default": "Unknown",
              "description": "Status of the service indicatating if the service is up or under maintenance due to data update.  \n"
            }
          }
        }
      ]
    },
    "hclServiceStatusList": {
      "properties": {
        "Count": {
          "description": "The number of hclServiceStatuses matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hclServiceStatuses matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hclServiceStatus"
          }
        }
      }
    },
    "hclSupportedDriverNameRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hclSupportedDriverName": {
      "title": "Hcl:Supported Driver Name",
      "description": "Supported driver names for a given product for the given operating system.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "OsVendor": {
              "type": "string",
              "description": "Vendor distributing the Operating System. \n"
            },
            "OsVersion": {
              "type": "string",
              "description": "Version of the Operating System. \n"
            },
            "ProductList": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hclProduct"
              },
              "description": "List of Products for which supported driver names is to be filled.  \n"
            }
          }
        }
      ]
    },
    "hxdpconnectorHxApiMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hxdpconnectorHxInventoryMsgRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexAbstractAppSettingRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexAbstractAppSetting": {
      "title": "Hyperflex:Abstract App Setting",
      "description": "An application setting as a key/value pair.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "description": "The application setting identifier. \n"
            },
            "Value": {
              "type": "string",
              "description": "The application setting value.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "hyperflexAlarmRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexAlarm": {
      "title": "Hyperflex:Alarm",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Acknowledged": {
              "type": "boolean",
              "readOnly": true
            },
            "AcknowledgedBy": {
              "type": "string",
              "readOnly": true
            },
            "AcknowledgedTime": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "AcknowledgedTimeAsUtc": {
              "type": "string",
              "readOnly": true
            },
            "Description": {
              "type": "string",
              "readOnly": true
            },
            "EntityData": {
              "type": "string",
              "readOnly": true
            },
            "EntityName": {
              "type": "string",
              "readOnly": true
            },
            "EntityType": {
              "type": "string",
              "enum": [
                "UNKNOWN",
                "DISK",
                "NODE",
                "CLUSTER",
                "DATASTORE",
                "ZONE",
                "VIRTUALMACHINE"
              ],
              "default": "UNKNOWN",
              "readOnly": true
            },
            "EntityUuId": {
              "type": "string",
              "readOnly": true
            },
            "Message": {
              "type": "string",
              "readOnly": true
            },
            "Name": {
              "type": "string",
              "readOnly": true
            },
            "Status": {
              "type": "string",
              "enum": [
                "UNKNOWN",
                "CLEARED",
                "INFO",
                "WARNING",
                "CRITICAL"
              ],
              "default": "UNKNOWN",
              "readOnly": true
            },
            "TriggeredTime": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "TriggeredTimeAsUtc": {
              "type": "string",
              "readOnly": true
            },
            "Uuid": {
              "type": "string",
              "readOnly": true
            },
            "Cluster": {
              "$ref": "#/definitions/hyperflexClusterRef",
              "description": "A collection of references to the [hyperflex.Cluster](mo://hyperflex.Cluster) Managed Object.\n\nWhen this managed object is deleted, the referenced [hyperflex.Cluster](mo://hyperflex.Cluster) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "hyperflexAlarmList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexAlarms matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hyperflexAlarms matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hyperflexAlarm"
          }
        }
      }
    },
    "hyperflexAppCatalogRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexAppCatalog": {
      "title": "HyperFlex application settings",
      "description": "A catalog for managing application settings for HyperFlex cluster configuration service.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Version": {
              "type": "string",
              "description": "The catalog version used in HyperFlex cluster configuration service.  \n"
            },
            "FeatureLimitExternal": {
              "$ref": "#/definitions/hyperflexFeatureLimitExternalRef",
              "description": "The HyperFlex feature limits that are available to end users.\n"
            },
            "FeatureLimitInternal": {
              "$ref": "#/definitions/hyperflexFeatureLimitInternalRef",
              "description": "The HyperFlex feature limits for internal system use.\n"
            },
            "HxdpVersions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hyperflexHxdpVersionRef"
              },
              "description": "The list of supported HyperFlex Data Platform versions.\n"
            },
            "HyperflexCapabilityInfos": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hyperflexCapabilityInfoRef"
              },
              "description": "Lists all supported HyperFlex feature capabilities and limitations.\n"
            },
            "HyperflexSoftwareCompatibilityInfos": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hclHyperflexSoftwareCompatibilityInfoRef"
              },
              "description": "Lists software compatibility information between different HyperFlex component versions like HXDP, Hypervisor, Drive Firmware, etc.\n"
            },
            "ServerFirmwareVersion": {
              "$ref": "#/definitions/hyperflexServerFirmwareVersionRef",
              "description": "The supported server firmware bundle.\n"
            },
            "ServerModel": {
              "$ref": "#/definitions/hyperflexServerModelRef",
              "description": "The supported server models in regex format.\n"
            }
          }
        }
      ]
    },
    "hyperflexAppCatalogList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexAppCatalogs matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hyperflexAppCatalogs matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hyperflexAppCatalog"
          }
        }
      }
    },
    "hyperflexAppSettingConstraintRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexAppSettingConstraint": {
      "title": "Hyperflex:App Setting Constraint",
      "description": "A constraint that can be used to qualify an application setting.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "HxdpVersion": {
              "type": "string",
              "description": "The supported HyperFlex Data Platform version in regex format. \n"
            },
            "HypervisorType": {
              "type": "string",
              "enum": [
                "Unknown",
                "Hyper-V",
                "ESXi"
              ],
              "default": "Unknown",
              "description": "The hypervisor type for the HyperFlex cluster. \n"
            },
            "MgmtPlatform": {
              "type": "string",
              "enum": [
                "FI",
                "EDGE"
              ],
              "default": "FI",
              "description": "The supported management platform for the HyperFlex Cluster. \n"
            },
            "ServerModel": {
              "type": "string",
              "description": "The supported server models in regex format.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "hyperflexAutoSupportPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexAutoSupportPolicy": {
      "title": "Auto Support",
      "description": "A policy specifying the configuration to automatically generate support tickets with Cisco TAC.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "AdminState": {
              "type": "boolean",
              "description": "Enable or disable Auto Support. \n",
              "x-nullable": true
            },
            "ServiceTicketReceipient": {
              "type": "string",
              "description": "The email address recipient for support tickets.  \n"
            },
            "ClusterProfiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hyperflexClusterProfileRef"
              },
              "description": "List of cluster profiles using this policy.\n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "hyperflexAutoSupportPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexAutoSupportPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hyperflexAutoSupportPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hyperflexAutoSupportPolicy"
          }
        }
      }
    },
    "hyperflexCapabilityInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexCapabilityInfo": {
      "title": "Hyperflex Capabilities and Feature limits Information",
      "description": "A capabilityInfo is like a feature set and/or feature limit for different components of a HyperFlex Cluster. A set of constraints defines the rules, and the corresponding value either determines if the feature would work on a HyperFlex cluster with specific component set, or corresponds to a limit for a set of HyperFlex components. For example, \"minUcsVersion\" for HyperFlex version \"4.0.1a\" corresponds to \"3.2.3\" or \"minHxdpVersion\" for HyperFlex Upgrade operation is \"4.0.1a\" etc. This data can be captured as a capability and at run-time, decision can be made to proceed with the intended operation or not, or proceed with the intended operation with a value catered to specific feature sets.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "CapabilityConstraints": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hclConstraint"
              },
              "description": "Collection of constraints, which when applied together in tandem with an \"AND\" assertion, will correspond to the specified Value. Hence the Value will make sense only iff all the constraints match. \n"
            },
            "Name": {
              "type": "string",
              "description": "Name of the capability or feature set consisting of a collection of constraint rules and value. \n"
            },
            "Value": {
              "type": "string",
              "readOnly": true,
              "description": "Capability Value which is valid only iff all specified constraints match.  \n"
            },
            "AppCatalog": {
              "$ref": "#/definitions/hyperflexAppCatalogRef",
              "description": "A collection of references to the [hyperflex.AppCatalog](mo://hyperflex.AppCatalog) Managed Object.\n\nWhen this managed object is deleted, the referenced [hyperflex.AppCatalog](mo://hyperflex.AppCatalog) MO unsets its reference to this deleted MO.\n"
            }
          }
        }
      ]
    },
    "hyperflexCapabilityInfoList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexCapabilityInfos matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hyperflexCapabilityInfos matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hyperflexCapabilityInfo"
          }
        }
      }
    },
    "hyperflexClusterRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexCluster": {
      "title": "Hyperflex:Cluster",
      "description": "A HyperFlex cluster. Contains inventory information concerning the health, software versions, storage, and nodes\nof the cluster.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "CapacityRunway": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "The number of days remaining before the cluster's storage utilization reaches the recommended capacity limit of 76%.\n\nDefault value is math.MaxInt32 to indicate that the capacity runway is \"Unknown\" for a cluster that is not connected or with not sufficient data.\n \n"
            },
            "ClusterName": {
              "type": "string",
              "readOnly": true,
              "description": "The name of this HyperFlex cluster. \n"
            },
            "ClusterType": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "The storage type of this cluster (All Flash or Hybrid). \n"
            },
            "ClusterUuid": {
              "type": "string",
              "readOnly": true,
              "description": "The unique identifier for this HyperFlex cluster. \n"
            },
            "ComputeNodeCount": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "The number of compute nodes that belong to this cluster. \n"
            },
            "ConvergedNodeCount": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "The number of converged nodes that belong to this cluster. \n"
            },
            "DeploymentType": {
              "type": "string",
              "enum": [
                "NA",
                "Datacenter",
                "Stretched Cluster",
                "Edge"
              ],
              "default": "NA",
              "readOnly": true,
              "description": "The deployment type of the HyperFlex cluster.\n\nThe cluster can have one of the following configurations:\n1. Datacenter: The HyperFlex cluster consists of UCS Fabric Interconnect-attached nodes on a single site.\n2. Stretched Cluster: The HyperFlex cluster consists of UCS Fabric Interconnect-attached nodes distributed across multiple sites.\n3. Edge: The HyperFlex cluster consists of 2-4 standalone nodes.\n\nIf the cluster is running a HyperFlex Data Platform version less than 4.0 or if the deployment type cannot be determined,\nthe deployment type is set as 'NA' (not available).\n \n"
            },
            "DeviceId": {
              "type": "string",
              "readOnly": true,
              "description": "The unique identifier of the device registration that represents this HyperFlex cluster's connection to Intersight. \n"
            },
            "FltAggr": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "The number of yellow (warning) and red (critical) alarms stored as an aggregate.\n\nThe first 16 bits indicate the number of red alarms, and the last 16 bits contain the number of yellow alarms.\n \n"
            },
            "HxVersion": {
              "type": "string",
              "readOnly": true,
              "description": "The HyperFlex Data Platform version of this cluster. \n"
            },
            "HxdpBuildVersion": {
              "type": "string",
              "readOnly": true,
              "description": "The version and build number of the HyperFlex Data Platform for this cluster.\n\nAfter a cluster upgrade, this version string will be updated on the next inventory cycle to reflect\nthe newly installed version.\n \n"
            },
            "HypervisorType": {
              "type": "string",
              "enum": [
                "Unknown",
                "Hyper-V",
                "ESXi"
              ],
              "default": "Unknown",
              "readOnly": true,
              "description": "The type of hypervisor running on this cluster. \n"
            },
            "HypervisorVersion": {
              "type": "string",
              "readOnly": true,
              "description": "The version of hypervisor running on this cluster. \n"
            },
            "Summary": {
              "$ref": "#/definitions/hyperflexSummary",
              "readOnly": true,
              "description": "The summary of HyperFlex cluster health, storage, and number of nodes.\n \n"
            },
            "UtilizationPercentage": {
              "type": "number",
              "format": "float",
              "readOnly": true,
              "description": "The storage utilization percentage is computed based on total capacity and current capacity utilization. \n"
            },
            "UtilizationTrendPercentage": {
              "type": "number",
              "format": "float",
              "readOnly": true,
              "description": "The storage utilization trend percentage represents the trend in percentage computed using the first and last point from historical data. \n"
            },
            "VmCount": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "The number of virtual machines present on this cluster.  \n"
            },
            "Alarm": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hyperflexAlarmRef"
              },
              "description": "The alarms that have been raised for this HyperFlex cluster.\n\nNew alarms are added to this collection, and existing alarms are updated if the severity changes.\nDeleted alarms are not removed but are cleared by marking them as green.\n",
              "readOnly": true
            },
            "Health": {
              "$ref": "#/definitions/hyperflexHealthRef",
              "description": "The health of the HyperFlex cluster.\n\nDetailed information concerning the cluster health, which includes cluster operational status, resiliency health status,\nnumber of node and disk failues tolerable, and the status of services such as the ZooKeeper ensemble and arbitration service.\nThis relationship is only populated for devices with HyperFlex Data Platform 3.0+. For clusters running an older version, refer\nto the Summary property of the hyperflex/Clusters API.\n",
              "readOnly": true
            },
            "Nodes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hyperflexNodeRef"
              },
              "description": "The nodes belonging to this HyperFlex cluster.\n\nThe node object contains inventory information about a specific HyperFlex node, such as host IP address,\nhypervisor type and version, and operational status.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The registration that represents this HyperFlex cluster's connection to Intersight.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "hyperflexClusterList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexClusters matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hyperflexClusters matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hyperflexCluster"
          }
        }
      }
    },
    "hyperflexClusterDetailRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexClusterNetworkPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexClusterNetworkPolicy": {
      "title": "Network Configuration",
      "description": "A policy specifying VLANs for management, VM migration, and VM traffic.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "JumboFrame": {
              "type": "boolean",
              "description": "Enable or disable jumbo frames. \n",
              "x-nullable": true
            },
            "KvmIpRange": {
              "$ref": "#/definitions/hyperflexIpAddrRange",
              "description": "The Out-of-band KVM IP range.\n\nConfigures the service profiles to use IP addresses within this range for setting the KVM IP of a server.\n \n"
            },
            "MacPrefixRange": {
              "$ref": "#/definitions/hyperflexMacAddrPrefixRange",
              "description": "The MAC address prefix range for configuring vNICs.\n\nConfigures the service profiles to use MAC address prefixes within this range for setting the MAC address of server vNICs.\n \n"
            },
            "MgmtVlan": {
              "$ref": "#/definitions/hyperflexNamedVlan",
              "description": "The VLAN for the management network. \n"
            },
            "UplinkSpeed": {
              "type": "string",
              "enum": [
                "default",
                "1G",
                "10G"
              ],
              "default": "default",
              "description": "Link speed of the server adapter port to the upstream switch. When the policy is attached to a cluster profile with EDGE management platform, the uplink speed can be '1G' or '10G'. When the policy is attached to a cluster profile with Fabric Interconnect management platform, the uplink speed can be 'default' only. \n"
            },
            "VmMigrationVlan": {
              "$ref": "#/definitions/hyperflexNamedVlan",
              "description": "The VM migration VLAN.\n\nThis VLAN is used for transfering VMs from one host to another during operations such a cluster upgrade.\n \n"
            },
            "VmNetworkVlans": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hyperflexNamedVlan"
              },
              "description": "The VLANs for VM traffic.\n\nGuest VMs hosted on the HyperFlex cluster use these VLANs for network communication.\n  \n"
            },
            "ClusterProfiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hyperflexClusterProfileRef"
              },
              "description": "List of cluster profiles using this policy.\n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "hyperflexClusterNetworkPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexClusterNetworkPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hyperflexClusterNetworkPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hyperflexClusterNetworkPolicy"
          }
        }
      }
    },
    "hyperflexClusterProfileRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexClusterProfile": {
      "title": "HyperFlex Cluster Profile",
      "description": "A profile specifying configuration settings for a HyperFlex cluster.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractConfigProfile"
        },
        {
          "type": "object",
          "properties": {
            "DataIpAddress": {
              "type": "string",
              "description": "The storage data IP address for the HyperFlex cluster. \n"
            },
            "HypervisorType": {
              "type": "string",
              "enum": [
                "Unknown",
                "Hyper-V",
                "ESXi"
              ],
              "default": "Unknown",
              "description": "The hypervisor type for the HyperFlex cluster. \n"
            },
            "MacAddressPrefix": {
              "type": "string",
              "description": "The MAC address prefix in the form of 00:25:B5:XX. \n"
            },
            "MgmtIpAddress": {
              "type": "string",
              "description": "The management IP address for the HyperFlex cluster. \n"
            },
            "MgmtPlatform": {
              "type": "string",
              "enum": [
                "FI",
                "EDGE"
              ],
              "default": "FI",
              "x-createOnly": true,
              "description": "The management platform for the HyperFlex cluster. \n"
            },
            "Replication": {
              "type": "integer",
              "format": "int64",
              "description": "The number of copies of each data block written. \n"
            },
            "StorageDataVlan": {
              "$ref": "#/definitions/hyperflexNamedVlan",
              "description": "The VLAN for the HyperFlex storage data traffic. \n"
            },
            "WwxnPrefix": {
              "type": "string",
              "description": "The WWxN prefix in the form of 20:00:00:25:B5:XX.  \n"
            },
            "AssociatedCluster": {
              "$ref": "#/definitions/hyperflexClusterRef",
              "description": "HyperFlex cluster associated with this cluster profile.\n",
              "readOnly": true
            },
            "AutoSupport": {
              "$ref": "#/definitions/hyperflexAutoSupportPolicyRef",
              "description": "A collection of references to the [hyperflex.AutoSupportPolicy](mo://hyperflex.AutoSupportPolicy) Managed Object.\n\nWhen this managed object is deleted, the referenced [hyperflex.AutoSupportPolicy](mo://hyperflex.AutoSupportPolicy) MO unsets its reference to this deleted MO.\n"
            },
            "ClusterNetwork": {
              "$ref": "#/definitions/hyperflexClusterNetworkPolicyRef",
              "description": "A collection of references to the [hyperflex.ClusterNetworkPolicy](mo://hyperflex.ClusterNetworkPolicy) Managed Object.\n\nWhen this managed object is deleted, the referenced [hyperflex.ClusterNetworkPolicy](mo://hyperflex.ClusterNetworkPolicy) MO unsets its reference to this deleted MO.\n"
            },
            "ClusterStorage": {
              "$ref": "#/definitions/hyperflexClusterStoragePolicyRef",
              "description": "A collection of references to the [hyperflex.ClusterStoragePolicy](mo://hyperflex.ClusterStoragePolicy) Managed Object.\n\nWhen this managed object is deleted, the referenced [hyperflex.ClusterStoragePolicy](mo://hyperflex.ClusterStoragePolicy) MO unsets its reference to this deleted MO.\n"
            },
            "ConfigResult": {
              "$ref": "#/definitions/hyperflexConfigResultRef",
              "description": "The profile configuration (deploy, validation) results with the overall state and detailed result messages.\n",
              "readOnly": true
            },
            "ExtFcStorage": {
              "$ref": "#/definitions/hyperflexExtFcStoragePolicyRef",
              "description": "A collection of references to the [hyperflex.ExtFcStoragePolicy](mo://hyperflex.ExtFcStoragePolicy) Managed Object.\n\nWhen this managed object is deleted, the referenced [hyperflex.ExtFcStoragePolicy](mo://hyperflex.ExtFcStoragePolicy) MO unsets its reference to this deleted MO.\n"
            },
            "ExtIscsiStorage": {
              "$ref": "#/definitions/hyperflexExtIscsiStoragePolicyRef",
              "description": "A collection of references to the [hyperflex.ExtIscsiStoragePolicy](mo://hyperflex.ExtIscsiStoragePolicy) Managed Object.\n\nWhen this managed object is deleted, the referenced [hyperflex.ExtIscsiStoragePolicy](mo://hyperflex.ExtIscsiStoragePolicy) MO unsets its reference to this deleted MO.\n"
            },
            "LocalCredential": {
              "$ref": "#/definitions/hyperflexLocalCredentialPolicyRef",
              "description": "A collection of references to the [hyperflex.LocalCredentialPolicy](mo://hyperflex.LocalCredentialPolicy) Managed Object.\n\nWhen this managed object is deleted, the referenced [hyperflex.LocalCredentialPolicy](mo://hyperflex.LocalCredentialPolicy) MO unsets its reference to this deleted MO.\n"
            },
            "NodeConfig": {
              "$ref": "#/definitions/hyperflexNodeConfigPolicyRef",
              "description": "A collection of references to the [hyperflex.NodeConfigPolicy](mo://hyperflex.NodeConfigPolicy) Managed Object.\n\nWhen this managed object is deleted, the referenced [hyperflex.NodeConfigPolicy](mo://hyperflex.NodeConfigPolicy) MO unsets its reference to this deleted MO.\n"
            },
            "NodeProfileConfig": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hyperflexNodeProfileRef"
              },
              "description": "List of node profiles representing the configuraion of the corresponding HX cluster nodes.\n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            },
            "ProxySetting": {
              "$ref": "#/definitions/hyperflexProxySettingPolicyRef",
              "description": "A collection of references to the [hyperflex.ProxySettingPolicy](mo://hyperflex.ProxySettingPolicy) Managed Object.\n\nWhen this managed object is deleted, the referenced [hyperflex.ProxySettingPolicy](mo://hyperflex.ProxySettingPolicy) MO unsets its reference to this deleted MO.\n"
            },
            "RunningWorkflows": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/workflowWorkflowInfoRef"
              },
              "description": "List of workflows that are currently running for this cluster profile.\n",
              "readOnly": true
            },
            "SoftwareVersion": {
              "$ref": "#/definitions/hyperflexSoftwareVersionPolicyRef",
              "description": "A collection of references to the [hyperflex.SoftwareVersionPolicy](mo://hyperflex.SoftwareVersionPolicy) Managed Object.\n\nWhen this managed object is deleted, the referenced [hyperflex.SoftwareVersionPolicy](mo://hyperflex.SoftwareVersionPolicy) MO unsets its reference to this deleted MO.\n"
            },
            "SysConfig": {
              "$ref": "#/definitions/hyperflexSysConfigPolicyRef",
              "description": "A collection of references to the [hyperflex.SysConfigPolicy](mo://hyperflex.SysConfigPolicy) Managed Object.\n\nWhen this managed object is deleted, the referenced [hyperflex.SysConfigPolicy](mo://hyperflex.SysConfigPolicy) MO unsets its reference to this deleted MO.\n"
            },
            "UcsmConfig": {
              "$ref": "#/definitions/hyperflexUcsmConfigPolicyRef",
              "description": "A collection of references to the [hyperflex.UcsmConfigPolicy](mo://hyperflex.UcsmConfigPolicy) Managed Object.\n\nWhen this managed object is deleted, the referenced [hyperflex.UcsmConfigPolicy](mo://hyperflex.UcsmConfigPolicy) MO unsets its reference to this deleted MO.\n"
            },
            "VcenterConfig": {
              "$ref": "#/definitions/hyperflexVcenterConfigPolicyRef",
              "description": "A collection of references to the [hyperflex.VcenterConfigPolicy](mo://hyperflex.VcenterConfigPolicy) Managed Object.\n\nWhen this managed object is deleted, the referenced [hyperflex.VcenterConfigPolicy](mo://hyperflex.VcenterConfigPolicy) MO unsets its reference to this deleted MO.\n"
            }
          }
        }
      ]
    },
    "hyperflexClusterProfileList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexClusterProfiles matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hyperflexClusterProfiles matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hyperflexClusterProfile"
          }
        }
      }
    },
    "hyperflexClusterStoragePolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexClusterStoragePolicy": {
      "title": "Storage Configuration",
      "description": "A policy specifying HyperFlex cluster storage settings (optional).\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "DiskPartitionCleanup": {
              "type": "boolean",
              "description": "If enabled, formats existing disk partitions (destroys all user data). \n",
              "x-nullable": true
            },
            "LogicalAvalabilityZoneConfig": {
              "$ref": "#/definitions/hyperflexLogicalAvailabilityZone",
              "description": "Enable or disable Logical Availability Zones (LAZ). If enabled, HyperFlex Data Platform automatically selects and groups nodes into different availability zones. For HyperFlex Data Platform versions prior to 3.0 release, this setting does not apply. For HyperFlex Data Platform versions 3.0 or higher, this setting is only applicable to Fabric Interconnect attached HyperFlex systems with 8 or more converged nodes. \n"
            },
            "VdiOptimization": {
              "type": "boolean",
              "description": "Enable or disable VDI optimization (hybrid HyperFlex systems only).  \n",
              "x-nullable": true
            },
            "ClusterProfiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hyperflexClusterProfileRef"
              },
              "description": "List of cluster profiles using this policy.\n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "hyperflexClusterStoragePolicyList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexClusterStoragePolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hyperflexClusterStoragePolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hyperflexClusterStoragePolicy"
          }
        }
      }
    },
    "hyperflexConfigResultRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexConfigResult": {
      "title": "Hyperflex:Config Result",
      "description": "Profile configuration (deploy, validation) results with the overall state and detailed result messages.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractConfigResult"
        },
        {
          "type": "object",
          "properties": {
            "ConfigProgress": {
              "type": "string",
              "description": "The progress percentage of the running configuration or workflow. \n"
            },
            "Duration": {
              "type": "string",
              "description": "The duration of the running configuration or workflow. \n"
            },
            "StartTime": {
              "type": "string",
              "description": "The start time of the configuration or workflow.  \n"
            },
            "ClusterProfile": {
              "$ref": "#/definitions/hyperflexClusterProfileRef",
              "description": "A collection of references to the [hyperflex.ClusterProfile](mo://hyperflex.ClusterProfile) Managed Object.\n\nWhen this managed object is deleted, the referenced [hyperflex.ClusterProfile](mo://hyperflex.ClusterProfile) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "ResultEntries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hyperflexConfigResultEntryRef"
              },
              "description": "Detailed result entries for both validation & configration. Each result entry can be error/warning/info messages and the context.\n"
            }
          }
        }
      ]
    },
    "hyperflexConfigResultList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexConfigResults matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hyperflexConfigResults matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hyperflexConfigResult"
          }
        }
      }
    },
    "hyperflexConfigResultEntryRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexConfigResultEntry": {
      "title": "Hyperflex:Config Result Entry",
      "description": "An entry that describes the result of a cluster validation or deployment operation.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractConfigResultEntry"
        },
        {
          "type": "object",
          "properties": {
            "ConfigResult": {
              "$ref": "#/definitions/hyperflexConfigResultRef",
              "description": "A collection of references to the [hyperflex.ConfigResult](mo://hyperflex.ConfigResult) Managed Object.\n\nWhen this managed object is deleted, the referenced [hyperflex.ConfigResult](mo://hyperflex.ConfigResult) MO unsets its reference to this deleted MO.\n"
            }
          }
        }
      ]
    },
    "hyperflexConfigResultEntryList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexConfigResultEntries matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hyperflexConfigResultEntries matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hyperflexConfigResultEntry"
          }
        }
      }
    },
    "hyperflexCredentialsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexExtFcStoragePolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexExtFcStoragePolicy": {
      "title": "External FC Storage",
      "description": "A policy specifying external storage connectivity information via Fabric attached FC storage.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "AdminState": {
              "type": "boolean",
              "description": "Enables or disables external FC storage configuration. \n",
              "x-nullable": true
            },
            "ExtaTraffic": {
              "$ref": "#/definitions/hyperflexNamedVsan",
              "description": "VSAN for the primary Fabric Interconnect external FC storage traffic. \n"
            },
            "ExtbTraffic": {
              "$ref": "#/definitions/hyperflexNamedVsan",
              "description": "VSAN for the secondary Fabric Interconnect external FC storage traffic. \n"
            },
            "WwxnPrefixRange": {
              "$ref": "#/definitions/hyperflexWwxnPrefixRange",
              "description": "The range of WWxN addresses to use for the FC storage configuration.  \n"
            },
            "ClusterProfiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hyperflexClusterProfileRef"
              },
              "description": "List of cluster profiles using this policy.\n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "hyperflexExtFcStoragePolicyList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexExtFcStoragePolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hyperflexExtFcStoragePolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hyperflexExtFcStoragePolicy"
          }
        }
      }
    },
    "hyperflexExtIscsiStoragePolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexExtIscsiStoragePolicy": {
      "title": "External iSCSI Storage",
      "description": "A policy specifying external storage connectivity information via Fabric attached FCoE storage.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "AdminState": {
              "type": "boolean",
              "description": "Enable or disable external FCoE storage configuration. \n",
              "x-nullable": true
            },
            "ExtaTraffic": {
              "$ref": "#/definitions/hyperflexNamedVlan",
              "description": "VLAN for the primary Fabric Interconnect external FCoE storage traffic. \n"
            },
            "ExtbTraffic": {
              "$ref": "#/definitions/hyperflexNamedVlan",
              "description": "VLAN for the secondary Fabric Interconnect external FCoE storage traffic.  \n"
            },
            "ClusterProfiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hyperflexClusterProfileRef"
              },
              "description": "List of cluster profiles using this policy.\n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "hyperflexExtIscsiStoragePolicyList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexExtIscsiStoragePolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hyperflexExtIscsiStoragePolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hyperflexExtIscsiStoragePolicy"
          }
        }
      }
    },
    "hyperflexFeatureLimitEntryRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexFeatureLimitEntry": {
      "title": "Hyperflex:Feature Limit Entry",
      "description": "A HyperFlex feature limit.\n\nFeature limits are used to specify which HyperFlex configurations are compatible with a given feature.\n",
      "allOf": [
        {
          "$ref": "#/definitions/hyperflexAbstractAppSetting"
        },
        {
          "type": "object",
          "properties": {
            "Constraint": {
              "$ref": "#/definitions/hyperflexAppSettingConstraint",
              "description": "The conditions that must be satisfied before applying the AppSetting.  \n"
            }
          }
        }
      ]
    },
    "hyperflexFeatureLimitExternalRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexFeatureLimitExternal": {
      "title": "Hyperflex:Feature Limit External",
      "description": "The HyperFlex feature limits that are available to end users.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "FeatureLimitEntries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hyperflexFeatureLimitEntry"
              },
              "description": "The HyperFlex feature limits which are made available to users.  \n"
            },
            "AppCatalog": {
              "$ref": "#/definitions/hyperflexAppCatalogRef",
              "description": "A collection of references to the [hyperflex.AppCatalog](mo://hyperflex.AppCatalog) Managed Object.\n\nWhen this managed object is deleted, the referenced [hyperflex.AppCatalog](mo://hyperflex.AppCatalog) MO unsets its reference to this deleted MO.\n"
            }
          }
        }
      ]
    },
    "hyperflexFeatureLimitExternalList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexFeatureLimitExternals matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hyperflexFeatureLimitExternals matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hyperflexFeatureLimitExternal"
          }
        }
      }
    },
    "hyperflexFeatureLimitInternalRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexFeatureLimitInternal": {
      "title": "Hyperflex:Feature Limit Internal",
      "description": "The HyperFlex installer feature limits for internal system use.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "FeatureLimitEntries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hyperflexFeatureLimitEntry"
              },
              "description": "The HyperFlex feature limits for internal use.  \n"
            },
            "AppCatalog": {
              "$ref": "#/definitions/hyperflexAppCatalogRef",
              "description": "A collection of references to the [hyperflex.AppCatalog](mo://hyperflex.AppCatalog) Managed Object.\n\nWhen this managed object is deleted, the referenced [hyperflex.AppCatalog](mo://hyperflex.AppCatalog) MO unsets its reference to this deleted MO.\n"
            }
          }
        }
      ]
    },
    "hyperflexFeatureLimitInternalList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexFeatureLimitInternals matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hyperflexFeatureLimitInternals matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hyperflexFeatureLimitInternal"
          }
        }
      }
    },
    "hyperflexHealthRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexHealth": {
      "title": "Hyperflex:Health",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "ArbitrationServiceState": {
              "type": "string",
              "enum": [
                "NOT_AVAILABLE",
                "UNKNOWN",
                "ONLINE",
                "OFFLINE"
              ],
              "default": "NOT_AVAILABLE",
              "readOnly": true
            },
            "DataReplicationCompliance": {
              "type": "string",
              "enum": [
                "UNKNOWN",
                "COMPLIANT",
                "NON_COMPLIANT"
              ],
              "default": "UNKNOWN",
              "readOnly": true
            },
            "ResiliencyDetails": {
              "$ref": "#/definitions/hyperflexHxResiliencyInfoDt",
              "readOnly": true
            },
            "State": {
              "type": "string",
              "enum": [
                "UNKNOWN",
                "ONLINE",
                "OFFLINE",
                "ENOSPACE",
                "READONLY"
              ],
              "default": "UNKNOWN",
              "readOnly": true
            },
            "Uuid": {
              "type": "string",
              "readOnly": true
            },
            "ZkHealth": {
              "type": "string",
              "enum": [
                "NOT_AVAILABLE",
                "UNKNOWN",
                "ONLINE",
                "OFFLINE"
              ],
              "default": "NOT_AVAILABLE",
              "readOnly": true
            },
            "ZoneResiliencyList": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hyperflexHxZoneResiliencyInfoDt"
              },
              "readOnly": true
            },
            "Cluster": {
              "$ref": "#/definitions/hyperflexClusterRef",
              "description": "A collection of references to the [hyperflex.Cluster](mo://hyperflex.Cluster) Managed Object.\n\nWhen this managed object is deleted, the referenced [hyperflex.Cluster](mo://hyperflex.Cluster) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "hyperflexHealthList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexHealths matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hyperflexHealths matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hyperflexHealth"
          }
        }
      }
    },
    "hyperflexHxLinkDtRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexHxLinkDt": {
      "title": "Hyperflex:Hx Link Dt",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Comments": {
              "type": "string",
              "readOnly": true
            },
            "Href": {
              "type": "string",
              "readOnly": true
            },
            "Method": {
              "type": "string",
              "enum": [
                "POST",
                "GET",
                "PUT",
                "DELETE"
              ],
              "default": "POST",
              "readOnly": true
            },
            "Rel": {
              "type": "string",
              "readOnly": true
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "hyperflexHxNetworkAddressDtRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexHxNetworkAddressDt": {
      "title": "Hyperflex:Hx Network Address Dt",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Address": {
              "type": "string",
              "readOnly": true
            },
            "Fqdn": {
              "type": "string",
              "readOnly": true
            },
            "Ip": {
              "type": "string",
              "readOnly": true
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "hyperflexHxResiliencyInfoDtRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexHxResiliencyInfoDt": {
      "title": "Hyperflex:Hx Resiliency Info Dt",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "DataReplicationFactor": {
              "type": "string",
              "enum": [
                "ONE_COPY",
                "TWO_COPIES",
                "THREE_COPIES",
                "FOUR_COPIES",
                "SIX_COPIES"
              ],
              "default": "ONE_COPY",
              "readOnly": true
            },
            "HddFailuresTolerable": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "Messages": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "NodeFailuresTolerable": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "PolicyCompliance": {
              "type": "string",
              "enum": [
                "UNKNOWN",
                "COMPLIANT",
                "NON_COMPLIANT"
              ],
              "default": "UNKNOWN",
              "readOnly": true
            },
            "ResiliencyState": {
              "type": "string",
              "enum": [
                "UNKNOWN",
                "HEALTHY",
                "WARNING",
                "OFFLINE"
              ],
              "default": "UNKNOWN",
              "readOnly": true
            },
            "SsdFailuresTolerable": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "hyperflexHxUuIdDtRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexHxUuIdDt": {
      "title": "Hyperflex:Hx Uu Id Dt",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Links": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hyperflexHxLinkDt"
              },
              "readOnly": true
            },
            "Uuid": {
              "type": "string",
              "readOnly": true
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "hyperflexHxZoneResiliencyInfoDtRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexHxZoneResiliencyInfoDt": {
      "title": "Hyperflex:Hx Zone Resiliency Info Dt",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "readOnly": true
            },
            "ResiliencyInfo": {
              "$ref": "#/definitions/hyperflexHxResiliencyInfoDt",
              "readOnly": true
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "hyperflexHxdpVersionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexHxdpVersion": {
      "title": "Hyperflex:Hxdp Version",
      "description": "A HyperFlex Data Platform version.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Version": {
              "type": "string",
              "description": "The HyperFlex Data Platform version.  \n"
            },
            "AppCatalog": {
              "$ref": "#/definitions/hyperflexAppCatalogRef",
              "description": "A collection of references to the [hyperflex.AppCatalog](mo://hyperflex.AppCatalog) Managed Object.\n\nWhen this managed object is deleted, the referenced [hyperflex.AppCatalog](mo://hyperflex.AppCatalog) MO unsets its reference to this deleted MO.\n"
            },
            "InstallerImage": {
              "$ref": "#/definitions/hyperflexInstallerImageRef",
              "description": "Corresponding installer image for the HyperFlex Data Platform version.\n"
            }
          }
        }
      ]
    },
    "hyperflexHxdpVersionList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexHxdpVersions matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hyperflexHxdpVersions matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hyperflexHxdpVersion"
          }
        }
      }
    },
    "hyperflexInstallerImageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexIpAddrRangeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexIpAddrRange": {
      "title": "Hyperflex:Ip Addr Range",
      "description": "A range of IPv4 addresses.\n\nThe range is inclusive and comprised of a start IP address, an end IP address, netmask, and default gateway.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "EndAddr": {
              "type": "string",
              "description": "The end IPv4 address of the range. \n"
            },
            "Gateway": {
              "type": "string",
              "description": "The default gateway for the start and end IPv4 addresses. \n"
            },
            "Netmask": {
              "type": "string",
              "description": "The netmask specified in dot decimal notation.\n\nThe start address, end address, and gateway must all be within the network specified by this netmask.\n \n"
            },
            "StartAddr": {
              "type": "string",
              "description": "The start IPv4 address of the range.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "hyperflexLegacyAlarmRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexLocalCredentialPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexLocalCredentialPolicy": {
      "title": "Security",
      "description": "A policy specifying credentials for HyperFlex cluster such as controller VM password, hypervisor username, and password.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "FactoryHypervisorPassword": {
              "type": "boolean",
              "description": "Indicates if Hypervisor password is the factory set default password. For HyperFlex Data Platform versions 3.0 or higher, enable this if the default password was not changed on the Hypervisor. It is required to supply a new custom Hypervisor password that will be applied to the Hypervisor during deployment. For HyperFlex Data Platform versions prior to 3.0 release, this setting has no effect and the default password will be used for initial install. The Hypervisor password should be changed after deployment. \n",
              "x-nullable": true
            },
            "IsHxdpRootPwdSet": {
              "type": "boolean",
              "readOnly": true,
              "description": "Indicates whether the value of the 'hxdpRootPwd' property has been set. \n"
            },
            "HxdpRootPwd": {
              "type": "string",
              "description": "HyperFlex storage controller VM password must contain a minimum of 10 characters, with at least 1 lowercase, 1 uppercase, 1 numeric, and 1 of these -_@#$%^&*! special characters. \n"
            },
            "HypervisorAdmin": {
              "type": "string",
              "description": "Hypervisor administrator username must contain only alphanumeric characters. Use the root account for ESXi deployments. \n"
            },
            "IsHypervisorAdminPwdSet": {
              "type": "boolean",
              "readOnly": true,
              "description": "Indicates whether the value of the 'hypervisorAdminPwd' property has been set.  \n"
            },
            "HypervisorAdminPwd": {
              "type": "string",
              "description": "The ESXi root password. For HyperFlex Data Platform 3.0 or later, if the factory default password was not manually changed, you must set a new custom password. If the password was manually changed, you must not enable the factory default password property and provide the current hypervisor password. Note - All HyperFlex nodes require the same hypervisor password for installation. For HyperFlex Data Platform prior to 3.0, use the default password \"Cisco123\" for newly manufactured HyperFlex servers. A custom password should only be entered if hypervisor credentials were manually changed prior to deployment. \n"
            },
            "ClusterProfiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hyperflexClusterProfileRef"
              },
              "description": "List of cluster profiles using this policy.\n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "hyperflexLocalCredentialPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexLocalCredentialPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hyperflexLocalCredentialPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hyperflexLocalCredentialPolicy"
          }
        }
      }
    },
    "hyperflexLogicalAvailabilityZoneRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexLogicalAvailabilityZone": {
      "title": "Hyperflex:Logical Availability Zone",
      "description": "A configuration for the Logical Availability Zone.\n\nLogical Availability Zones (LAZ) allow for increased fault tolerance by dividing clusters into logical partitions\nwhere a given block of data is only written to a zone once. This allows replications of data to be distributed evenly\nacross zones. LAZ configurations are compatible with HyperFlex clusters meeting all of the following criteria:\n1. The HyperFlex cluster must be attached to a UCS Fabric Interconnect.\n2. The HyperFlex cluster must be running HyperFlex Data Platform 3.0 or higher.\n3. The HyperFlex cluster must have 8 or more converged nodes.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "AutoConfig": {
              "type": "boolean",
              "description": "Enable or disable Logical Availability Zones (LAZ).\nIf enabled, HyperFlex Data Platform automatically selects and groups nodes into different availability zones. For HyperFlex Data Platform versions prior to 3.0 release, this setting does not apply. For HyperFlex Data Platform versions 3.0 or higher, this setting is only applicable to Fabric Interconnect attached HyperFlex systems with 8 or more converged nodes.  \n",
              "x-nullable": true
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "hyperflexMacAddrPrefixRangeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexMacAddrPrefixRange": {
      "title": "Hyperflex:Mac Addr Prefix Range",
      "description": "A MAC address prefix range.\n\nThe range is inclusive and comprised of a start and end MAC addresses.\nA single address can be specified by setting it as the start and end of the range.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "EndAddr": {
              "type": "string",
              "description": "The end MAC address prefix of a MAC address prefix range in the form of 00:25:B5:XX. \n"
            },
            "StartAddr": {
              "type": "string",
              "description": "The start MAC address prefix of a MAC address prefix range in the form of 00:25:B5:XX.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "hyperflexManagedObjectReferenceRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexNamedVlanRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexNamedVlan": {
      "title": "Hyperflex:Named Vlan",
      "description": "A VLAN with a name and ID.\n\nNamed VLANs are used for defining the network and iSCSI external storage policies for the cluster.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "description": "The name of the VLAN.\n\nThe name can be from 1 to 32 characters long and can contain a combination of alphanumeric characters, underscores, and hyphens.\n \n"
            },
            "VlanId": {
              "type": "integer",
              "format": "int64",
              "description": "The ID of the named VLAN. An ID of 0 means the traffic is untagged.\n\nThe ID can be any number between 0 and 4095, inclusive.\n  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "hyperflexNamedVsanRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexNamedVsan": {
      "title": "Hyperflex:Named Vsan",
      "description": "A VSAN with a name and ID.\n\nVSANs are used when defining Fibre Channel external storage policies for the cluster.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "description": "The name of the VSAN.\n\nThe name can be from 1 to 32 characters long and can contain a combination of alphanumeric characters, underscores, and hyphens.\n \n"
            },
            "VsanId": {
              "type": "integer",
              "format": "int64",
              "description": "The ID of the named VSAN.\n\nThe ID can be any number between 1 and 4093, inclusive.\n  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "hyperflexNodeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexNode": {
      "title": "Hyperflex:Node",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "BuildNumber": {
              "type": "string",
              "readOnly": true
            },
            "DisplayVersion": {
              "type": "string",
              "readOnly": true
            },
            "HostName": {
              "type": "string",
              "readOnly": true
            },
            "Hypervisor": {
              "type": "string",
              "readOnly": true
            },
            "Identity": {
              "$ref": "#/definitions/hyperflexHxUuIdDt",
              "readOnly": true
            },
            "Ip": {
              "$ref": "#/definitions/hyperflexHxNetworkAddressDt",
              "readOnly": true
            },
            "Lockdown": {
              "type": "boolean",
              "readOnly": true
            },
            "ModelNumber": {
              "type": "string",
              "readOnly": true
            },
            "Role": {
              "type": "string",
              "enum": [
                "UNKNOWN",
                "STORAGE",
                "COMPUTE"
              ],
              "default": "UNKNOWN",
              "readOnly": true
            },
            "SerialNumber": {
              "type": "string",
              "readOnly": true
            },
            "Status": {
              "type": "string",
              "enum": [
                "UNKNOWN",
                "ONLINE",
                "OFFLINE",
                "INMAINTENANCE",
                "DEGRADED"
              ],
              "default": "UNKNOWN",
              "readOnly": true
            },
            "Version": {
              "type": "string",
              "readOnly": true
            },
            "Cluster": {
              "$ref": "#/definitions/hyperflexClusterRef",
              "description": "A collection of references to the [hyperflex.Cluster](mo://hyperflex.Cluster) Managed Object.\n\nWhen this managed object is deleted, the referenced [hyperflex.Cluster](mo://hyperflex.Cluster) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "ClusterMember": {
              "$ref": "#/definitions/assetClusterMemberRef",
              "description": "A relationship to the ClusterMember that represents this node's registration to Intersight.\n",
              "readOnly": true
            },
            "PhysicalServer": {
              "$ref": "#/definitions/computePhysicalRef",
              "description": "A relationship to the UCS server associated with this node.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "hyperflexNodeList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexNodes matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hyperflexNodes matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hyperflexNode"
          }
        }
      }
    },
    "hyperflexNodeConfigPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexNodeConfigPolicy": {
      "title": "Node IP and Hostname",
      "description": "A policy specifying node details such as management and storage data IP ranges. For HyperFlex Edge, storage data IP range is pre-defined.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "DataIpRange": {
              "$ref": "#/definitions/hyperflexIpAddrRange",
              "description": "The range of storage data IPs to be assigned to the nodes. \n"
            },
            "HxdpIpRange": {
              "$ref": "#/definitions/hyperflexIpAddrRange",
              "description": "The range of storage management IPs to be assigned to the nodes. \n"
            },
            "MgmtIpRange": {
              "$ref": "#/definitions/hyperflexIpAddrRange",
              "description": "The range of management IPs to be assigned to the nodes. \n"
            },
            "NodeNamePrefix": {
              "type": "string",
              "description": "The node name prefix that is used to automatically generate the default hostname for each server.\n\nA dash (-) will be appended to the prefix followed by the node number to form a hostname.\nThis default naming scheme can be manually overridden in the node configuration.\nThe maximum length of a prefix is 60, must only contain alphanumeric characters or dash (-), and must\nstart with an alphanumeric character.\n  \n"
            },
            "ClusterProfiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hyperflexClusterProfileRef"
              },
              "description": "List of cluster profiles using this policy.\n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "hyperflexNodeConfigPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexNodeConfigPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hyperflexNodeConfigPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hyperflexNodeConfigPolicy"
          }
        }
      }
    },
    "hyperflexNodeProfileRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexNodeProfile": {
      "title": "Hyperflex:Node Profile",
      "description": "A configuration profile per node in the HyperFlex cluster.\nIt defines node settings such as IP address configuration for hypervisor management network, storage data network, HyperFlex management network, and the assigned physical server.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractProfile"
        },
        {
          "type": "object",
          "properties": {
            "HxdpDataIp": {
              "type": "string",
              "description": "IP address for storage data network (Controller VM interface). \n"
            },
            "HxdpMgmtIp": {
              "type": "string",
              "description": "IP address for HyperFlex management network. \n"
            },
            "HypervisorDataIp": {
              "type": "string",
              "description": "IP address for storage data network (Hypervisor interface). \n"
            },
            "HypervisorMgmtIp": {
              "type": "string",
              "description": "IP address for Hypervisor management network.  \n"
            },
            "AssignedServer": {
              "$ref": "#/definitions/computeRackUnitRef",
              "description": "The physical server assigned to this node profile.\n"
            },
            "ClusterProfile": {
              "$ref": "#/definitions/hyperflexClusterProfileRef",
              "description": "A collection of references to the [hyperflex.ClusterProfile](mo://hyperflex.ClusterProfile) Managed Object.\n\nWhen this managed object is deleted, the referenced [hyperflex.ClusterProfile](mo://hyperflex.ClusterProfile) MO unsets its reference to this deleted MO.\n"
            }
          }
        }
      ]
    },
    "hyperflexNodeProfileList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexNodeProfiles matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hyperflexNodeProfiles matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hyperflexNodeProfile"
          }
        }
      }
    },
    "hyperflexProfilePreDeployTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexProfilePreValidateTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexProxySettingPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexProxySettingPolicy": {
      "title": "HTTP Proxy",
      "description": "A policy specifying the HTTP proxy settings to be used by the HyperFlex installation process and HyperFlex storage controller VMs. This policy is required when the internet access of your servers including CIMC and HyperFlex storage controller VMs is secured by a HTTP proxy.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "Hostname": {
              "type": "string",
              "description": "HTTP Proxy server FQDN or IP. \n"
            },
            "IsPasswordSet": {
              "type": "boolean",
              "x-nullable": true
            },
            "Password": {
              "type": "string",
              "description": "The password for the HTTP Proxy. \n"
            },
            "Port": {
              "type": "integer",
              "format": "int64",
              "description": "The HTTP Proxy port number.\n\nThe port number of the HTTP proxy must be between 1 and 65535, inclusive.\n \n"
            },
            "Username": {
              "type": "string",
              "description": "The username for the HTTP Proxy.  \n"
            },
            "ClusterProfiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hyperflexClusterProfileRef"
              },
              "description": "List of cluster profiles using this policy.\n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "hyperflexProxySettingPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexProxySettingPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hyperflexProxySettingPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hyperflexProxySettingPolicy"
          }
        }
      }
    },
    "hyperflexResultHandlerTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexServerFirmwareVersionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexServerFirmwareVersion": {
      "title": "Hyperflex:Server Firmware Version",
      "description": "A server firmware bundle version used for server components such as CIMC, adapters, BIOS, etc.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "ServerFirmwareVersionEntries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hyperflexServerFirmwareVersionEntry"
              },
              "description": "A list of server firmware bundle versions used for server components such as CIMC, adapters, BIOS, etc.  \n"
            },
            "AppCatalog": {
              "$ref": "#/definitions/hyperflexAppCatalogRef",
              "description": "A collection of references to the [hyperflex.AppCatalog](mo://hyperflex.AppCatalog) Managed Object.\n\nWhen this managed object is deleted, the referenced [hyperflex.AppCatalog](mo://hyperflex.AppCatalog) MO unsets its reference to this deleted MO.\n"
            }
          }
        }
      ]
    },
    "hyperflexServerFirmwareVersionList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexServerFirmwareVersions matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hyperflexServerFirmwareVersions matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hyperflexServerFirmwareVersion"
          }
        }
      }
    },
    "hyperflexServerFirmwareVersionEntryRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexServerFirmwareVersionEntry": {
      "title": "Hyperflex:Server Firmware Version Entry",
      "description": "A server firmware bundle version used for server components such as CIMC, adapters, BIOS, etc.\n",
      "allOf": [
        {
          "$ref": "#/definitions/hyperflexAbstractAppSetting"
        },
        {
          "type": "object",
          "properties": {
            "Constraint": {
              "$ref": "#/definitions/hyperflexAppSettingConstraint",
              "description": "The conditions that must be satisfied before applying the AppSetting. \n"
            },
            "Label": {
              "type": "string",
              "description": "The display name for server firmware bundle version in UI.  \n"
            }
          }
        }
      ]
    },
    "hyperflexServerModelRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexServerModel": {
      "title": "Hyperflex:Server Model",
      "description": "A supported server model.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "ServerModelEntries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hyperflexServerModelEntry"
              },
              "description": "The supported server models in regex format.  \n"
            },
            "AppCatalog": {
              "$ref": "#/definitions/hyperflexAppCatalogRef",
              "description": "A collection of references to the [hyperflex.AppCatalog](mo://hyperflex.AppCatalog) Managed Object.\n\nWhen this managed object is deleted, the referenced [hyperflex.AppCatalog](mo://hyperflex.AppCatalog) MO unsets its reference to this deleted MO.\n"
            }
          }
        }
      ]
    },
    "hyperflexServerModelList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexServerModels matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hyperflexServerModels matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hyperflexServerModel"
          }
        }
      }
    },
    "hyperflexServerModelEntryRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexServerModelEntry": {
      "title": "Hyperflex:Server Model Entry",
      "description": "A constraint specifying supported server models in regex format.\n",
      "allOf": [
        {
          "$ref": "#/definitions/hyperflexAbstractAppSetting"
        },
        {
          "type": "object",
          "properties": {
            "Constraint": {
              "$ref": "#/definitions/hyperflexAppSettingConstraint",
              "description": "The conditions that must be satisfied before applying the AppSetting.  \n"
            }
          }
        }
      ]
    },
    "hyperflexSoftwareVersionPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexSoftwareVersionPolicy": {
      "title": "HyperFlex Software Version Selection Policy",
      "description": "A policy capturing software versions for different HyperFlex Cluster compatible components ( like HyperFlex Data Platform, Hypervisor, etc. ), that the user wishes to apply on the HyperFlex cluster.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "HxdpVersion": {
              "type": "string",
              "description": "Desired HyperFlex Data Platform software version to apply on the HyperFlex cluster. \n"
            },
            "ServerFirmwareVersion": {
              "type": "string",
              "description": "Desired server firmware version to apply on the HyperFlex Cluster.  \n"
            },
            "ClusterProfiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hyperflexClusterProfileRef"
              },
              "description": "List of cluster profiles using this policy.\n"
            },
            "HxdpVersionInfo": {
              "$ref": "#/definitions/softwareHyperflexDistributableRef",
              "description": "Bundle metadata information for the desired HyperFlex Data Platform software version.\n",
              "readOnly": true
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            },
            "ServerFirmwareVersionInfo": {
              "$ref": "#/definitions/firmwareDistributableRef",
              "description": "Server firmware bundle metadata information for the desired server firmware software version.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "hyperflexSoftwareVersionPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexSoftwareVersionPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hyperflexSoftwareVersionPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hyperflexSoftwareVersionPolicy"
          }
        }
      }
    },
    "hyperflexStPlatformClusterHealingInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexStPlatformClusterHealingInfo": {
      "title": "Hyperflex:St Platform Cluster Healing Info",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "EstimatedCompletionTimeInSeconds": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "InProgress": {
              "type": "boolean",
              "readOnly": true
            },
            "Messages": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "MessagesIterator": {
              "type": "object",
              "readOnly": true
            },
            "MessagesSize": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "PercentComplete": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "hyperflexStPlatformClusterResiliencyInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexStPlatformClusterResiliencyInfo": {
      "title": "Hyperflex:St Platform Cluster Resiliency Info",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "HddFailuresTolerable": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "Messages": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "MessagesIterator": {
              "type": "object",
              "readOnly": true
            },
            "MessagesSize": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "NodeFailuresTolerable": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "SsdFailuresTolerable": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "State": {
              "type": "string",
              "readOnly": true
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "hyperflexSummaryRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexSummary": {
      "title": "Hyperflex:Summary",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "ActiveNodes": {
              "type": "string",
              "readOnly": true
            },
            "Address": {
              "type": "string",
              "readOnly": true
            },
            "Boottime": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "ClusterAccessPolicy": {
              "type": "string",
              "readOnly": true
            },
            "CompressionSavings": {
              "type": "number",
              "format": "double",
              "readOnly": true
            },
            "DataReplicationCompliance": {
              "type": "string",
              "readOnly": true
            },
            "DataReplicationFactor": {
              "type": "string",
              "readOnly": true
            },
            "DeduplicationSavings": {
              "type": "number",
              "format": "double",
              "readOnly": true
            },
            "Downtime": {
              "type": "string",
              "readOnly": true
            },
            "FreeCapacity": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "HealingInfo": {
              "$ref": "#/definitions/hyperflexStPlatformClusterHealingInfo",
              "readOnly": true
            },
            "Name": {
              "type": "string",
              "readOnly": true
            },
            "ResiliencyDetails": {
              "type": "object",
              "readOnly": true
            },
            "ResiliencyDetailsSize": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "ResiliencyInfo": {
              "$ref": "#/definitions/hyperflexStPlatformClusterResiliencyInfo",
              "readOnly": true
            },
            "SpaceStatus": {
              "type": "string",
              "readOnly": true
            },
            "State": {
              "type": "string",
              "readOnly": true
            },
            "TotalCapacity": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "TotalSavings": {
              "type": "number",
              "format": "double",
              "readOnly": true
            },
            "Uptime": {
              "type": "string",
              "readOnly": true
            },
            "UsedCapacity": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "hyperflexSysConfigPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexSysConfigPolicy": {
      "title": "DNS, NTP and Timezone",
      "description": "A policy specifying system configuration such as timezone, DNS servers, and NTP Servers.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "DnsDomainName": {
              "type": "string",
              "description": "The DNS Search Domain Name. This setting applies to HyperFlex Data Platform 3.0 or later only. \n"
            },
            "DnsServers": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Enter between 1 and 3 DNS servers. A DNS server that can resolve public domains is required for Intersight management. \n"
            },
            "NtpServers": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Enter between 1 and 3 NTP servers (IP address or FQDN). A local NTP server is highly recommended. \n"
            },
            "Timezone": {
              "type": "string",
              "enum": [
                "Pacific/Niue",
                "Pacific/Pago_Pago",
                "Pacific/Honolulu",
                "Pacific/Rarotonga",
                "Pacific/Tahiti",
                "Pacific/Marquesas",
                "America/Anchorage",
                "Pacific/Gambier",
                "America/Los_Angeles",
                "America/Tijuana",
                "America/Vancouver",
                "America/Whitehorse",
                "Pacific/Pitcairn",
                "America/Dawson_Creek",
                "America/Denver",
                "America/Edmonton",
                "America/Hermosillo",
                "America/Mazatlan",
                "America/Phoenix",
                "America/Yellowknife",
                "America/Belize",
                "America/Chicago",
                "America/Costa_Rica",
                "America/El_Salvador",
                "America/Guatemala",
                "America/Managua",
                "America/Mexico_City",
                "America/Regina",
                "America/Tegucigalpa",
                "America/Winnipeg",
                "Pacific/Galapagos",
                "America/Bogota",
                "America/Cancun",
                "America/Cayman",
                "America/Guayaquil",
                "America/Havana",
                "America/Iqaluit",
                "America/Jamaica",
                "America/Lima",
                "America/Nassau",
                "America/New_York",
                "America/Panama",
                "America/Port-au-Prince",
                "America/Rio_Branco",
                "America/Toronto",
                "Pacific/Easter",
                "America/Caracas",
                "America/Asuncion",
                "America/Barbados",
                "America/Boa_Vista",
                "America/Campo_Grande",
                "America/Cuiaba",
                "America/Curacao",
                "America/Grand_Turk",
                "America/Guyana",
                "America/Halifax",
                "America/La_Paz",
                "America/Manaus",
                "America/Martinique",
                "America/Port_of_Spain",
                "America/Porto_Velho",
                "America/Puerto_Rico",
                "America/Santo_Domingo",
                "America/Thule",
                "Atlantic/Bermuda",
                "America/St_Johns",
                "America/Araguaina",
                "America/Argentina/Buenos_Aires",
                "America/Bahia",
                "America/Belem",
                "America/Cayenne",
                "America/Fortaleza",
                "America/Godthab",
                "America/Maceio",
                "America/Miquelon",
                "America/Montevideo",
                "America/Paramaribo",
                "America/Recife",
                "America/Santiago",
                "America/Sao_Paulo",
                "Antarctica/Palmer",
                "Antarctica/Rothera",
                "Atlantic/Stanley",
                "America/Noronha",
                "Atlantic/South_Georgia",
                "America/Scoresbysund",
                "Atlantic/Azores",
                "Atlantic/Cape_Verde",
                "Africa/Abidjan",
                "Africa/Accra",
                "Africa/Bissau",
                "Africa/Casablanca",
                "Africa/El_Aaiun",
                "Africa/Monrovia",
                "America/Danmarkshavn",
                "Atlantic/Canary",
                "Atlantic/Faroe",
                "Atlantic/Reykjavik",
                "Etc/GMT",
                "Europe/Dublin",
                "Europe/Lisbon",
                "Europe/London",
                "Africa/Algiers",
                "Africa/Ceuta",
                "Africa/Lagos",
                "Africa/Ndjamena",
                "Africa/Tunis",
                "Africa/Windhoek",
                "Europe/Amsterdam",
                "Europe/Andorra",
                "Europe/Belgrade",
                "Europe/Berlin",
                "Europe/Brussels",
                "Europe/Budapest",
                "Europe/Copenhagen",
                "Europe/Gibraltar",
                "Europe/Luxembourg",
                "Europe/Madrid",
                "Europe/Malta",
                "Europe/Monaco",
                "Europe/Oslo",
                "Europe/Paris",
                "Europe/Prague",
                "Europe/Rome",
                "Europe/Stockholm",
                "Europe/Tirane",
                "Europe/Vienna",
                "Europe/Warsaw",
                "Europe/Zurich",
                "Africa/Cairo",
                "Africa/Johannesburg",
                "Africa/Maputo",
                "Africa/Tripoli",
                "Asia/Amman",
                "Asia/Beirut",
                "Asia/Damascus",
                "Asia/Gaza",
                "Asia/Jerusalem",
                "Asia/Nicosia",
                "Europe/Athens",
                "Europe/Bucharest",
                "Europe/Chisinau",
                "Europe/Helsinki",
                "Europe/Istanbul",
                "Europe/Kaliningrad",
                "Europe/Kiev",
                "Europe/Riga",
                "Europe/Sofia",
                "Europe/Tallinn",
                "Europe/Vilnius",
                "Africa/Khartoum",
                "Africa/Nairobi",
                "Antarctica/Syowa",
                "Asia/Baghdad",
                "Asia/Qatar",
                "Asia/Riyadh",
                "Europe/Minsk",
                "Europe/Moscow",
                "Asia/Tehran",
                "Asia/Baku",
                "Asia/Dubai",
                "Asia/Tbilisi",
                "Asia/Yerevan",
                "Europe/Samara",
                "Indian/Mahe",
                "Indian/Mauritius",
                "Indian/Reunion",
                "Asia/Kabul",
                "Antarctica/Mawson",
                "Asia/Aqtau",
                "Asia/Aqtobe",
                "Asia/Ashgabat",
                "Asia/Dushanbe",
                "Asia/Karachi",
                "Asia/Tashkent",
                "Asia/Yekaterinburg",
                "Indian/Kerguelen",
                "Indian/Maldives",
                "Asia/Calcutta",
                "Asia/Kolkata",
                "Asia/Colombo",
                "Asia/Katmandu",
                "Antarctica/Vostok",
                "Asia/Almaty",
                "Asia/Bishkek",
                "Asia/Dhaka",
                "Asia/Omsk",
                "Asia/Thimphu",
                "Indian/Chagos",
                "Asia/Rangoon",
                "Indian/Cocos",
                "Antarctica/Davis",
                "Asia/Bangkok",
                "Asia/Hovd",
                "Asia/Jakarta",
                "Asia/Krasnoyarsk",
                "Asia/Saigon",
                "Indian/Christmas",
                "Antarctica/Casey",
                "Asia/Brunei",
                "Asia/Choibalsan",
                "Asia/Hong_Kong",
                "Asia/Irkutsk",
                "Asia/Kuala_Lumpur",
                "Asia/Macau",
                "Asia/Makassar",
                "Asia/Manila",
                "Asia/Shanghai",
                "Asia/Singapore",
                "Asia/Taipei",
                "Asia/Ulaanbaatar",
                "Australia/Perth",
                "Asia/Pyongyang",
                "Asia/Dili",
                "Asia/Jayapura",
                "Asia/Seoul",
                "Asia/Tokyo",
                "Asia/Yakutsk",
                "Pacific/Palau",
                "Australia/Adelaide",
                "Australia/Darwin",
                "Antarctica/DumontDUrville",
                "Asia/Magadan",
                "Asia/Vladivostok",
                "Australia/Brisbane",
                "Australia/Hobart",
                "Australia/Sydney",
                "Pacific/Chuuk",
                "Pacific/Guam",
                "Pacific/Port_Moresby",
                "Pacific/Efate",
                "Pacific/Guadalcanal",
                "Pacific/Kosrae",
                "Pacific/Norfolk",
                "Pacific/Noumea",
                "Pacific/Pohnpei",
                "Asia/Kamchatka",
                "Pacific/Auckland",
                "Pacific/Fiji",
                "Pacific/Funafuti",
                "Pacific/Kwajalein",
                "Pacific/Majuro",
                "Pacific/Nauru",
                "Pacific/Tarawa",
                "Pacific/Wake",
                "Pacific/Wallis",
                "Pacific/Apia",
                "Pacific/Enderbury",
                "Pacific/Fakaofo",
                "Pacific/Tongatapu",
                "Pacific/Kiritimati"
              ],
              "default": "Pacific/Niue",
              "description": "The timezone of the HyperFlex cluster's system clock.  \n"
            },
            "ClusterProfiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hyperflexClusterProfileRef"
              },
              "description": "List of cluster profiles using this policy.\n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "hyperflexSysConfigPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexSysConfigPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hyperflexSysConfigPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hyperflexSysConfigPolicy"
          }
        }
      }
    },
    "hyperflexUcsmConfigPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexUcsmConfigPolicy": {
      "title": "UCSM Configuration",
      "description": "A policy specifying UCS Manager settings such as service profile org, KVM IP addresses, and MAC prefix for server configuration in Fabric Interconnect environment.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "KvmIpRange": {
              "$ref": "#/definitions/hyperflexIpAddrRange",
              "description": "The Out-of-band KVM IP range.\n\nConfigures the service profiles to use IP addresses within this range for setting the KVM IP of a server.\n \n"
            },
            "MacPrefixRange": {
              "$ref": "#/definitions/hyperflexMacAddrPrefixRange",
              "description": "The MAC address prefix range for configuring vNICs.\n\nConfigures the service profiles to use MAC address prefixes within this range for setting the MAC address of server vNICs.\n \n"
            },
            "ServerFirmwareVersion": {
              "type": "string",
              "description": "The server firmware bundle version used for server components such as CIMC, adapters, BIOS, etc.  \n"
            },
            "ClusterProfiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hyperflexClusterProfileRef"
              },
              "description": "List of cluster profiles using this policy.\n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "hyperflexUcsmConfigPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexUcsmConfigPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hyperflexUcsmConfigPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hyperflexUcsmConfigPolicy"
          }
        }
      }
    },
    "hyperflexVcenterConfigPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexVcenterConfigPolicy": {
      "title": "vCenter",
      "description": "A policy specifying vCenter configuration.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "DataCenter": {
              "type": "string",
              "description": "The vCenter datacenter name. \n"
            },
            "Hostname": {
              "type": "string",
              "description": "The vCenter server FQDN or IP. \n"
            },
            "IsPasswordSet": {
              "type": "boolean",
              "x-nullable": true
            },
            "Password": {
              "type": "string",
              "description": "The password for authenticating with vCenter. Follow the corresponding password policy governed by vCenter. \n"
            },
            "SsoUrl": {
              "type": "string",
              "description": "Overrides the default vCenter Single Sign-On URL. Do not specify unless instructed by Cisco TAC. \n"
            },
            "Username": {
              "type": "string",
              "description": "The vCenter username (e.g. administrator@vsphere.local).  \n"
            },
            "ClusterProfiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hyperflexClusterProfileRef"
              },
              "description": "List of cluster profiles using this policy.\n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "hyperflexVcenterConfigPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of hyperflexVcenterConfigPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of hyperflexVcenterConfigPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hyperflexVcenterConfigPolicy"
          }
        }
      }
    },
    "hyperflexWitnessLockRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexWwxnPrefixRangeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "hyperflexWwxnPrefixRange": {
      "title": "Hyperflex:Wwxn Prefix Range",
      "description": "A range of WWxN prefixes.\n\nThe range is inclusive and comprised of a start and end WWxN addresses.\nA single address can be specified by setting it as the start and end of the range.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "EndAddr": {
              "type": "string",
              "description": "The end WWxN prefix of a WWPN/WWNN range in the form of 20:00:00:25:B5:XX. \n"
            },
            "StartAddr": {
              "type": "string",
              "description": "The start WWxN prefix of a WWPN/WWNN range in the form of 20:00:00:25:B5:XX.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "i18nMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "i18nMessage": {
      "title": "I18n:Message",
      "description": "An i18n message that can be translated in multiple languages to support internationalization.\n\nAn i18n message includes a unique message identifier, a text format string, a list of message parameters that can be used \nto substitute parameters, and a translated string based on a user's locale.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Message": {
              "type": "string",
              "readOnly": true,
              "description": "The default (en-US) localized message. Default localized message will be stored and directly retrieved when\nthe user's locale setting is en-US.\n \n"
            },
            "MessageId": {
              "type": "string",
              "readOnly": true,
              "description": "The unique message identitifer used to lookup text templates in a multi-language message catalog. \n"
            },
            "MessageParams": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/i18nMessageParam"
              },
              "description": "The list of message parameters.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "i18nMessageParamRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "i18nMessageParam": {
      "title": "I18n:Message Param",
      "description": "A key, value pair used to substitue variables when translating a message in a particular locale for\ninternationalization purpose.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "The name of a variable which is referenced in a i18n text template. \n"
            },
            "Value": {
              "type": "string",
              "readOnly": true,
              "description": "The value of a variable which is substituted in a i18n text template.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "iaasConnectorPackRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iaasConnectorPack": {
      "title": "Iaas:Connector Pack",
      "description": "Describes about all the connector pack versions running currently in UCSD.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "CompleteVersion": {
              "type": "string",
              "readOnly": true,
              "description": "Complete version of the connector pack including build number. \n"
            },
            "DependencyNames": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "List of dependent connectors on the UCSD for this connector. For example BigData depends on UCS Connector. \n"
            },
            "DownloadedVersion": {
              "type": "string",
              "readOnly": true,
              "description": "Version of the connector pack that is last downloaded successfully to UCSD. \n"
            },
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the connector pack running on the UCSD. \n"
            },
            "State": {
              "type": "string",
              "readOnly": true,
              "description": "State of the connector pack whether it is enabled or disabled. \n"
            },
            "Version": {
              "type": "string",
              "readOnly": true,
              "description": "Version of the connector pack.  \n"
            },
            "Guid": {
              "$ref": "#/definitions/iaasUcsdInfoRef",
              "description": "A collection of references to the [iaas.UcsdInfo](mo://iaas.UcsdInfo) Managed Object.\n\nWhen this managed object is deleted, the referenced [iaas.UcsdInfo](mo://iaas.UcsdInfo) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "iaasConnectorPackList": {
      "properties": {
        "Count": {
          "description": "The number of iaasConnectorPacks matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iaasConnectorPacks matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iaasConnectorPack"
          }
        }
      }
    },
    "iaasDeviceStatusRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iaasDeviceStatus": {
      "title": "Iaas:Device Status",
      "description": "List of infra accounts managed by UCSD.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "AccountName": {
              "type": "string",
              "readOnly": true,
              "description": "The UCSD infra account name. Account Name is created when UCSD admin adds any new infra account (Physical/Virtual/Compute/Network) to be managed by UCSD. \n"
            },
            "AccountType": {
              "type": "string",
              "readOnly": true,
              "description": "The UCSD Infra Account type. \n"
            },
            "ClaimStatus": {
              "type": "string",
              "enum": [
                "Unknown",
                "Yes",
                "No",
                "Not Applicable"
              ],
              "default": "Unknown",
              "readOnly": true,
              "description": "Describes if the device is claimed in Intersight or not. \n"
            },
            "ConnectionStatus": {
              "type": "string",
              "readOnly": true,
              "description": "Describes about the connection status between the UCSD and the actual end device. \n"
            },
            "DeviceModel": {
              "type": "string",
              "readOnly": true,
              "description": "Describes about the device model. \n"
            },
            "DeviceVendor": {
              "type": "string",
              "readOnly": true,
              "description": "Describes about the device vendor/manufacturer of the device. \n"
            },
            "DeviceVersion": {
              "type": "string",
              "readOnly": true,
              "description": "Describes about the current firmware version running on the device. \n"
            },
            "IpAddress": {
              "type": "string",
              "readOnly": true,
              "description": "The IPAddress of the device. \n"
            },
            "Pod": {
              "type": "string",
              "readOnly": true,
              "description": "Describes about the pod to which this device belongs to in UCSD. \n"
            },
            "PodType": {
              "type": "string",
              "readOnly": true,
              "description": "Describes about the podType of Pod to which this device belongs to in UCSD.  \n"
            },
            "Guid": {
              "$ref": "#/definitions/iaasUcsdInfoRef",
              "description": "A collection of references to the [iaas.UcsdInfo](mo://iaas.UcsdInfo) Managed Object.\n\nWhen this managed object is deleted, the referenced [iaas.UcsdInfo](mo://iaas.UcsdInfo) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "iaasDeviceStatusList": {
      "properties": {
        "Count": {
          "description": "The number of iaasDeviceStatuses matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iaasDeviceStatuses matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iaasDeviceStatus"
          }
        }
      }
    },
    "iaasGetConnectorPacksFromUcsdRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iaasLicenseInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iaasLicenseInfo": {
      "title": "Iaas:License Info",
      "description": "Describes about license info currently available in UCSD.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "LicenseExpirationDate": {
              "type": "string",
              "readOnly": true,
              "description": "Licese expiration date. \n"
            },
            "LicenseKeysInfo": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iaasLicenseKeysInfo"
              },
              "readOnly": true,
              "description": "License keys info for UCSD. \n"
            },
            "LicenseType": {
              "type": "string",
              "readOnly": true,
              "description": "License type of UCSD whether it is EVAL/Permanent/Subscription.. \n"
            },
            "LicenseUtilizationInfo": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iaasLicenseUtilizationInfo"
              },
              "readOnly": true,
              "description": "List of license utilization info for UCSD.  \n"
            },
            "Guid": {
              "$ref": "#/definitions/iaasUcsdInfoRef",
              "description": "A collection of references to the [iaas.UcsdInfo](mo://iaas.UcsdInfo) Managed Object.\n\nWhen this managed object is deleted, the referenced [iaas.UcsdInfo](mo://iaas.UcsdInfo) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "iaasLicenseInfoList": {
      "properties": {
        "Count": {
          "description": "The number of iaasLicenseInfos matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iaasLicenseInfos matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iaasLicenseInfo"
          }
        }
      }
    },
    "iaasLicenseKeysInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iaasLicenseKeysInfo": {
      "title": "Iaas:License Keys Info",
      "description": "License list with the utilization info for UCSD.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Count": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Number of licenses available for the UCSD PID (Product ID). \n"
            },
            "ExpirationDate": {
              "type": "string",
              "readOnly": true,
              "description": "Expiration date for the license. \n"
            },
            "LicenseId": {
              "type": "string",
              "readOnly": true,
              "description": "UCS Director Unique license ID. \n"
            },
            "Pid": {
              "type": "string",
              "readOnly": true,
              "description": "PID (Product ID) for UCSD License.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "iaasLicenseUtilizationInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iaasLicenseUtilizationInfo": {
      "title": "Iaas:License Utilization Info",
      "description": "License list with the Utilization info for UCSD.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "ActualUsed": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Number of licenses actually used for this feature. \n"
            },
            "Label": {
              "type": "string",
              "readOnly": true,
              "description": "License Label. \n"
            },
            "LicensedLimit": {
              "type": "string",
              "readOnly": true,
              "description": "License limit for this license feature. \n"
            },
            "Sku": {
              "type": "string",
              "readOnly": true,
              "description": "SKU for the license.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "iaasMostRunTasksRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iaasMostRunTasks": {
      "title": "Iaas:Most Run Tasks",
      "description": "Describes most run workflow tasks within UCSD.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "TaskCategory": {
              "type": "string",
              "readOnly": true,
              "description": "A functional area to which a task belongs to. \n"
            },
            "TaskExecutionCount": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Number of times this task has executed. \n"
            },
            "TaskName": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the task executed in UCSD. \n"
            },
            "TaskType": {
              "type": "string",
              "readOnly": true,
              "description": "Type of the task whether it is system task or custom task.  \n"
            },
            "Guid": {
              "$ref": "#/definitions/iaasUcsdInfoRef",
              "description": "A collection of references to the [iaas.UcsdInfo](mo://iaas.UcsdInfo) Managed Object.\n\nWhen this managed object is deleted, the referenced [iaas.UcsdInfo](mo://iaas.UcsdInfo) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "iaasMostRunTasksList": {
      "properties": {
        "Count": {
          "description": "The number of iaasMostRunTasks matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iaasMostRunTasks matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iaasMostRunTasks"
          }
        }
      }
    },
    "iaasUcsdInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iaasUcsdInfo": {
      "title": "Iaas:Ucsd Info",
      "description": "UCS Director accounts managed by Intersight.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "DeviceId": {
              "type": "string",
              "readOnly": true,
              "description": "Moid of the UCSD device connector's asset.DeviceRegistration. \n"
            },
            "Guid": {
              "type": "string",
              "readOnly": true,
              "description": "Unique ID of UCSD getting registerd with Intersight. \n"
            },
            "HostName": {
              "type": "string",
              "readOnly": true,
              "description": "The UCSD host name. \n"
            },
            "Ip": {
              "type": "string",
              "readOnly": true,
              "description": "The UCSD IP address. \n"
            },
            "LastBackup": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Last successful backup created for this UCS Director appliance if backup is configured. \n"
            },
            "NodeType": {
              "type": "string",
              "readOnly": true,
              "description": "NodeType specifies if UCSD is deployed in Stand-alone or Multi Node. \n"
            },
            "ProductName": {
              "type": "string",
              "readOnly": true,
              "description": "The UCSD product name. \n"
            },
            "ProductVendor": {
              "type": "string",
              "readOnly": true,
              "description": "The UCSD product vendor. \n"
            },
            "ProductVersion": {
              "type": "string",
              "readOnly": true,
              "description": "The UCSD product/platform version. \n"
            },
            "Status": {
              "type": "string",
              "readOnly": true,
              "description": "The UCSD status. Possible values are Active, Inactive, Unknown.  \n"
            },
            "ConnectorPack": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iaasConnectorPackRef"
              },
              "description": "Relationship to a collection of connector packs installed on the UCSD.\n",
              "readOnly": true
            },
            "DeviceStatus": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iaasDeviceStatusRef"
              },
              "description": "Relationship to a collection of infra accounts managed by the UCSD.\n",
              "readOnly": true
            },
            "LicenseInfo": {
              "$ref": "#/definitions/iaasLicenseInfoRef",
              "description": "Relationship to license information of the UCSD.\n",
              "readOnly": true
            },
            "MostRunTasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iaasMostRunTasksRef"
              },
              "description": "Relationship to collection of MostRunTasks objects with cascade on delete of UcsdInfo object.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "readOnly": true
            },
            "UcsdManagedInfra": {
              "$ref": "#/definitions/iaasUcsdManagedInfraRef",
              "description": "Relationship to infrastructure being managed by the UCSD.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "iaasUcsdInfoList": {
      "properties": {
        "Count": {
          "description": "The number of iaasUcsdInfos matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iaasUcsdInfos matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iaasUcsdInfo"
          }
        }
      }
    },
    "iaasUcsdManagedInfraRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iaasUcsdManagedInfra": {
      "title": "Iaas:Ucsd Managed Infra",
      "description": "Describes about UCSD Managed infrastructure statistics.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "AdvancedCatalogCount": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Total advanced catalogs in UCSD. \n"
            },
            "BmCatalogCount": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Total bare metal catalogs in UCSD. \n"
            },
            "ContainerCatalogCount": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Total service container catalogs in UCSD. \n"
            },
            "EsxiHostCount": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Total ESXi hosts in UCSD. \n"
            },
            "ExternalGroupCount": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Total external (Ldap) groups in UCSD. \n"
            },
            "HypervHostCount": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Total HyperV hosts in UCSD. \n"
            },
            "LocalGroupCount": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Total local groups in UCSD. \n"
            },
            "StandardCatalogCount": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Total standard catalogs in UCSD. \n"
            },
            "UserCount": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Total user accounts in UCSD. \n"
            },
            "VdcCount": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Total virtual datacenters in UCSD. \n"
            },
            "VmCount": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Total Virtual machines in UCSD.  \n"
            },
            "Guid": {
              "$ref": "#/definitions/iaasUcsdInfoRef",
              "description": "A collection of references to the [iaas.UcsdInfo](mo://iaas.UcsdInfo) Managed Object.\n\nWhen this managed object is deleted, the referenced [iaas.UcsdInfo](mo://iaas.UcsdInfo) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "iaasUcsdManagedInfraList": {
      "properties": {
        "Count": {
          "description": "The number of iaasUcsdManagedInfras matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iaasUcsdManagedInfras matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iaasUcsdManagedInfra"
          }
        }
      }
    },
    "iamAccountRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamAccount": {
      "title": "Iam:Account",
      "description": "The Intersight Account used to access Intersight.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "description": "Name of the Intersight account. By default, name is same as the MoID of the account. \n"
            },
            "Status": {
              "type": "string",
              "readOnly": true,
              "description": "Status of the account. To activate the Intersight account, claim a device to the account.  \n"
            },
            "_0_Encrypt": {
              "$ref": "#/definitions/cryptEncryptRef",
              "description": "A collection of references to the [crypt.Encrypt](mo://crypt.Encrypt) Managed Object.\n\nWhen this managed object is deleted, the referenced [crypt.Encrypt](mo://crypt.Encrypt) MO unsets its reference to this deleted MO.\n"
            },
            "_1_Decrypt": {
              "$ref": "#/definitions/cryptDecryptRef",
              "description": "A collection of references to the [crypt.Decrypt](mo://crypt.Decrypt) Managed Object.\n\nWhen this managed object is deleted, the referenced [crypt.Decrypt](mo://crypt.Decrypt) MO unsets its reference to this deleted MO.\n"
            },
            "AppRegistrations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamAppRegistrationRef"
              },
              "description": "List of registered OAuth2 applications created from the account.\n",
              "readOnly": true
            },
            "DomainGroups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamDomainGroupRef"
              },
              "description": "The domain Groups are configured in an account for scaling purpose. Currently, only onboarding-device account has multiple domain groups and other accounts have only one domain group per account.\n",
              "readOnly": true
            },
            "EndPointRoles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamEndPointRoleRef"
              },
              "description": "User defined end point roles. These roles are assigned to Intersight users to perform end point operations such as GUI/CLI cross launch.\n",
              "readOnly": true
            },
            "Idpreferences": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamIdpReferenceRef"
              },
              "description": "System created IdPs configured for authentication in an account. By default Cisco IdP is created upon account creation.\n",
              "readOnly": true
            },
            "Idps": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamIdpRef"
              },
              "description": "IdPs configured for authentication in an account. IdP object handles the third-party IdP details.\n",
              "readOnly": true
            },
            "Permissions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamPermissionRef"
              },
              "description": "System defined permissions within an account. Permission provides a way to assign roles to a user or user group to perform operations on object hierarchy.\n",
              "readOnly": true
            },
            "PrivilegeSets": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamPrivilegeSetRef"
              },
              "description": "User defined privilege sets. Privilege set is a collection of privileges. Privilege sets are assigned to a user using roles.\n",
              "readOnly": true
            },
            "Privileges": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamPrivilegeRef"
              },
              "description": "Privileges are assigned to a user using privilege sets and roles. Privileges define user permissions and the actions a user can perform in Intersight.\n",
              "readOnly": true
            },
            "ResourceLimits": {
              "$ref": "#/definitions/iamResourceLimitsRef",
              "description": "User and user group related configuration limits.\n",
              "readOnly": true
            },
            "Roles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamRoleRef"
              },
              "description": "User defined roles created within an account. Role is a collection of privilege sets. Roles are assigned to user using permission object.\n",
              "readOnly": true
            },
            "SecurityHolder": {
              "$ref": "#/definitions/iamSecurityHolderRef",
              "description": "Holder for organization aggregated permissions and global account permissions.\n",
              "readOnly": true
            },
            "SessionLimits": {
              "$ref": "#/definitions/iamSessionLimitsRef",
              "description": "Session related configuration limits.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "iamAccountList": {
      "properties": {
        "Count": {
          "description": "The number of iamAccounts matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamAccounts matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamAccount"
          }
        }
      }
    },
    "iamAccountPermissionsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamAccountPermissions": {
      "title": "Iam:Account Permissions",
      "description": "Users can log in through the base URL (https://intersight.com) or account-specific URLs. When the Intersight user logs in through the base URL, Intersight identifies the accounts and permissions within each account which the user has access to. In case multiple permissions are identified, the user and session objects are created in the onboarding-user account, and the session object is updated with account and permission information. Intersight GUI uses this information to show available accounts and permissions for the user to select.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "AccountIdentifier": {
              "type": "string",
              "readOnly": true,
              "description": "MOID of the account which a user can select after authentication. \n"
            },
            "AccountName": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the account which a user can select after authentication. \n"
            },
            "AccountStatus": {
              "type": "string",
              "readOnly": true,
              "description": "Status of the account. Account remains inactive until a device is claimed to the account. \n"
            },
            "Permissions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamPermissionReference"
              },
              "readOnly": true,
              "description": "Permissions within an account which a user can select after authentication.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "iamApiKeyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamApiKey": {
      "title": "Iam:Api Key",
      "description": "API keys are used to programatically perform API calls. API keys can be created by passing purpose field, which is a description for the application using API keys. Maximum of 3 API keys per user is allowed. API key will have RSA key pair generated and as part of create request key MOID, private and public key in PEM format are returned. In Intersight only the public key is stored. Client side private key is stored and is used for signature calculation. API key requests are authenticated using RSA SHA 256 signature validations. If the incoming request for authorization has X-Starship-Token, then session based authorization is done, else API key based authorization is performed. Once User, API key and Account are found and signature verification succeeds, then the privilege validations are performed.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "HashAlgorithm": {
              "type": "string",
              "enum": [
                "SHA256",
                "SHA384",
                "SHA512",
                "SHA512_224",
                "SHA512_256"
              ],
              "default": "SHA256",
              "x-createOnly": true,
              "description": "The cryptographic hash algorithm to calculate the message digest.\n \n"
            },
            "KeySpec": {
              "$ref": "#/definitions/pkixKeyGenerationSpec",
              "x-createOnly": true,
              "description": "The key generation specification provides the algorithm and the parameters required for this algorithm to generate a private key, public key pair. Supported key generation schemes include RSA, ECDSA and Edwards-Curve Digital Signature Algorithm (EdDSA). \n"
            },
            "PrivateKey": {
              "type": "string",
              "description": "Holds the private key for the API key.  \n"
            },
            "Purpose": {
              "type": "string",
              "description": "The purpose of the API Key. \n"
            },
            "SigningAlgorithm": {
              "type": "string",
              "enum": [
                "RSASSA-PKCS1-v1_5",
                "RSASSA-PSS",
                "Ed25519",
                "Ecdsa"
              ],
              "default": "RSASSA-PKCS1-v1_5",
              "x-createOnly": true,
              "description": "The signing algorithm used by the client to authenticate API requests to Intersight.\nThe following key generation schemes are supported:\n1. RSASSA-PSS, as defined in RFC 8017 [RFC8017], Section 8.1,\n2. ECDSA P-256, as defined in ANSI X9.62-2005 ECDSA and FIPS 186-4,\n3. Ed25519ph, Ed25519ctx, and Ed25519, as defined in RFC 8032 [RFC8032], Section 5.1.\nThe signing algorithm must be compatible with the key generation specification.\n  \n"
            },
            "Permission": {
              "$ref": "#/definitions/iamPermissionRef",
              "description": "Permissions associated with the API key. Permission provides a way to assign roles to a user or user group to perform operations on object hierarchy.\n",
              "readOnly": true
            },
            "User": {
              "$ref": "#/definitions/iamUserRef",
              "description": "A collection of references to the [iam.User](mo://iam.User) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.User](mo://iam.User) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "iamApiKeyList": {
      "properties": {
        "Count": {
          "description": "The number of iamApiKeys matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamApiKeys matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamApiKey"
          }
        }
      }
    },
    "iamAppRegistrationRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamAppRegistration": {
      "title": "App Registration",
      "description": "AppRegistration encapsulates the meta-data values of a registered OAuth2 client application, as described in\nhttps://tools.ietf.org/html/rfc7591#section-2.\nRegistered client applications have a set of metadata values associated with their client identifier\nat the Intersight authorization server, including the list of valid redirection URIs or a display name.\nThe meta-data is used to specify how a client application can retrieve a OAuth2 Access Token and subsequently\ninvoke Intersight API on behalf of this AppRegistration.\n\nTo register an OAuth2 application, the following information must be provided.\n1) Application name\n2) An icon for the application\n3) URL to the application's home page\n4) A short description of the application\n5) A list of redirect URLs\n\nWhen an AppRegistration is created, a unique OAuth2 clientId is generated and returned in the HTTP response.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "ClientId": {
              "type": "string",
              "readOnly": true,
              "description": "A unique identifier for the OAuth2 client application.\nThe client ID is auto-generated when the AppRegistration object is created.\n \n"
            },
            "ClientName": {
              "type": "string",
              "description": "App Registration name specified by user.\n \n"
            },
            "ClientSecret": {
              "type": "string",
              "description": "The OAuth2 client secret.\nThe value of this property is generated when grantType includes 'client-credentials'.\nOtherwise, no client-secret is generated.\n \n"
            },
            "ClientType": {
              "type": "string",
              "enum": [
                "public",
                "confidential"
              ],
              "default": "public",
              "description": "The type of the OAuth2 client (public or confidential), as specified in https://tools.ietf.org/html/rfc6749#section-2.1.\n \n"
            },
            "Description": {
              "type": "string",
              "description": "Description of the application.\n \n"
            },
            "GrantTypes": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "authorization_code",
                  "refresh_token",
                  "client_credentials",
                  "implicit",
                  "password",
                  "urn:ietf:params:oauth:grant-type:jwt-bearer",
                  "urn:ietf:params:oauth:grant-type:saml2-bearer"
                ],
                "default": "authorization_code"
              },
              "readOnly": true,
              "description": "The set of grant types that OAuth2 clients can use for this application.\nThe grant type is used in the OAuth2 login flow to validate the grant type that has been requested by the client.\nSee https://tools.ietf.org/html/rfc7591#page-9 for more details.\n\n# It is set automatically when AppRegistration is created since currently we do not provide option for the user.\n \n"
            },
            "RedirectUris": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "After a user successfully authorizes an application, the OAuth2 authorization server will redirect the user back to the\napplication with either an authorization code or access token in the URL.\nRegistered redirect URLs may contain query string parameters, but must not contain anything in the fragment.\nThe registration server rejects the request if a user tries to register a redirect URL that contains a fragment.\nFor native and mobile apps, Intersight allows a user to register a URL scheme such as myapp:// which can then be used\nin the redirect URL. The authorization server allows arbitrary URL schemes to be registered in order to support\nregistering redirect URLs for native apps.\n\nRedirect URLs are a critical part of the OAuth flow. After a user successfully authorizes an application,\nthe authorization server will redirect the user back to the application with either an authorization code or access\ntoken in the URL. Because the redirect URL will contain sensitive information, it is critical that the service\ndoesn\u2019t redirect the user to arbitrary locations.\nThe best way to ensure the user will only be directed to appropriate locations is to require the developer to\nregister one or more redirect URLs when they create the application.\n\nThe redirection endpoint URI MUST be an absolute URI.\n \n"
            },
            "RenewClientSecret": {
              "type": "boolean",
              "description": "Set value to true to renew the client-secret. Applicable to client_credentials grant type.\n \n",
              "x-nullable": true
            },
            "ResponseTypes": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "code",
                  "token"
                ],
                "default": "code"
              },
              "readOnly": true,
              "description": "The set of response types that a OAuth2 client can use.\nThis is static list and it is set automatically when AppRegistration is created.\nAccording to RFC, it is used in OAuth2 login flow to check that this AppRegistration supports response type from the request.\nSee https://tools.ietf.org/html/rfc7591#page-9 for more details.\n \n"
            },
            "RevocationTimestamp": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Used to perform revocation for tokens of AppRegistration.\nUpdated only internally is case Revoke property come from UI with value true.\nOn each request with OAuth2 access token the CreationTime of the OAuth2 token will be compared to RevokationTimestamp of the\ncorresponding App Registration.\n \n"
            },
            "Revoke": {
              "type": "boolean",
              "description": "Used to trigger update the revocationTimestamp value.\nIf UI sent updating request with the Revoke value is true, then update RevocationTimestamp.\n  \n",
              "x-nullable": true
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "A collection of references to the [iam.Account](mo://iam.Account) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.Account](mo://iam.Account) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "OauthTokens": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamOAuthTokenRef"
              },
              "description": "Collection of the OAuth2 tokens. Each OAuth2 token represents valid OAuth session.\nOAuth2 token is created when login over OAuth2 is performed using Authorization Code grant type.\n",
              "readOnly": true
            },
            "Permission": {
              "$ref": "#/definitions/iamPermissionRef",
              "description": "Permission associated with OAuth token issued through Client Credentials flow. Permission of the current session will be used.\n",
              "readOnly": true
            },
            "Roles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamRoleRef"
              },
              "description": "The set of roles that can be used when a OAuth2 client is accessing this registered application.\nFor example, multiple roles may be defined in your Intersight account, but you want users to login\nwith the 'Read-Only' role when accessing Intersight through a registered application.\nIn that case, the 'roles' property should contain a single element referencing the 'Read-Only' role.\nA user can only assign roles they already have.\n\nThis relationship is deprecated. Authorization is now performed by passing the 'scope' query parameter\nin the first request of the Authorization Code OAuth2 flow.\nThe value of the 'scope' parameter is a list of scope names separated by comma:\nROLE.Account Administrator, ROLE.<any role name>.\n"
            },
            "User": {
              "$ref": "#/definitions/iamUserRef",
              "description": "A collection of references to the [iam.User](mo://iam.User) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.User](mo://iam.User) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "iamAppRegistrationList": {
      "properties": {
        "Count": {
          "description": "The number of iamAppRegistrations matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamAppRegistrations matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamAppRegistration"
          }
        }
      }
    },
    "iamCertificateRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamCertificate": {
      "title": "Iam:Certificate",
      "description": "Holds a certificate, signed by a CAcert.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Certificate": {
              "$ref": "#/definitions/x509Certificate",
              "description": "User-input pem-encoded certificate, signed by a CAcert. \n"
            },
            "Status": {
              "type": "string",
              "enum": [
                "PendingValidation",
                "Valid",
                "Invalid"
              ],
              "default": "PendingValidation",
              "readOnly": true,
              "description": "Status of the certificate.  \n"
            },
            "CertificateRequest": {
              "$ref": "#/definitions/iamCertificateRequestRef",
              "description": "The certificate signing request associated with this certificate.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "iamCertificateList": {
      "properties": {
        "Count": {
          "description": "The number of iamCertificates matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamCertificates matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamCertificate"
          }
        }
      }
    },
    "iamCertificateRequestRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamCertificateRequest": {
      "title": "Iam:Certificate Request",
      "description": "The information required to generate a certificate signing request (CSR),\nwhich is a block of encoded text that is given to a Certificate Authority when applying for an SSL Certificate.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "EmailAddress": {
              "type": "string",
              "description": "User input email address, an optional part of the subject of the certificate request. \n"
            },
            "Name": {
              "type": "string",
              "x-createOnly": true,
              "description": "Name of the certificate request. \n"
            },
            "Request": {
              "type": "string",
              "readOnly": true,
              "description": "Generated certificate signing request (CSR) in PEM format. \n"
            },
            "SelfSigned": {
              "type": "boolean",
              "description": "Whether the user wants the generated CSR to be self-signed by the appliance. \n",
              "x-nullable": true
            },
            "Subject": {
              "$ref": "#/definitions/pkixDistinguishedName",
              "description": "The x.509 distinguished name of the subject of the certificate request. \n"
            },
            "SubjectAlternateName": {
              "$ref": "#/definitions/pkixSubjectAlternateName",
              "description": "The x.509 subject alternate name values of the certificate request.  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "The account associated with the CertificateRequest.\n",
              "readOnly": true
            },
            "Certificate": {
              "$ref": "#/definitions/iamCertificateRef",
              "description": "A collection of references to the [iam.Certificate](mo://iam.Certificate) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.Certificate](mo://iam.Certificate) MO on the other side of the relationship is deleted.\n",
              "x-createOnly": true
            },
            "PrivateKeySpec": {
              "$ref": "#/definitions/iamPrivateKeySpecRef",
              "description": "A collection of references to the [iam.PrivateKeySpec](mo://iam.PrivateKeySpec) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.PrivateKeySpec](mo://iam.PrivateKeySpec) MO on the other side of the relationship is deleted.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "iamCertificateRequestList": {
      "properties": {
        "Count": {
          "description": "The number of iamCertificateRequests matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamCertificateRequests matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamCertificateRequest"
          }
        }
      }
    },
    "iamClientMetaRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamClientMeta": {
      "title": "Iam:Client Meta",
      "description": "Contains meta information of the client. Currently it is used only within OAuth clients.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "DeviceModel": {
              "type": "string",
              "description": "Parsed device model from raw User-Agent. \n"
            },
            "UserAgent": {
              "type": "string",
              "description": "The value of the \"User-Agent\" HTTP header, as sent by the HTTP client when it initiate a session to Intersight. This can be used to identify the client operating system, browser type and browser version.\nExample - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36\nIt is set when User successfully passed OAuth login flow and receives Access Token.\n  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "iamDomainGroupRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamDomainGroup": {
      "title": "Iam:Domain Group",
      "description": "Intersight services are mapped to three different categories of services for scaling purpose.\n\nThree categories are defined: Partition1/Partition2/Partition3. Topics for each category are created with\na specific number of partitions. For each cloud environment these numbers will be different.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "The name of the domain-group.\n \n"
            },
            "Partition1": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "The partition number domain group related messages are produced for 'Partition1' category service topics.\n \n"
            },
            "Partition2": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "In a cloud environment this parameter will indicate to which partition number domain group related messages are produced for 'Partition2' category service topics.\n \n"
            },
            "Partition3": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "In a cloud environment this parameter will indicate to which partition number domain group related messages are produced for 'Partition3' category service topics.\n \n"
            },
            "PartitionKey": {
              "type": "string",
              "readOnly": true,
              "description": "Partition key used for producing messages to Kafka partitions. By default Domain-group id will be used as parition key. For Domain-groups belonging to Early adopters domain-group id will be prefixed with 'H' and used as partition key, such partition key will be treated differently and messages will always be produced to partition 0.\n \n"
            },
            "Usage": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "The number of devices in the domain-group.\nDevice registration notifications are processed to update the usage of the domain-group. The on-boarding account will have multiple domain-groups, and during the device registration least used domain-group will be selected for the device.\n  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "A collection of references to the [iam.Account](mo://iam.Account) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.Account](mo://iam.Account) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "iamDomainGroupList": {
      "properties": {
        "Count": {
          "description": "The number of iamDomainGroups matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamDomainGroups matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamDomainGroup"
          }
        }
      }
    },
    "iamEarlyAdopterRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamEndPointPasswordPropertiesRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamEndPointPasswordProperties": {
      "title": "Iam:End Point Password Properties",
      "description": "Password properties for endpoint users.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "EnablePasswordExpiry": {
              "type": "boolean",
              "description": "Enables password expiry on the endpoint. \n",
              "x-nullable": true
            },
            "EnforceStrongPassword": {
              "type": "boolean",
              "description": "Enables a strong password policy Strong password requirements: A. The password must have a minimum of 8 and a maximum of 20 characters. B. The password must not contain the User's Name. C. The password must contain characters from three of the following four categories. 1) English uppercase characters (A through Z). 2) English lowercase characters (a through z). 3) Base 10 digits (0 through 9). 4) Non-alphabetic characters (!, @, #, $, %, ^, &, *, -, _, +, =).\n \n",
              "x-nullable": true
            },
            "GracePeriod": {
              "type": "integer",
              "format": "int64",
              "description": "Time period until when you can use the existing password, after it expires. \n"
            },
            "NotificationPeriod": {
              "type": "integer",
              "format": "int64",
              "description": "The duration by when the password will expire. \n"
            },
            "PasswordExpiryDuration": {
              "type": "integer",
              "format": "int64",
              "description": "Set time period for password expiration. Value should be greater than notification period and grace period. \n"
            },
            "PasswordHistory": {
              "type": "integer",
              "format": "int64",
              "description": "Tracks password change history. Specifies in number of instances, that the new password was already used.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "iamEndPointPrivilegeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamEndPointPrivilege": {
      "title": "Iam:End Point Privilege",
      "description": "The privilege defined at the end point which can be assigned to a user.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "type": "string",
              "readOnly": true,
              "description": "The functionality of this privilege. \n"
            },
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "The name of the end point privilege.  \n"
            },
            "Type": {
              "type": "string",
              "enum": [
                "",
                "APIC",
                "DCNM",
                "UCSFI",
                "IMC",
                "IMCM4",
                "IMCM5",
                "HX",
                "HXTriton",
                "UCSD",
                "IntersightAppliance",
                "PureStorage",
                "VMware",
                "ServiceEngine"
              ],
              "default": null,
              "readOnly": true,
              "description": "The type of the end point like Cisco UCS Fabric Interconnect or Cisco IMC.   \n"
            },
            "System": {
              "$ref": "#/definitions/iamSystemRef",
              "description": "A collection of references to the [iam.System](mo://iam.System) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.System](mo://iam.System) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "iamEndPointPrivilegeList": {
      "properties": {
        "Count": {
          "description": "The number of iamEndPointPrivileges matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamEndPointPrivileges matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamEndPointPrivilege"
          }
        }
      }
    },
    "iamEndPointRoleRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamEndPointRole": {
      "title": "Iam:End Point Role",
      "description": "The role defined in the end point which can be assigned to a user.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "The name of the end point role.  \n"
            },
            "RoleType": {
              "type": "string",
              "readOnly": true,
              "description": "User specified tags to roles like as ep-admin or ep-readonly. \n"
            },
            "Type": {
              "type": "string",
              "enum": [
                "",
                "APIC",
                "DCNM",
                "UCSFI",
                "IMC",
                "IMCM4",
                "IMCM5",
                "HX",
                "HXTriton",
                "UCSD",
                "IntersightAppliance",
                "PureStorage",
                "VMware",
                "ServiceEngine"
              ],
              "default": null,
              "readOnly": true,
              "description": "The type of the end point like Cisco UCS Fabric Interconnect or Cisco IMC.   \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "A collection of references to the [iam.Account](mo://iam.Account) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.Account](mo://iam.Account) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "EndPointPrivileges": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamEndPointPrivilegeRef"
              },
              "description": "Privileges assigned to this end point role. These privileges are assigned to users using end point roles to perform operations such as GUI/CLI cross launch.\n",
              "readOnly": true
            },
            "System": {
              "$ref": "#/definitions/iamSystemRef",
              "description": "A collection of references to the [iam.System](mo://iam.System) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.System](mo://iam.System) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "iamEndPointRoleList": {
      "properties": {
        "Count": {
          "description": "The number of iamEndPointRoles matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamEndPointRoles matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamEndPointRole"
          }
        }
      }
    },
    "iamEndPointUserRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamEndPointUser": {
      "title": "User",
      "description": "Endpoint User or Local User.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "description": "Username.  \n"
            },
            "EndPointUserRole": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamEndPointUserRoleRef"
              },
              "description": "A collection of references to the [iam.EndPointUserRole](mo://iam.EndPointUserRole) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.EndPointUserRole](mo://iam.EndPointUserRole) MOs unset their reference to this deleted MO.\n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "iamEndPointUserList": {
      "properties": {
        "Count": {
          "description": "The number of iamEndPointUsers matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamEndPointUsers matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamEndPointUser"
          }
        }
      }
    },
    "iamEndPointUserDeployTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamEndPointUserPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamEndPointUserPolicy": {
      "title": "Local User",
      "description": "Enables creation of local users on endpoints.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "PasswordProperties": {
              "$ref": "#/definitions/iamEndPointPasswordProperties",
              "description": "Set password properties for endpoint users.  \n"
            },
            "EndPointUserRoles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamEndPointUserRoleRef"
              },
              "description": "Relationship to the collection of Endpoint user roles.\n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            },
            "Profiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/policyAbstractConfigProfileRef"
              },
              "description": "Relationship to the server profile object.\n"
            }
          }
        }
      ]
    },
    "iamEndPointUserPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of iamEndPointUserPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamEndPointUserPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamEndPointUserPolicy"
          }
        }
      }
    },
    "iamEndPointUserRoleRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamEndPointUserRole": {
      "title": "Iam:End Point User Role",
      "description": "Mapping of endpoint user to endpoint roles.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "ChangePassword": {
              "type": "boolean",
              "readOnly": true,
              "description": "Denotes whether password has changed. \n"
            },
            "Enabled": {
              "type": "boolean",
              "description": "Enables the user account on the endpoint. \n",
              "x-nullable": true
            },
            "IsPasswordSet": {
              "type": "boolean",
              "x-nullable": true
            },
            "Password": {
              "type": "string",
              "description": "Valid login password of the user.  \n"
            },
            "EndPointRole": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamEndPointRoleRef"
              },
              "description": "Roles.\n"
            },
            "EndPointUser": {
              "$ref": "#/definitions/iamEndPointUserRef",
              "description": "User\n"
            },
            "EndPointUserPolicy": {
              "$ref": "#/definitions/iamEndPointUserPolicyRef",
              "description": "A collection of references to the [iam.EndPointUserPolicy](mo://iam.EndPointUserPolicy) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.EndPointUserPolicy](mo://iam.EndPointUserPolicy) MO unsets its reference to this deleted MO.\n"
            }
          }
        }
      ]
    },
    "iamEndPointUserRoleList": {
      "properties": {
        "Count": {
          "description": "The number of iamEndPointUserRoles matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamEndPointUserRoles matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamEndPointUserRole"
          }
        }
      }
    },
    "iamEndPointUserValidationTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamGroupPermissionToRolesRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamGroupPermissionToRoles": {
      "title": "Iam:Group Permission To Roles",
      "description": "Complex type representing the associated resource groups, organizations and the permission to roles mapping.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Group": {
              "$ref": "#/definitions/cmrfCmRf",
              "readOnly": true,
              "description": "Moid of the resource group. \n"
            },
            "Orgs": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/cmrfCmRf"
              },
              "readOnly": true,
              "description": "Moids of the associated organizations.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "iamIdpRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamIdp": {
      "title": "Iam:Idp",
      "description": "The SAML identity provider such as Cisco, that has been used to log in to Intersight.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "DomainName": {
              "type": "string",
              "description": "Email domain name of the user for this IdP. When a user enters an email during login in the Intersight home page, the IdP is picked by matching this domain name with the email domain name for authentication. \n"
            },
            "IdpEntityId": {
              "type": "string",
              "readOnly": true,
              "description": "The Entity ID of the IdP. In SAML, the entity ID uniquely identifies the IdP or Service Provider. \n"
            },
            "Metadata": {
              "type": "string",
              "description": "SAML metadata of the IdP. \n"
            },
            "Name": {
              "type": "string",
              "description": "The name of the Identity Provider, for example Cisco, Okta, or OneID. \n"
            },
            "Type": {
              "type": "string",
              "enum": [
                "saml",
                "oidc",
                "local"
              ],
              "default": "saml",
              "description": "Authentication protocol used by the IdP.  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "A collection of references to the [iam.Account](mo://iam.Account) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.Account](mo://iam.Account) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "System": {
              "$ref": "#/definitions/iamSystemRef",
              "description": "A collection of references to the [iam.System](mo://iam.System) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.System](mo://iam.System) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "UserLoginTime": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamUserLoginTimeRef"
              },
              "description": "The last login session details for each logged in user of this IdP.\n",
              "readOnly": true
            },
            "UserPreferences": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamUserPreferenceRef"
              },
              "description": "The UI preference object for each user logged in through this IdP.\n",
              "readOnly": true
            },
            "Usergroups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamUserGroupRef"
              },
              "description": "User groups added in an IdP. User group provides a way to configure permission assignment for a group of users based on the IdP attributes received after authentication.\n"
            },
            "Users": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamUserRef"
              },
              "description": "Added or logged in users of an IdP who can access an Intersight account.\n"
            }
          }
        }
      ]
    },
    "iamIdpList": {
      "properties": {
        "Count": {
          "description": "The number of iamIdps matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamIdps matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamIdp"
          }
        }
      }
    },
    "iamIdpReferenceRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamIdpReference": {
      "title": "Iam:Idp Reference",
      "description": "Default Cisco IdP for authentication.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "DomainName": {
              "type": "string",
              "readOnly": true,
              "description": "The email domain name for this IdP of the user. When a user enters an email during login in the Intersight home page, the IdP is picked by matching this domain name with the email domain name for authentication. \n"
            },
            "IdpEntityId": {
              "type": "string",
              "readOnly": true,
              "description": "Entity ID of the IdP. In SAML, the entity ID uniquely identifies the IdP/Service Provider. \n"
            },
            "MultiFactorAuthentication": {
              "type": "boolean",
              "description": "The flag represents if the second factor of authentication is required for Cisco IdP users. \n",
              "x-nullable": true
            },
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "Cisco IdP reference in an account.  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "A collection of references to the [iam.Account](mo://iam.Account) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.Account](mo://iam.Account) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "Idp": {
              "$ref": "#/definitions/iamIdpRef",
              "description": "Reference to System default Cisco IdP.\n",
              "readOnly": true
            },
            "UserLoginTime": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamUserLoginTimeRef"
              },
              "description": "The last login session details for each logged in user of this IdP.\n",
              "readOnly": true
            },
            "UserPreferences": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamUserPreferenceRef"
              },
              "description": "The UI preference object for each user logged in through this IdP.\n",
              "readOnly": true
            },
            "Usergroups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamUserGroupRef"
              },
              "description": "User groups added in an IdP. User group provides a way to configure permission assignment for a group of users based on IdP attributes received after authentication.\n"
            },
            "Users": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamUserRef"
              },
              "description": "Added or logged in users of an IdP who can access an Intersight account.\n"
            }
          }
        }
      ]
    },
    "iamIdpReferenceList": {
      "properties": {
        "Count": {
          "description": "The number of iamIdpReferences matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamIdpReferences matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamIdpReference"
          }
        }
      }
    },
    "iamInternalAuthMsgRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamLdapBasePropertiesRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamLdapBaseProperties": {
      "title": "Iam:Ldap Base Properties",
      "description": "Base settings of LDAP required while configuring LDAP policy.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Attribute": {
              "type": "string",
              "description": "Role and locale information of the user. \n"
            },
            "BaseDn": {
              "type": "string",
              "description": "Base Distinguished Name (DN). Starting point from where server will search for users and groups. \n"
            },
            "BindDn": {
              "type": "string",
              "description": "Distinguished Name (DN) of the user, that is used to authenticate against LDAP servers. \n"
            },
            "BindMethod": {
              "type": "string",
              "enum": [
                "LoginCredentials",
                "Anonymous",
                "ConfiguredCredentials"
              ],
              "default": "LoginCredentials",
              "description": "Authentication method to access LDAP servers. \n"
            },
            "Domain": {
              "type": "string",
              "description": "The IPv4 domain that all users must be in. \n"
            },
            "EnableEncryption": {
              "type": "boolean",
              "description": "If enabled, the endpoint encrypts all information it sends to the LDAP server. \n",
              "x-nullable": true
            },
            "EnableGroupAuthorization": {
              "type": "boolean",
              "description": "If enabled, user authorization is also done at the group level for LDAP users not in the local user database. \n",
              "x-nullable": true
            },
            "Filter": {
              "type": "string",
              "description": "Criteria to identify entries in search requests. \n"
            },
            "GroupAttribute": {
              "type": "string",
              "description": "Groups to which an LDAP entry belongs. \n"
            },
            "IsPasswordSet": {
              "type": "boolean",
              "readOnly": true
            },
            "NestedGroupSearchDepth": {
              "type": "integer",
              "format": "int64",
              "description": "Search depth to look for a nested LDAP group in an LDAP group map. \n"
            },
            "Password": {
              "type": "string",
              "description": "Password of the user, that is used to authenticate. \n",
              "x-writeOnly": true
            },
            "Timeout": {
              "type": "integer",
              "format": "int64",
              "description": "LDAP authentication timeout duration, in seconds.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "iamLdapCredentialsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamLdapDeployTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamLdapDnsParametersRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamLdapDnsParameters": {
      "title": "Iam:Ldap Dns Parameters",
      "description": "DNS settings used to access LDAP Providers.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "SearchDomain": {
              "type": "string",
              "description": "Domain name that acts as a source for a DNS query. \n"
            },
            "SearchForest": {
              "type": "string",
              "description": "Forest name that acts as a source for a DNS query. \n"
            },
            "Source": {
              "type": "string",
              "enum": [
                "Extracted",
                "Configured",
                "ConfiguredExtracted"
              ],
              "default": "Extracted",
              "description": "Source of the domain name used for the DNS SRV request.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "iamLdapGroupRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamLdapGroup": {
      "title": "Iam:Ldap Group",
      "description": "Mapping of LDAP Group to EndPointRoles.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Domain": {
              "type": "string",
              "description": "LDAP server domain the Group resides in. \n"
            },
            "Name": {
              "type": "string",
              "description": "LDAP Group name in the LDAP server database.  \n"
            },
            "EndPointRole": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamEndPointRoleRef"
              },
              "description": "Role assigned to all users in this LDAP server group. This can be one of read-only, user, admin.\n"
            },
            "LdapPolicy": {
              "$ref": "#/definitions/iamLdapPolicyRef",
              "description": "A collection of references to the [iam.LdapPolicy](mo://iam.LdapPolicy) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.LdapPolicy](mo://iam.LdapPolicy) MO unsets its reference to this deleted MO.\n"
            }
          }
        }
      ]
    },
    "iamLdapGroupList": {
      "properties": {
        "Count": {
          "description": "The number of iamLdapGroups matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamLdapGroups matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamLdapGroup"
          }
        }
      }
    },
    "iamLdapPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamLdapPolicy": {
      "title": "LDAP",
      "description": "LDAP Policy configurations.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "BaseProperties": {
              "$ref": "#/definitions/iamLdapBaseProperties",
              "description": "Base settings of LDAP required while configuring LDAP policy. \n"
            },
            "DnsParameters": {
              "$ref": "#/definitions/iamLdapDnsParameters",
              "description": "Configuration settings to resolve LDAP servers, when DNS is enabled. \n"
            },
            "EnableDns": {
              "type": "boolean",
              "description": "Enables DNS to access LDAP servers. \n",
              "x-nullable": true
            },
            "Enabled": {
              "type": "boolean",
              "description": "LDAP server performs authentication. \n",
              "x-nullable": true
            },
            "UserSearchPrecedence": {
              "type": "string",
              "enum": [
                "LocalUserDb",
                "LDAPUserDb"
              ],
              "default": "LocalUserDb",
              "description": "Search precedence between local user database and LDAP user database.  \n"
            },
            "ApplianceAccount": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "The appliance account to which the appliance LDAP policy belongs.\n"
            },
            "Groups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamLdapGroupRef"
              },
              "description": "Relationship to collection of LDAP Groups.\n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "The organization to which the LDAP policy belongs.\n",
              "x-createOnly": true
            },
            "Profiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/policyAbstractConfigProfileRef"
              },
              "description": "Relationship to the profile object.\n"
            },
            "Providers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamLdapProviderRef"
              },
              "description": "Relationship to collection of LDAP Providers.\n"
            }
          }
        }
      ]
    },
    "iamLdapPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of iamLdapPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamLdapPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamLdapPolicy"
          }
        }
      }
    },
    "iamLdapProviderRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamLdapProvider": {
      "title": "Iam:Ldap Provider",
      "description": "LDAP Provider or LDAP Server for user authentication.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Port": {
              "type": "integer",
              "format": "int64",
              "description": "LDAP Server Port for connection establishment. \n"
            },
            "Server": {
              "type": "string",
              "description": "LDAP Server Address, can be IP address or hostname.  \n"
            },
            "LdapPolicy": {
              "$ref": "#/definitions/iamLdapPolicyRef",
              "description": "A collection of references to the [iam.LdapPolicy](mo://iam.LdapPolicy) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.LdapPolicy](mo://iam.LdapPolicy) MO unsets its reference to this deleted MO.\n"
            }
          }
        }
      ]
    },
    "iamLdapProviderList": {
      "properties": {
        "Count": {
          "description": "The number of iamLdapProviders matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamLdapProviders matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamLdapProvider"
          }
        }
      }
    },
    "iamLdapValidationTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamLocalUserPasswordRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamLocalUserPassword": {
      "title": "Iam:Local User Password",
      "description": "LocalUserPassword type is used for changing local user's password. Caller must send old password in Password field and new password in newPassword field. Intersight will verify the old password and sets the new password if everything is OK. This API must not be used for resetting user's password.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "CurrentPassword": {
              "type": "string",
              "description": "User-entered passsord to be compared to password for change password function. \n"
            },
            "NewPassword": {
              "type": "string",
              "description": "New password that the user's password should be changed to. \n"
            },
            "Password": {
              "type": "string",
              "format": "byte",
              "description": "User's current valid passsord.  \n"
            },
            "User": {
              "$ref": "#/definitions/iamUserRef",
              "description": "The backreference of the user password to it's user object.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "iamOAuthSessionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamOAuthTokenRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamOAuthToken": {
      "title": "OAuth2 Token",
      "description": "The meta data for generating OAuth2 token of a user.\nIt is created when user logged in via OAuth2 using Authorization Code grant\nand deleted upon logout, expiration timeout or manual deletion.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "AccessExpirationTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Expiration time for the JWT token to which it can be used for api calls. \n"
            },
            "ClientId": {
              "type": "string",
              "description": "The identifier of the registered application to which the token belongs. \n"
            },
            "ClientIpAddress": {
              "type": "string",
              "readOnly": true,
              "description": "The user agent IP address from which the auth token is launched. \n"
            },
            "ClientName": {
              "type": "string",
              "description": "The name of the registered application to which the token belongs. \n"
            },
            "ExpirationTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Expiration time for the JWT token to which it can be refreshed. \n"
            },
            "LastLoginClient": {
              "type": "string",
              "readOnly": true,
              "description": "The client address from which last login is initiated. \n"
            },
            "LastLoginTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "The last login time for user. \n"
            },
            "TokenId": {
              "type": "string",
              "readOnly": true,
              "description": "Token identifier. Not the Access Token itself.\n \n"
            },
            "UserMeta": {
              "$ref": "#/definitions/iamClientMeta",
              "description": "User Device meta information.  \n"
            },
            "AppRegistration": {
              "$ref": "#/definitions/iamAppRegistrationRef",
              "description": "A collection of references to the [iam.AppRegistration](mo://iam.AppRegistration) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.AppRegistration](mo://iam.AppRegistration) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "Permission": {
              "$ref": "#/definitions/iamPermissionRef",
              "description": "Permissions associated with the OAuth session.\nPermissions provides a way to assign roles to a user or user group to perform operations on object hierarchy.\n",
              "readOnly": true
            },
            "User": {
              "$ref": "#/definitions/iamUserRef",
              "description": "A collection of references to the [iam.User](mo://iam.User) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.User](mo://iam.User) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "iamOAuthTokenList": {
      "properties": {
        "Count": {
          "description": "The number of iamOAuthTokens matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamOAuthTokens matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamOAuthToken"
          }
        }
      }
    },
    "iamPermissionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamPermission": {
      "title": "Role",
      "description": "Permission provides a way to assign roles to a user or user group to perform operations on object hierarchy.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "type": "string",
              "description": "The informative description about each permission. \n"
            },
            "Name": {
              "type": "string",
              "description": "The name of the permission which has to be granted to user.    \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "A collection of references to the [iam.Account](mo://iam.Account) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.Account](mo://iam.Account) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "EndPointRoles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamEndPointRoleRef"
              },
              "description": "The end point roles assigned to this permission. The user can perform end point operations like GUI/CLI cross launch.\n",
              "readOnly": true
            },
            "ResourceRoles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamResourceRolesRef"
              },
              "description": "The resource and roles assigned to this permission. Resource role specifies the organization and the collection of roles the permission has on the organization.\n",
              "x-createOnly": true
            },
            "Roles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamRoleRef"
              },
              "description": "The roles assigned to this permission. Role is a collection of privilege sets. Roles are assigned to a user using the permission object.\n"
            },
            "UserGroups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamUserGroupRef"
              },
              "description": "A collection of references to the [iam.UserGroup](mo://iam.UserGroup) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.UserGroup](mo://iam.UserGroup) MOs unset their reference to this deleted MO.\n"
            },
            "Users": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamUserRef"
              },
              "description": "A collection of references to the [iam.User](mo://iam.User) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.User](mo://iam.User) MOs unset their reference to this deleted MO.\n"
            }
          }
        }
      ]
    },
    "iamPermissionList": {
      "properties": {
        "Count": {
          "description": "The number of iamPermissions matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamPermissions matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamPermission"
          }
        }
      }
    },
    "iamPermissionReferenceRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamPermissionReference": {
      "title": "Iam:Permission Reference",
      "description": "Users can log in through the base URL (https://intersight.com) or account-specific URLs. When the Intersight user logs in through the base URL, Intersight identifies the accounts and permissions within each account which the user has access to. In case multiple permissions are identified, the user and session objects are created in the onboarding-user account, and the session object is updated with account and permission information. Intersight GUI uses this information to show available accounts and permissions for the user to select. PermissionReference type is used to store permission information of an account.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "PermissionIdentifier": {
              "type": "string",
              "readOnly": true,
              "description": "MOID of the permission which user has access to. \n"
            },
            "PermissionName": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the permission which user has access to.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "iamPermissionToRolesRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamPermissionToRoles": {
      "title": "Iam:Permission To Roles",
      "description": "Complex type representing a permission and its associated roles.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Permission": {
              "$ref": "#/definitions/cmrfCmRf",
              "readOnly": true,
              "description": "Permission Id of the object. \n"
            },
            "Roles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/cmrfCmRf"
              },
              "readOnly": true,
              "description": "Collection of Roles for the Permission.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "iamPrivateKeySpecRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamPrivateKeySpec": {
      "title": "Iam:Private Key Spec",
      "description": "Parameters used to generate a private key.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Algorithm": {
              "$ref": "#/definitions/pkixKeyGenerationSpec",
              "x-createOnly": true,
              "description": "Algorithm used to generate the key pair and algorithm-speicifc parameters, such as RSA modulus size.  \n"
            },
            "CertificateRequest": {
              "$ref": "#/definitions/iamCertificateRequestRef",
              "description": "The certificate signing request signed by the private key generated by this spec.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "iamPrivateKeySpecList": {
      "properties": {
        "Count": {
          "description": "The number of iamPrivateKeySpecs matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamPrivateKeySpecs matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamPrivateKeySpec"
          }
        }
      }
    },
    "iamPrivilegeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamPrivilege": {
      "title": "Iam:Privilege",
      "description": "Privilege represents an action which can be performed in Intersight such as creating server profile, deleting a user etc.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "HostnamePrefix": {
              "type": "string",
              "readOnly": true,
              "description": "The hostname prefix of the resource corresponding to this privilege. For example \\'sentry\\' in https://sentry.intersight.com . \n"
            },
            "Method": {
              "type": "string",
              "readOnly": true,
              "description": "The API method on the rest resource corresponding to privilege. For example READ, CREATE, UPDATE etc. \n"
            },
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "The name of the privilege reported by microservice.  \n"
            },
            "RestPath": {
              "type": "string",
              "readOnly": true,
              "description": "The REST API path of the resource corresponding to this privilege. For example /v1/iam/Accounts, /v1/iam/Sessions. \n"
            },
            "UrlPrefix": {
              "type": "string",
              "readOnly": true,
              "description": "The URL path prefix of the resource corresponding to this privilege. For example /devops/kibana, /devops/grafana etc.   \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "A collection of references to the [iam.Account](mo://iam.Account) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.Account](mo://iam.Account) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "System": {
              "$ref": "#/definitions/iamSystemRef",
              "description": "A collection of references to the [iam.System](mo://iam.System) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.System](mo://iam.System) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "iamPrivilegeList": {
      "properties": {
        "Count": {
          "description": "The number of iamPrivileges matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamPrivileges matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamPrivilege"
          }
        }
      }
    },
    "iamPrivilegeSetRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamPrivilegeSet": {
      "title": "Iam:Privilege Set",
      "description": "A collection of privileges.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "type": "string",
              "readOnly": true,
              "description": "Description of the privilege set. \n"
            },
            "Name": {
              "type": "string",
              "x-createOnly": true,
              "description": "Name of the privilege set. \n"
            },
            "PrivilegeNames": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Names of the privileges in the privilege set.  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "A collection of references to the [iam.Account](mo://iam.Account) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.Account](mo://iam.Account) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "AssociatedPrivilegeSets": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamPrivilegeSetRef"
              },
              "description": "A privilege set can be associated to other privilege sets.\n"
            },
            "Privileges": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamPrivilegeRef"
              },
              "description": "Reference to the privileges. Privilege represents an action which can be performed in Intersight such as creating server profile, deleting a user etc. Privileges are assigned to a user using privilege sets and roles.\n",
              "readOnly": true
            },
            "System": {
              "$ref": "#/definitions/iamSystemRef",
              "description": "A collection of references to the [iam.System](mo://iam.System) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.System](mo://iam.System) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "iamPrivilegeSetList": {
      "properties": {
        "Count": {
          "description": "The number of iamPrivilegeSets matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamPrivilegeSets matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamPrivilegeSet"
          }
        }
      }
    },
    "iamQualifierRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamQualifier": {
      "title": "Iam:Qualifier",
      "description": "The qualifier defines how a user qualifies to be part of a user group.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "The name of the SAML attribute used to qualify a user to user group. By default this is memberOf attribute in SAML assertion. \n"
            },
            "Value": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The value of the SAML attribute.  \n"
            },
            "Usergroup": {
              "$ref": "#/definitions/iamUserGroupRef",
              "description": "A collection of references to the [iam.UserGroup](mo://iam.UserGroup) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.UserGroup](mo://iam.UserGroup) MO unsets its reference to this deleted MO.\n"
            }
          }
        }
      ]
    },
    "iamQualifierList": {
      "properties": {
        "Count": {
          "description": "The number of iamQualifiers matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamQualifiers matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamQualifier"
          }
        }
      }
    },
    "iamResourceLimitsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamResourceLimits": {
      "title": "Iam:Resource Limits",
      "description": "The resource limits used to limit resources such as User accounts.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "PerAccountUserLimit": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "The maximum number of users allowed in an account. The default value is 200.  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "A collection of references to the [iam.Account](mo://iam.Account) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.Account](mo://iam.Account) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "iamResourceLimitsList": {
      "properties": {
        "Count": {
          "description": "The number of iamResourceLimits matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamResourceLimits matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamResourceLimits"
          }
        }
      }
    },
    "iamResourcePermissionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamResourcePermission": {
      "title": "Iam:Resource Permission",
      "description": "ResourcePermission represents the permissions defined on a resource like organization.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "PermissionRoles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamPermissionToRoles"
              },
              "readOnly": true,
              "description": "Permissions which are associated with the organization and their role mapping. \n"
            },
            "TargetApp": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the service owning the resource.  \n"
            },
            "Holder": {
              "$ref": "#/definitions/iamSecurityHolderRef",
              "description": "A collection of references to the [iam.SecurityHolder](mo://iam.SecurityHolder) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.SecurityHolder](mo://iam.SecurityHolder) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "Resource": {
              "$ref": "#/definitions/moBaseMoRef",
              "description": "Reference to the resource on which permissions are defined like organization.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "iamResourcePermissionList": {
      "properties": {
        "Count": {
          "description": "The number of iamResourcePermissions matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamResourcePermissions matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamResourcePermission"
          }
        }
      }
    },
    "iamResourceRolesRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamResourceRoles": {
      "title": "Iam:Resource Roles",
      "description": "ResourceRoles provides a way to specify the roles associated with a resource like organization in a permission which can be assigned to a user or user group.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "EndPointRoles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamEndPointRoleRef"
              },
              "description": "The end point roles assigned to this permission. The user can perform end point operations like GUI/CLI cross launch.\n",
              "readOnly": true
            },
            "Permission": {
              "$ref": "#/definitions/iamPermissionRef",
              "description": "A collection of references to the [iam.Permission](mo://iam.Permission) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.Permission](mo://iam.Permission) MO unsets its reference to this deleted MO.\n",
              "x-createOnly": true
            },
            "Resource": {
              "$ref": "#/definitions/moBaseMoRef",
              "description": "Reference to the resource like organization which needs access control.\n",
              "x-createOnly": true
            },
            "Roles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamRoleRef"
              },
              "description": "The roles assigned to this resource. Role is a collection of privilege sets. Roles are assigned to a user or group using the permission object.\n"
            }
          }
        }
      ]
    },
    "iamResourceRolesList": {
      "properties": {
        "Count": {
          "description": "The number of iamResourceRoles matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamResourceRoles matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamResourceRoles"
          }
        }
      }
    },
    "iamRoleRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamRole": {
      "title": "Iam:Role",
      "description": "A role is a collection of privilege sets that are assigned to a user using a permission object.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "type": "string",
              "readOnly": true,
              "description": "Informative description about each role. \n"
            },
            "Name": {
              "type": "string",
              "x-createOnly": true,
              "description": "The name of the role which has to be granted to user. \n"
            },
            "PrivilegeNames": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Names of the privileges in the role.   \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "A collection of references to the [iam.Account](mo://iam.Account) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.Account](mo://iam.Account) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "PrivilegeSets": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamPrivilegeSetRef"
              },
              "description": "Reference to the privilege sets. Privilege set is a collection of privileges. Privilege sets are assigned to a user using roles.\n",
              "readOnly": true
            },
            "System": {
              "$ref": "#/definitions/iamSystemRef",
              "description": "A collection of references to the [iam.System](mo://iam.System) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.System](mo://iam.System) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "iamRoleList": {
      "properties": {
        "Count": {
          "description": "The number of iamRoles matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamRoles matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamRole"
          }
        }
      }
    },
    "iamSecurityHolderRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamSecurityHolder": {
      "title": "Iam:Security Holder",
      "description": "Holder for organization aggregated permissions and global account permissions.\nUser configures permissions for entire account or subset of organizations and specifies associated roles with each organization.\nIntersight aggregates all the permissions and stores per organization aggregate permissions in iam.ResourcePermission object.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "A collection of references to the [iam.Account](mo://iam.Account) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.Account](mo://iam.Account) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "ResourcePermissions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamResourcePermissionRef"
              },
              "description": "Per resource (organization) aggregate permissions and associated roles.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "iamSecurityHolderList": {
      "properties": {
        "Count": {
          "description": "The number of iamSecurityHolders matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamSecurityHolders matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamSecurityHolder"
          }
        }
      }
    },
    "iamServiceProviderRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamServiceProvider": {
      "title": "Iam:Service Provider",
      "description": "SAML Service provider related information in Intersight.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "EntityId": {
              "type": "string",
              "readOnly": true,
              "description": "Entity ID of the Intersight Service Provider. In SAML, the entity ID uniquely identifies the IdP/Service Provider. \n"
            },
            "Metadata": {
              "type": "string",
              "readOnly": true,
              "description": "Metadata of the Intersight Service Provider. User downloads the Intersight Service Provider metadata and integrates it with their IdP for authentication. \n"
            },
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the Intersight Service Provider.  \n"
            },
            "System": {
              "$ref": "#/definitions/iamSystemRef",
              "description": "A collection of references to the [iam.System](mo://iam.System) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.System](mo://iam.System) MO unsets its reference to this deleted MO.\n"
            }
          }
        }
      ]
    },
    "iamServiceProviderList": {
      "properties": {
        "Count": {
          "description": "The number of iamServiceProviders matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamServiceProviders matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamServiceProvider"
          }
        }
      }
    },
    "iamSessionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamSession": {
      "title": "Iam:Session",
      "description": "The web session of a user. After a user logs into Intersight, a session object is created. Session object is deleted upon logout, idle timeout, expiry timeout, or manual deletion.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "AccountPermissions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamAccountPermissions"
              },
              "readOnly": true,
              "description": "The accounts and the permissions within each account which a user can select after authentication. After authentication if user has access to multiple permissions, then user and session object are created in onboarding user account and asked to select one of these permissions. \n"
            },
            "ClientIpAddress": {
              "type": "string",
              "readOnly": true,
              "description": "The user agent IP address from which the session is launched. \n"
            },
            "Expiration": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Expiration time for the session. \n"
            },
            "IdleTimeExpiration": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Idle time expiration for the session. \n"
            },
            "LastLoginClient": {
              "type": "string",
              "readOnly": true,
              "description": "The client address from which last login is initiated. \n"
            },
            "LastLoginTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "The last login time for user.     \n"
            },
            "Permission": {
              "$ref": "#/definitions/iamPermissionRef",
              "description": "Permissions associated with the web session. Permission provides a way to assign roles to a user or user group to perform operations on object hierarchy.\n",
              "readOnly": true
            },
            "User": {
              "$ref": "#/definitions/iamUserRef",
              "description": "A collection of references to the [iam.User](mo://iam.User) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.User](mo://iam.User) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "iamSessionList": {
      "properties": {
        "Count": {
          "description": "The number of iamSessions matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamSessions matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamSession"
          }
        }
      }
    },
    "iamSessionLimitsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamSessionLimits": {
      "title": "Iam:Session Limits",
      "description": "The session related configuration limits.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "IdleTimeOut": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "The idle timeout interval for the web session in seconds. The default value is 1800 seconds. When a session is not refreshed for this duration, backend will mark the session as idle and remove the session. \n"
            },
            "MaximumLimit": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "The maximum number of sessions allowed in an account. The default value is 128. \n"
            },
            "PerUserLimit": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "The maximum number of sessions allowed per user. Default value is 32.  \n"
            },
            "SessionTimeOut": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "The session expiry duration in seconds. The default value is 57600 seconds or 16 hours.  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "A collection of references to the [iam.Account](mo://iam.Account) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.Account](mo://iam.Account) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "iamSessionLimitsList": {
      "properties": {
        "Count": {
          "description": "The number of iamSessionLimits matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamSessionLimits matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamSessionLimits"
          }
        }
      }
    },
    "iamSpConsoleRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamSpEngineRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamSsoSessionAttributesRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamSsoSessionAttributes": {
      "title": "Iam:Sso Session Attributes",
      "description": "Session attributes required to maintain states of SP and IdP.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "IdpSessionExpiration": {
              "type": "string",
              "readOnly": true,
              "description": "SAML SessionNotOnOrAfter attribute sent by IdP in the assertion. IdP uses this to control for how long SP session maybe. SP does not issue SLO if the session is not valid. \n"
            },
            "IdpSessionIndex": {
              "type": "string",
              "readOnly": true,
              "description": "SAML SessionIndex attribute sent by IdP in the assertion. This has to be sent back to IdP in LogoutRequest.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "iamSystemRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamSystem": {
      "title": "Iam:System",
      "description": "System is the top level object in the Intersight. All other objects which can be accessed globally are added to system object, like privilege sets and privileges can be shared by multiple roles and privilege sets.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "EndPointPrivileges": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamEndPointPrivilegeRef"
              },
              "description": "Privileges defined in end point devices such as UCS Fabric Interconnect, IMC, and HyperFlex managed by Intersight. These privileges are assigned to Intersight users using end point roles to perform operations such as GUI/CLI cross launch.\n",
              "readOnly": true
            },
            "EndPointRoles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamEndPointRoleRef"
              },
              "description": "Roles defined in end point devices such as UCS Fabric Interconnect, IMC, HyperFlex managed by Intersight. These roles are assigned to Intersight users to perform end point operations such as GUI/CLI cross launch.\n",
              "readOnly": true
            },
            "Idp": {
              "$ref": "#/definitions/iamIdpRef",
              "description": "Default Cisco IdP used for SAML authentication.\n",
              "readOnly": true
            },
            "PrivilegeSets": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamPrivilegeSetRef"
              },
              "description": "Privilege set is a collection of privileges. Privilege sets are assigned to a user using roles.\n",
              "readOnly": true
            },
            "Privileges": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamPrivilegeRef"
              },
              "description": "Privileges are assigned to a user using privilege sets and roles. Privileges define user permissions and the actions a user can perform in Intersight.\n",
              "readOnly": true
            },
            "Roles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamRoleRef"
              },
              "description": "A role is a collection of privilege sets that are assigned to a user using a permission object.\n",
              "readOnly": true
            },
            "ServiceProvider": {
              "$ref": "#/definitions/iamServiceProviderRef",
              "description": "SAML service provider which holds the SAML entity ID of the Intersight Service Provider and the metadata to integrate with the IdPs.\n"
            }
          }
        }
      ]
    },
    "iamSystemList": {
      "properties": {
        "Count": {
          "description": "The number of iamSystems matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamSystems matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamSystem"
          }
        }
      }
    },
    "iamTrustPointRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamTrustPoint": {
      "title": "Iam:Trust Point",
      "description": "To affirm the identity of trusted source.\nAllows import of third-party CA certificates in X.509 (CER) format.\nIt can be a root CA or an trust chain that leads to a root CA.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Certificates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/x509Certificate"
              },
              "readOnly": true,
              "description": "The collection of certificates in X509 certificate format.\nThis was obtained by parsing the chain property which holds the base 64 encoded chain of certificates.\n \n"
            },
            "Chain": {
              "type": "string",
              "description": "The certificate information for this trusted point. The certificate must be in Base64 encoded X.509 (CER) format.  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "The account associated with the Trustpoint.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "iamTrustPointList": {
      "properties": {
        "Count": {
          "description": "The number of iamTrustPoints matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamTrustPoints matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamTrustPoint"
          }
        }
      }
    },
    "iamUserRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamUser": {
      "title": "Iam:User",
      "description": "The Intersight account user.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "ClientIpAddress": {
              "type": "string",
              "readOnly": true,
              "description": "IP address from which the user last logged in to Intersight. \n"
            },
            "Email": {
              "type": "string",
              "x-createOnly": true,
              "description": "Email of the user. Users are added to Intersight using the email configured in the IdP. \n"
            },
            "FirstName": {
              "type": "string",
              "readOnly": true,
              "description": "First name of the user. This field is populated from the IdP attributes received after authentication. \n"
            },
            "LastLoginTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Last successful login time for user. \n"
            },
            "LastName": {
              "type": "string",
              "readOnly": true,
              "description": "Last name of the user. This field is populated from the IdP attributes received after authentication. \n"
            },
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "UserID as configured in the IdP. \n"
            },
            "UserType": {
              "type": "string",
              "readOnly": true,
              "description": "Type of the User. If a user is added manually by specifying the email address, or has logged in using groups, based on the IdP attributes received during authentication. If added manually, the user type will be static, otherwise dynamic.  \n"
            },
            "ApiKeys": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamApiKeyRef"
              },
              "description": "Current user's API keys. API keys are used to programatically perform API calls.\n",
              "readOnly": true
            },
            "AppRegistrations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamAppRegistrationRef"
              },
              "description": "List of registered OAuth2 applications created by the User.\n",
              "readOnly": true
            },
            "Idp": {
              "$ref": "#/definitions/iamIdpRef",
              "description": "A collection of references to the [iam.Idp](mo://iam.Idp) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.Idp](mo://iam.Idp) MO unsets its reference to this deleted MO.\n"
            },
            "Idpreference": {
              "$ref": "#/definitions/iamIdpReferenceRef",
              "description": "A collection of references to the [iam.IdpReference](mo://iam.IdpReference) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.IdpReference](mo://iam.IdpReference) MO unsets its reference to this deleted MO.\n"
            },
            "LocalUserPassword": {
              "$ref": "#/definitions/iamLocalUserPasswordRef",
              "description": "A collection of references to the [iam.LocalUserPassword](mo://iam.LocalUserPassword) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.LocalUserPassword](mo://iam.LocalUserPassword) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "OauthTokens": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamOAuthTokenRef"
              },
              "description": "Collection of the available OAuthTokens.\nEach OAuthToken lives 30 days unless it is deleted manually by User.\nOAuthToken is created when Login performed via OAuth Client (AppRegistration).\nOAuthToken itself is not sensitive data since it doesn't contain salt, salt is stored in Vault.\n",
              "readOnly": true
            },
            "Permissions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamPermissionRef"
              },
              "description": "Permissions assigned to the user. Permission provides a way to assign roles to a user or user group to perform operations on object hierarchy.\n"
            },
            "Sessions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamSessionRef"
              },
              "description": "Current user's web sessions. After a user logs into Intersight, a session object is created. This session object is deleted upon logout, idle timeout, expiry timeout, or manual deletion.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "iamUserList": {
      "properties": {
        "Count": {
          "description": "The number of iamUsers matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamUsers matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamUser"
          }
        }
      }
    },
    "iamUserGroupRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamUserGroup": {
      "title": "Iam:User Group",
      "description": "User Group provides a way to assign permissions to a group of users based on the IdP attributes received after authentication.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "x-createOnly": true,
              "description": "The name of the user group which the dynamic user belongs to.  \n"
            },
            "Idp": {
              "$ref": "#/definitions/iamIdpRef",
              "description": "A collection of references to the [iam.Idp](mo://iam.Idp) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.Idp](mo://iam.Idp) MO unsets its reference to this deleted MO.\n"
            },
            "Idpreference": {
              "$ref": "#/definitions/iamIdpReferenceRef",
              "description": "A collection of references to the [iam.IdpReference](mo://iam.IdpReference) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.IdpReference](mo://iam.IdpReference) MO unsets its reference to this deleted MO.\n"
            },
            "Permissions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamPermissionRef"
              },
              "description": "Permissions assigned to the user group. Permission provides a way to assign roles to a user or user group to perform operations on object hierarchy.\n"
            },
            "Qualifier": {
              "$ref": "#/definitions/iamQualifierRef",
              "description": "Qualifier defines which Idp attribute qualifies users to be part of a user group.\n"
            },
            "Users": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamUserRef"
              },
              "description": "Users logged in using this user group.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "iamUserGroupList": {
      "properties": {
        "Count": {
          "description": "The number of iamUserGroups matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamUserGroups matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamUserGroup"
          }
        }
      }
    },
    "iamUserLoginTimeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamUserPreferenceRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "iamUserPreference": {
      "title": "Iam:User Preference",
      "description": "Holder for UI preferences such as theme, columns.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Preference": {
              "type": "object",
              "description": "UI preferences of the user.   \n"
            },
            "Idp": {
              "$ref": "#/definitions/iamIdpRef",
              "description": "A collection of references to the [iam.Idp](mo://iam.Idp) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.Idp](mo://iam.Idp) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "IdpReference": {
              "$ref": "#/definitions/iamIdpReferenceRef",
              "description": "A collection of references to the [iam.IdpReference](mo://iam.IdpReference) Managed Object.\n\nWhen this managed object is deleted, the referenced [iam.IdpReference](mo://iam.IdpReference) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "iamUserPreferenceList": {
      "properties": {
        "Count": {
          "description": "The number of iamUserPreferences matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of iamUserPreferences matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/iamUserPreference"
          }
        }
      }
    },
    "iamValidateCertificateTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "imcconnectorDeltaInventoryJobMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "imcconnectorSdCardImageDownloadMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "imcconnectorWebUiMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "infraSideEffectRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "inventoryBaseRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "inventoryBase": {
      "title": "Inventory:Base",
      "description": "Base class for all inventory MOs.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "DeviceMoId": {
              "type": "string",
              "readOnly": true
            },
            "Dn": {
              "type": "string",
              "readOnly": true,
              "description": "The Distinguished Name unambiguously identifies an object in the system. \n"
            },
            "Rn": {
              "type": "string",
              "readOnly": true,
              "description": "The Relative Name uniquely identifies an object within a given context.  \n"
            }
          }
        }
      ]
    },
    "inventoryDeviceInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "inventoryDeviceInfo": {
      "title": "Inventory:Device Info",
      "description": "Information pertaining to a Registered Device in starship which is pertinent to Inventory Microservice.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyinventoryAbstractDeviceInfo"
        },
        {
          "type": "object"
        }
      ]
    },
    "inventoryDeviceInfoList": {
      "properties": {
        "Count": {
          "description": "The number of inventoryDeviceInfos matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of inventoryDeviceInfos matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/inventoryDeviceInfo"
          }
        }
      }
    },
    "inventoryDnMoBindingRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "inventoryDnMoBinding": {
      "title": "Inventory:Dn Mo Binding",
      "description": "DnMoBinding provides a binding between a Intersight MO and a UCSM MO which has a DN.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Dn": {
              "type": "string",
              "readOnly": true,
              "description": "Distinguished Name of the UCSM object. \n"
            },
            "TargetMoId": {
              "type": "string",
              "readOnly": true,
              "description": "The property targetMoId represents the Binding target's MoId. \n"
            },
            "TargetMoType": {
              "type": "string",
              "readOnly": true,
              "description": "The property targetMoType represents the Binding target's Mo type.  \n"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "Relationship to the device registration object.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "inventoryDnMoBindingList": {
      "properties": {
        "Count": {
          "description": "The number of inventoryDnMoBindings matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of inventoryDnMoBindings matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/inventoryDnMoBinding"
          }
        }
      }
    },
    "inventoryEpInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "inventoryGenericInventoryRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "inventoryGenericInventory": {
      "title": "Inventory:Generic Inventory",
      "description": "Any inventory which is represented as a key / value pair. Example - moInvKv in UCSM representing OS tools running on ESX.\n",
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "type": "object",
          "properties": {
            "Key": {
              "type": "string",
              "readOnly": true
            },
            "Type": {
              "type": "string",
              "readOnly": true
            },
            "Value": {
              "type": "string",
              "readOnly": true
            },
            "InventoryGenericInventoryHolder": {
              "$ref": "#/definitions/inventoryGenericInventoryHolderRef",
              "description": "A collection of references to the [inventory.GenericInventoryHolder](mo://inventory.GenericInventoryHolder) Managed Object.\n\nWhen this managed object is deleted, the referenced [inventory.GenericInventoryHolder](mo://inventory.GenericInventoryHolder) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "inventoryGenericInventoryList": {
      "properties": {
        "Count": {
          "description": "The number of inventoryGenericInventories matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of inventoryGenericInventories matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/inventoryGenericInventory"
          }
        }
      }
    },
    "inventoryGenericInventoryHolderRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "inventoryGenericInventoryHolder": {
      "title": "Inventory:Generic Inventory Holder",
      "description": "A container class for generic inventory.\n",
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "type": "object",
          "properties": {
            "Endpoint": {
              "type": "string",
              "readOnly": true
            },
            "ComputeBlade": {
              "$ref": "#/definitions/computeBladeRef",
              "description": "A collection of references to the [compute.Blade](mo://compute.Blade) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.Blade](mo://compute.Blade) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "ComputeRackUnit": {
              "$ref": "#/definitions/computeRackUnitRef",
              "description": "A collection of references to the [compute.RackUnit](mo://compute.RackUnit) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.RackUnit](mo://compute.RackUnit) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "GenericInventory": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/inventoryGenericInventoryRef"
              },
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "inventoryGenericInventoryHolderList": {
      "properties": {
        "Count": {
          "description": "The number of inventoryGenericInventoryHolders matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of inventoryGenericInventoryHolders matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/inventoryGenericInventoryHolder"
          }
        }
      }
    },
    "inventoryInventoryMoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "inventoryInventoryMo": {
      "title": "Inventory:Inventory Mo",
      "description": "Complex type representing the inventory MO.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "MoDn": {
              "type": "string",
              "description": "The UCS DN of the MO for which the latest inventory to be fetched. If this property is empty and moId property has the Moid of the MO to be updated, the Moid will be used. If this property is empty and moId is also empty, all the MOs of the given moType will be updated. \n"
            },
            "MoId": {
              "type": "string",
              "description": "The MO id of an MO for which the latest inventory to be fetched. If this property is empty and moDn property has the UCS DN of the MO to be updated, the DN will be used. If this property is empty and moDn is also empty, all the MOs of the given moType will be updated. \n"
            },
            "MoType": {
              "type": "string",
              "description": "The type of the MO for which the latest inventory to be fetched.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "inventoryJobInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "inventoryRequestRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "inventoryRequest": {
      "title": "Inventory:Request",
      "description": "Request MO allows the inventory of specific devices to be collected on demand. The inventory can be collected in three levels - all the MOs of a specific device, MOs of specific MO types for a given device or specific MO instances of specific MO types for a given device. These MO instances are used just to collect the requests and not persisted.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Mos": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/inventoryInventoryMo"
              },
              "description": "The collection of specific inventory MOs that need to be fetched. The property is optional and if not present then all the MOs of the given device will be fetched.  \n"
            },
            "Device": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The device bind with this Request.\n"
            }
          }
        }
      ]
    },
    "inventoryScopedInventoryTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "ipmioverlanDeployTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "ipmioverlanPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "ipmioverlanPolicy": {
      "title": "IPMI Over LAN",
      "description": "Intelligent Platform Management Interface Over LAN Policy.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "State of the IPMI Over LAN service on the endpoint. \n",
              "x-nullable": true
            },
            "IsEncryptionKeySet": {
              "type": "boolean",
              "readOnly": true,
              "description": "Indicates whether the value of the 'encryptionKey' property has been set. \n"
            },
            "EncryptionKey": {
              "type": "string",
              "description": "The encryption key to use for IPMI communication. It should have an even number of hexadecimal characters and not exceed 40 characters. \n",
              "x-writeOnly": true
            },
            "Privilege": {
              "type": "string",
              "enum": [
                "admin",
                "user",
                "read-only"
              ],
              "default": "admin",
              "description": "The highest privilege level that can be assigned to an IPMI session on a server.  \n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            },
            "Profiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/policyAbstractConfigProfileRef"
              },
              "description": "Relationship to the profile object.\n"
            }
          }
        }
      ]
    },
    "ipmioverlanPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of ipmioverlanPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of ipmioverlanPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ipmioverlanPolicy"
          }
        }
      }
    },
    "ipmioverlanValidationTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "kvmDeployTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "kvmPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "kvmPolicy": {
      "title": "Virtual KVM",
      "description": "Policy to configure KVM Launch settings.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "EnableLocalServerVideo": {
              "type": "boolean",
              "description": "If enabled, displays KVM session on any monitor attached to the server. \n",
              "x-nullable": true
            },
            "EnableVideoEncryption": {
              "type": "boolean",
              "description": "If enabled, encrypts all video information sent through KVM. \n",
              "x-nullable": true
            },
            "Enabled": {
              "type": "boolean",
              "description": "State of the vKVM service on the endpoint. \n",
              "x-nullable": true
            },
            "MaximumSessions": {
              "type": "integer",
              "format": "int64",
              "description": "The maximum number of concurrent KVM sessions allowed. \n",
              "default": 4
            },
            "RemotePort": {
              "type": "integer",
              "format": "int64",
              "description": "The port used for KVM communication.  \n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            },
            "Profiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/policyAbstractConfigProfileRef"
              },
              "description": "Relationship to the profile object.\n"
            }
          }
        }
      ]
    },
    "kvmPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of kvmPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of kvmPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/kvmPolicy"
          }
        }
      }
    },
    "kvmValidationTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "licenseAccountLicenseDataRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "licenseAccountLicenseData": {
      "title": "License:Account License Data",
      "description": "License information for an account.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "AccountId": {
              "type": "string",
              "readOnly": true,
              "description": "Root user's ID of the account. \n"
            },
            "AgentData": {
              "type": "string",
              "readOnly": true,
              "description": "Agent trusted store data. \n"
            },
            "AuthExpireTime": {
              "type": "string",
              "readOnly": true,
              "description": "Authorization expiration time. \n"
            },
            "AuthInitialTime": {
              "type": "string",
              "readOnly": true,
              "description": "Intial authorization time. \n"
            },
            "AuthNextTime": {
              "type": "string",
              "readOnly": true,
              "description": "Next time for the authorization. \n"
            },
            "Category": {
              "type": "string",
              "readOnly": true,
              "description": "Account license data category name. \n"
            },
            "DefaultLicenseType": {
              "type": "string",
              "enum": [
                "Base",
                "Essential",
                "Standard",
                "Advantage"
              ],
              "default": "Base",
              "description": "Default license tier set by user.  \n"
            },
            "Group": {
              "type": "string",
              "readOnly": true,
              "description": "Account license data group name. \n"
            },
            "LastSync": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Specifies last sync time with SA. \n"
            },
            "LastUpdatedTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Record's last update datetime. \n"
            },
            "LicenseState": {
              "type": "string",
              "readOnly": true,
              "description": "Aggregrated mode for the agent. \n"
            },
            "LicenseTechSupportInfo": {
              "type": "string",
              "readOnly": true,
              "description": "Tech-support info of a smart-agent. \n"
            },
            "RegisterExpireTime": {
              "type": "string",
              "readOnly": true,
              "description": "Registration exipiration time. \n"
            },
            "RegisterInitialTime": {
              "type": "string",
              "readOnly": true,
              "description": "Initial time of registration. \n"
            },
            "RegisterNextTime": {
              "type": "string",
              "readOnly": true,
              "description": "Next time for the license registration. \n"
            },
            "RegistrationStatus": {
              "type": "string",
              "readOnly": true,
              "description": "Registration status of a smart-agent. \n"
            },
            "RenewFailureString": {
              "type": "string",
              "readOnly": true,
              "description": "License renewal failure message. \n"
            },
            "SmartAccount": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the smart account. \n"
            },
            "SyncStatus": {
              "type": "string",
              "readOnly": true,
              "description": "Current sync status for the account. \n"
            },
            "VirtualAccount": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the virtual account.  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "AccountLicenseData record to Account record relationship.\n"
            },
            "CustomerOp": {
              "$ref": "#/definitions/licenseCustomerOpRef",
              "description": "AccountLicenseData record to CustomerOp record relationship.\n"
            },
            "Licenseinfos": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/licenseLicenseInfoRef"
              },
              "description": "All LicenceInfo records refercing this AccountLicenseData record.\n"
            },
            "SmartlicenseToken": {
              "$ref": "#/definitions/licenseSmartlicenseTokenRef",
              "description": "AccountLicenseData record to SmartlicenseToken record relationship.\n"
            }
          }
        }
      ]
    },
    "licenseAccountLicenseDataList": {
      "properties": {
        "Count": {
          "description": "The number of licenseAccountLicenseData matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of licenseAccountLicenseData matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/licenseAccountLicenseData"
          }
        }
      }
    },
    "licenseCustomerOpRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "licenseCustomerOp": {
      "title": "License:Customer Op",
      "description": "Customer operation object to refresh the registration or re-authenticate, pre-created.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "DeregisterDevice": {
              "type": "boolean",
              "description": "Trigger de-registration/disable. \n",
              "x-nullable": true
            },
            "RenewAuthorization": {
              "type": "boolean",
              "description": "Trigger renew authorization. \n",
              "x-nullable": true
            },
            "RenewIdCertificate": {
              "type": "boolean",
              "description": "Trigger renew registration. \n",
              "x-nullable": true
            },
            "ShowAgentTechSupport": {
              "type": "boolean",
              "description": "Trigger show tech support feature.  \n",
              "x-nullable": true
            },
            "AccountLicenseData": {
              "$ref": "#/definitions/licenseAccountLicenseDataRef",
              "description": "A collection of references to the [license.AccountLicenseData](mo://license.AccountLicenseData) Managed Object.\n\nWhen this managed object is deleted, the referenced [license.AccountLicenseData](mo://license.AccountLicenseData) MO unsets its reference to this deleted MO.\n"
            }
          }
        }
      ]
    },
    "licenseCustomerOpList": {
      "properties": {
        "Count": {
          "description": "The number of licenseCustomerOps matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of licenseCustomerOps matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/licenseCustomerOp"
          }
        }
      }
    },
    "licenseLicenseInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "licenseLicenseInfo": {
      "title": "License:License Info",
      "description": "License state information for a specific license entitlement. Essentials license entitlement is supported currently.\nlicenseState attribute is used for license enforcement. When license state is one of TrialPeriod, Compliance, or OutOfCompliance,\nthe feature set defined for the license entitlement is granted to the customer.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "ActiveAdmin": {
              "type": "boolean",
              "description": "The license administrative state.\n\nSet this property to 'true' to activate the license entitlements.\n \n",
              "x-nullable": true
            },
            "DaysLeft": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "The number of days left for licenseState to stay in TrialPeriod or OutOfCompliance state. \n"
            },
            "EndTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "The date and time when the trial period expires.\n\nThe value of the 'endTime' property is set when the account enters the TrialPeriod or OutOfCompliance state.\n \n"
            },
            "EnforceMode": {
              "type": "string",
              "readOnly": true,
              "description": "The entitlement mode reported by Cisco Smart Software Manager. \n"
            },
            "ErrorDesc": {
              "type": "string",
              "readOnly": true,
              "description": "The detailed error message when there is any error related to this licensing entitlement. \n"
            },
            "EvaluationPeriod": {
              "type": "integer",
              "format": "int64",
              "description": "The default Trial or Grace period customer is entitled to. \n"
            },
            "ExtraEvaluation": {
              "type": "integer",
              "format": "int64",
              "description": "The number of days the trial Trial or Grace period is extended.\n\nThe trial or grace period can be extended once.\n \n"
            },
            "LicenseCount": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "The total number of devices claimed in the Intersight account. \n"
            },
            "LicenseState": {
              "type": "string",
              "enum": [
                "NotLicensed",
                "GraceExpired",
                "TrialPeriod",
                "OutOfCompliance",
                "Compliance",
                "TrialExpired"
              ],
              "default": "NotLicensed",
              "readOnly": true,
              "description": "The license state defined by Intersight.\n\nThe value may be one of NotLicensed, TrialPeriod, OutOfCompliance, Compliance, GraceExpired, or TrialExpired.\n \n"
            },
            "LicenseType": {
              "type": "string",
              "enum": [
                "Base",
                "Essential",
                "Standard",
                "Advantage"
              ],
              "default": "Base",
              "readOnly": true,
              "description": "The name of the Intersight license entitlement.\nFor example, this property may be set to 'Essential'.\n \n"
            },
            "StartTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "The date and time when the licenseState entered the TrialPeriod or OutOfCompliance state. \n"
            },
            "TrialAdmin": {
              "type": "boolean",
              "description": "The administrative state of the trial license.\n\nWhen the LicenseState is set to 'NotLicensed', 'trialAdmin' can be set to true to start the trial period,\ni.e. licenseState is set to be TrialPeriod.\n  \n",
              "x-nullable": true
            },
            "AccountLicenseData": {
              "$ref": "#/definitions/licenseAccountLicenseDataRef",
              "description": "A collection of references to the [license.AccountLicenseData](mo://license.AccountLicenseData) Managed Object.\n\nWhen this managed object is deleted, the referenced [license.AccountLicenseData](mo://license.AccountLicenseData) MO unsets its reference to this deleted MO.\n"
            }
          }
        }
      ]
    },
    "licenseLicenseInfoList": {
      "properties": {
        "Count": {
          "description": "The number of licenseLicenseInfos matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of licenseLicenseInfos matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/licenseLicenseInfo"
          }
        }
      }
    },
    "licenseLicenseSyncRequestRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "licenseServerTagRequestRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "licenseSmartlicenseTokenRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "licenseSmartlicenseToken": {
      "title": "License:Smartlicense Token",
      "description": "SmartlicenseToken collection stores license registration tokens.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Token": {
              "type": "string",
              "description": "Smart license registration token.  \n"
            },
            "AccountLicenseData": {
              "$ref": "#/definitions/licenseAccountLicenseDataRef",
              "description": "A collection of references to the [license.AccountLicenseData](mo://license.AccountLicenseData) Managed Object.\n\nWhen this managed object is deleted, the referenced [license.AccountLicenseData](mo://license.AccountLicenseData) MO unsets its reference to this deleted MO.\n"
            }
          }
        }
      ]
    },
    "licenseSmartlicenseTokenList": {
      "properties": {
        "Count": {
          "description": "The number of licenseSmartlicenseTokens matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of licenseSmartlicenseTokens matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/licenseSmartlicenseToken"
          }
        }
      }
    },
    "licenseSyncResponseRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "lsServiceProfileRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "lsServiceProfile": {
      "title": "Ls:Service Profile",
      "description": "Logical Profile that can be associated to a physical server.\n",
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "type": "object",
          "properties": {
            "AssignState": {
              "type": "string",
              "readOnly": true,
              "description": "Assignment state of the service profile. \n"
            },
            "AssocState": {
              "type": "string",
              "readOnly": true,
              "description": "Association state of the service profile. \n"
            },
            "AssociatedServer": {
              "type": "string",
              "readOnly": true,
              "description": "Server to which the UCS Manager service profile is associated to. \n"
            },
            "ConfigState": {
              "type": "string",
              "readOnly": true,
              "description": "Configuration state of the service profile. \n"
            },
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the UCS Manager service profile. \n"
            },
            "OperState": {
              "type": "string",
              "readOnly": true,
              "description": "Operational state of the service profile.  \n"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "lsServiceProfileList": {
      "properties": {
        "Count": {
          "description": "The number of lsServiceProfiles matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of lsServiceProfiles matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/lsServiceProfile"
          }
        }
      }
    },
    "managementControllerRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "managementController": {
      "title": "Management:Controller",
      "description": "A specialized service processor that monitors the physical state of a server, using sensors and communicating with the system administrator through an independent connection.\n",
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "type": "object",
          "properties": {
            "Model": {
              "type": "string",
              "readOnly": true,
              "description": "Model of the endpoint that houses the management controller.  \n"
            },
            "AdapterUnit": {
              "$ref": "#/definitions/adapterUnitRef",
              "description": "A collection of references to the [adapter.Unit](mo://adapter.Unit) Managed Object.\n\nWhen this managed object is deleted, the referenced [adapter.Unit](mo://adapter.Unit) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "ComputeBlade": {
              "$ref": "#/definitions/computeBladeRef",
              "description": "A collection of references to the [compute.Blade](mo://compute.Blade) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.Blade](mo://compute.Blade) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "ComputeRackUnit": {
              "$ref": "#/definitions/computeRackUnitRef",
              "description": "A collection of references to the [compute.RackUnit](mo://compute.RackUnit) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.RackUnit](mo://compute.RackUnit) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "ManagementInterfaces": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/managementInterfaceRef"
              },
              "readOnly": true
            },
            "NetworkElement": {
              "$ref": "#/definitions/networkElementRef",
              "description": "A collection of references to the [network.Element](mo://network.Element) Managed Object.\n\nWhen this managed object is deleted, the referenced [network.Element](mo://network.Element) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            },
            "RunningFirmware": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/firmwareRunningFirmwareRef"
              },
              "readOnly": true
            },
            "StorageSasExpander": {
              "$ref": "#/definitions/storageSasExpanderRef",
              "description": "A collection of references to the [storage.SasExpander](mo://storage.SasExpander) Managed Object.\n\nWhen this managed object is deleted, the referenced [storage.SasExpander](mo://storage.SasExpander) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "TopSystem": {
              "$ref": "#/definitions/topSystemRef",
              "description": "A collection of references to the [top.System](mo://top.System) Managed Object.\n\nWhen this managed object is deleted, the referenced [top.System](mo://top.System) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "managementControllerList": {
      "properties": {
        "Count": {
          "description": "The number of managementControllers matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of managementControllers matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/managementController"
          }
        }
      }
    },
    "managementEntityRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "managementEntity": {
      "title": "Management:Entity",
      "description": "Logical representation that captures the role of each Fabric Interconnect in UCS Manager.\n",
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "type": "object",
          "properties": {
            "EntityId": {
              "type": "string",
              "readOnly": true,
              "description": "Identity of the Fabric Interconnect - A/B. \n"
            },
            "Leadership": {
              "type": "string",
              "readOnly": true,
              "description": "Role (Primary / Subordinate) of the Fabric Interconnect.  \n"
            },
            "NetworkElement": {
              "$ref": "#/definitions/networkElementRef",
              "description": "A collection of references to the [network.Element](mo://network.Element) Managed Object.\n\nWhen this managed object is deleted, the referenced [network.Element](mo://network.Element) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "managementEntityList": {
      "properties": {
        "Count": {
          "description": "The number of managementEntities matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of managementEntities matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/managementEntity"
          }
        }
      }
    },
    "managementInterfaceRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "managementInterface": {
      "title": "Management:Interface",
      "description": "Interface that provides access to the management controller.\n",
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "type": "object",
          "properties": {
            "Gateway": {
              "type": "string",
              "readOnly": true,
              "description": "Default gateway for the interface. \n"
            },
            "HostName": {
              "type": "string",
              "description": "Hostname configured for the interface. \n"
            },
            "IpAddress": {
              "type": "string",
              "readOnly": true,
              "description": "IP address of the interface. \n"
            },
            "MacAddress": {
              "type": "string",
              "readOnly": true,
              "description": "MAC address configured for the interface. \n"
            },
            "Mask": {
              "type": "string",
              "readOnly": true,
              "description": "Netmask for the interface. \n"
            },
            "SwitchId": {
              "type": "string",
              "description": "Switch Id of the interface. \n"
            },
            "UemConnStatus": {
              "type": "string",
              "description": "Status of UEM connection. \n"
            },
            "VirtualHostName": {
              "type": "string",
              "description": "Virtual hostname configured for the interface in case of clustered environment.  \n"
            },
            "ManagementController": {
              "$ref": "#/definitions/managementControllerRef",
              "description": "A collection of references to the [management.Controller](mo://management.Controller) Managed Object.\n\nWhen this managed object is deleted, the referenced [management.Controller](mo://management.Controller) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "managementInterfaceList": {
      "properties": {
        "Count": {
          "description": "The number of managementInterfaces matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of managementInterfaces matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/managementInterface"
          }
        }
      }
    },
    "mbAppInstanceRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "mbInstancePartitionAssignmentsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "memoryAbstractUnitRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "memoryAbstractUnit": {
      "title": "Memory:Abstract Unit",
      "description": "This represents the abstract class for all memory units.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "AdminState": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the administrative state of the memory unit on a server. \n"
            },
            "ArrayId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "This represents the memory array to which the memory unit belongs to. \n"
            },
            "Bank": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "This represents the memory bank of the memory unit on a server. \n"
            },
            "Capacity": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the memory capacity in MiB of the memory unit on a server. \n"
            },
            "Clock": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the clock of the memory unit on a server. \n"
            },
            "FormFactor": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the form factor of the memory unit on a server. \n"
            },
            "Latency": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the latency of the memory unit on a server. \n"
            },
            "Location": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the location of the memory unit on a server. \n"
            },
            "OperPowerState": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the operational power state of the memory unit on a server. \n"
            },
            "OperState": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the operational state of the memory unit on a server. \n"
            },
            "Operability": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the operability of the memory unit on a server. \n"
            },
            "Presence": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the presence state of the memory unit on a server. \n"
            },
            "Set": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "This represents the set of the memory unit on a server. \n"
            },
            "Speed": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the speed of the memory unit on a server. \n"
            },
            "Thermal": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the thremal state of the memory unit on a server. \n"
            },
            "Type": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the memory type of the memory unit on a server. \n"
            },
            "Visibility": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the visibility of the memory unit on a server. \n"
            },
            "Width": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the width of the memory unit on a server.  \n"
            }
          }
        }
      ]
    },
    "memoryArrayRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "memoryArray": {
      "title": "Memory:Array",
      "description": "Holder housing multiple memory units.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "ArrayId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "CpuId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "CurrentCapacity": {
              "type": "string",
              "readOnly": true
            },
            "ErrorCorrection": {
              "type": "string",
              "readOnly": true
            },
            "MaxCapacity": {
              "type": "string",
              "readOnly": true
            },
            "MaxDevices": {
              "type": "string",
              "readOnly": true
            },
            "OperPowerState": {
              "type": "string",
              "readOnly": true
            },
            "Presence": {
              "type": "string",
              "readOnly": true
            },
            "ComputeBoard": {
              "$ref": "#/definitions/computeBoardRef",
              "description": "A collection of references to the [compute.Board](mo://compute.Board) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.Board](mo://compute.Board) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "PersistentMemoryUnits": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/memoryPersistentMemoryUnitRef"
              },
              "description": "This represents all the persistent memory modules found in a memory array of a server.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            },
            "Units": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/memoryUnitRef"
              },
              "description": "This represents all the DIMMs found in a memory array of a server. This includes both regular DIMMs and persistent memory modules.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "memoryArrayList": {
      "properties": {
        "Count": {
          "description": "The number of memoryArrays matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of memoryArrays matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/memoryArray"
          }
        }
      }
    },
    "memoryPersistentMemoryConfigResultRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "memoryPersistentMemoryConfigResult": {
      "title": "Memory:Persistent Memory Config Result",
      "description": "This represents the result of a previously applied Persistent Memory Configuration on a server.\n",
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "type": "object",
          "properties": {
            "ConfigErrorDesc": {
              "type": "string",
              "readOnly": true,
              "description": "This describes the error in the result of a previously applied Persistent Memory Configuration on a server. \n"
            },
            "ConfigResult": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the result of a previously applied Persistent Memory Configuration on a server. \n"
            },
            "ConfigSequenceNo": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "This represents the sequence number of a previously applied Persistent Memory Configuration on a server. \n"
            },
            "ConfigState": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the state of a previously applied Persistent Memory Configuration on a server.  \n"
            },
            "MemoryPersistentMemoryConfiguration": {
              "$ref": "#/definitions/memoryPersistentMemoryConfigurationRef",
              "description": "A collection of references to the [memory.PersistentMemoryConfiguration](mo://memory.PersistentMemoryConfiguration) Managed Object.\n\nWhen this managed object is deleted, the referenced [memory.PersistentMemoryConfiguration](mo://memory.PersistentMemoryConfiguration) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "PersistentMemoryNamespaceConfigResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/memoryPersistentMemoryNamespaceConfigResultRef"
              },
              "description": "This represents the collection of all the results of the previously applied Persistent Memory Namespaces on a server.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "memoryPersistentMemoryConfigResultList": {
      "properties": {
        "Count": {
          "description": "The number of memoryPersistentMemoryConfigResults matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of memoryPersistentMemoryConfigResults matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/memoryPersistentMemoryConfigResult"
          }
        }
      }
    },
    "memoryPersistentMemoryConfigurationRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "memoryPersistentMemoryConfiguration": {
      "title": "Memory:Persistent Memory Configuration",
      "description": "This represents the configuration on the Persistent Memory Modules on a server.\n",
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "type": "object",
          "properties": {
            "MemoryCapacity": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the memory capacity in GB of a persistent memory configuration on a server. \n"
            },
            "NumOfDimms": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the number of persistent memory modules of a Persistent Memory Configuration on a server. \n"
            },
            "NumOfRegions": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the number of regions of a Persistent Memory Configuration on a server. \n"
            },
            "PersistentMemoryCapacity": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the persistent memory capacity in GB of a persistent memory configuration on a server. \n"
            },
            "ReservedCapacity": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the reserved capacity in GB of a persistent memory configuration on a server. \n"
            },
            "SecurityState": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the collective security state of all persistent memory modules on a server. \n"
            },
            "TotalCapacity": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the total capacity in GB of a persistent memory configuration on a server.  \n"
            },
            "ComputeBoard": {
              "$ref": "#/definitions/computeBoardRef",
              "description": "A collection of references to the [compute.Board](mo://compute.Board) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.Board](mo://compute.Board) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "PersistentMemoryConfigResult": {
              "$ref": "#/definitions/memoryPersistentMemoryConfigResultRef",
              "description": "This represents the result of a previously applied Persistent Memory Configuration on a server.\n",
              "readOnly": true
            },
            "PersistentMemoryRegions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/memoryPersistentMemoryRegionRef"
              },
              "description": "This represents the collection of all the persistent memory regions configured on a server.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "memoryPersistentMemoryConfigurationList": {
      "properties": {
        "Count": {
          "description": "The number of memoryPersistentMemoryConfigurations matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of memoryPersistentMemoryConfigurations matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/memoryPersistentMemoryConfiguration"
          }
        }
      }
    },
    "memoryPersistentMemoryNamespaceRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "memoryPersistentMemoryNamespace": {
      "title": "Memory:Persistent Memory Namespace",
      "description": "This represents a Persistent Memory Namespace configured within the persistent memory region on a server.\n",
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "type": "object",
          "properties": {
            "Capacity": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the capacity in GB of a Persistent Memory Namespace. \n"
            },
            "HealthState": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the health state of a Persistent Memory Namespace. \n"
            },
            "LabelVersion": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the label version of a Persistent Memory Namespace. \n"
            },
            "Mode": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the mode of a Persistent Memory Namespace. \n"
            },
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the name of a Persistent Memory Namespace. \n"
            },
            "Uuid": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the uuid of a Persistent Memory Namespace.  \n"
            },
            "MemoryPersistentMemoryRegion": {
              "$ref": "#/definitions/memoryPersistentMemoryRegionRef",
              "description": "A collection of references to the [memory.PersistentMemoryRegion](mo://memory.PersistentMemoryRegion) Managed Object.\n\nWhen this managed object is deleted, the referenced [memory.PersistentMemoryRegion](mo://memory.PersistentMemoryRegion) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "memoryPersistentMemoryNamespaceList": {
      "properties": {
        "Count": {
          "description": "The number of memoryPersistentMemoryNamespaces matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of memoryPersistentMemoryNamespaces matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/memoryPersistentMemoryNamespace"
          }
        }
      }
    },
    "memoryPersistentMemoryNamespaceConfigResultRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "memoryPersistentMemoryNamespaceConfigResult": {
      "title": "Memory:Persistent Memory Namespace Config Result",
      "description": "This represents a result of a previously configured Persistent Memory Namespace on a server.\n",
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "type": "object",
          "properties": {
            "ConfigStatus": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the result of the previously configured Persistent Memory Namespace. \n"
            },
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the name of a Persistent Memory Namespace to be configured. \n"
            },
            "SocketId": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the Socket ID in which the Persistent Memory Namespace needed to be configured. \n"
            },
            "SocketMemoryId": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the Socket Memory ID in which the Persistent Memory Namespace needed to be configured.  \n"
            },
            "MemoryPersistentMemoryConfigResult": {
              "$ref": "#/definitions/memoryPersistentMemoryConfigResultRef",
              "description": "A collection of references to the [memory.PersistentMemoryConfigResult](mo://memory.PersistentMemoryConfigResult) Managed Object.\n\nWhen this managed object is deleted, the referenced [memory.PersistentMemoryConfigResult](mo://memory.PersistentMemoryConfigResult) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "memoryPersistentMemoryNamespaceConfigResultList": {
      "properties": {
        "Count": {
          "description": "The number of memoryPersistentMemoryNamespaceConfigResults matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of memoryPersistentMemoryNamespaceConfigResults matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/memoryPersistentMemoryNamespaceConfigResult"
          }
        }
      }
    },
    "memoryPersistentMemoryRegionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "memoryPersistentMemoryRegion": {
      "title": "Memory:Persistent Memory Region",
      "description": "This represents a Persistent Memory Region configured on the persistent memory modules on a server.\n",
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "type": "object",
          "properties": {
            "DimmLocaterIds": {
              "type": "string",
              "readOnly": true,
              "description": "This represents a set of DIMM locator IDs that are included in the Persistent Memory Region. \n"
            },
            "FreeCapacity": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the free capacity in GB of a Persistent Memory Region. \n"
            },
            "HealthState": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the health state of a Persistent Memory Region. \n"
            },
            "InterleavedSetId": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the ID of a Interleaved Set formed for a Persistent Memory Region. \n"
            },
            "PersistentMemoryType": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the persistent memory type of a Persistent Memory Region. \n"
            },
            "RegionId": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the ID of a Persistent Memory Region. \n"
            },
            "SocketId": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the Socket ID of a Persistent Memory Region. \n"
            },
            "SocketMemoryId": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the Socket Memory ID of a Persistent Memory Region. \n"
            },
            "TotalCapacity": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the total capacity in GB of a Persistent Memory Region.  \n"
            },
            "MemoryPersistentMemoryConfiguration": {
              "$ref": "#/definitions/memoryPersistentMemoryConfigurationRef",
              "description": "A collection of references to the [memory.PersistentMemoryConfiguration](mo://memory.PersistentMemoryConfiguration) Managed Object.\n\nWhen this managed object is deleted, the referenced [memory.PersistentMemoryConfiguration](mo://memory.PersistentMemoryConfiguration) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "PersistentMemoryNamespaces": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/memoryPersistentMemoryNamespaceRef"
              },
              "description": "This represents the collection of all the persistent memory namespaces configured within a persistent memory region.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "memoryPersistentMemoryRegionList": {
      "properties": {
        "Count": {
          "description": "The number of memoryPersistentMemoryRegions matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of memoryPersistentMemoryRegions matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/memoryPersistentMemoryRegion"
          }
        }
      }
    },
    "memoryPersistentMemoryUnitRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "memoryPersistentMemoryUnit": {
      "title": "Memory:Persistent Memory Unit",
      "description": "This represents a Persistent Memory Module on a server.\n",
      "allOf": [
        {
          "$ref": "#/definitions/memoryAbstractUnit"
        },
        {
          "type": "object",
          "properties": {
            "AppDirectCapacity": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the appdirect capacity in GB of a persistent memory module on a server. \n"
            },
            "CountStatus": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the count status of a persistent memory module on a server. \n"
            },
            "FirmwareVersion": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the firmware version of the firware running on a persistent memory module on a server. \n"
            },
            "FrozenStatus": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the frozen status of a persistent memory module on a server. \n"
            },
            "HealthState": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the health state of a persistent memory module on a server. \n"
            },
            "LockStatus": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the lock status of a persistent memory module on a server. \n"
            },
            "MemoryCapacity": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the memory capacity in GB of a persistent memory module on a server. \n"
            },
            "MemoryId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "This represents the ID of a persistent memory module on a server. \n"
            },
            "PersistentMemoryCapacity": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the persistent memory capacity in GB of a persistent memory module on a server. \n"
            },
            "ReservedCapacity": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the reserved capacity in GB of a persistent memory module on a server. \n"
            },
            "SecurityStatus": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the security status of a persistent memory module on a server. \n"
            },
            "SocketId": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the Socket ID of a persistent memory module on a server. \n"
            },
            "SocketMemoryId": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the Socket Memory ID of a persistent memory module on a server. \n"
            },
            "TotalCapacity": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the total capacity in GB of a persistent memory module on a server. \n"
            },
            "Uid": {
              "type": "string",
              "readOnly": true,
              "description": "This represents the uid of a persistent memory module on a server.  \n"
            },
            "MemoryArray": {
              "$ref": "#/definitions/memoryArrayRef",
              "description": "A collection of references to the [memory.Array](mo://memory.Array) Managed Object.\n\nWhen this managed object is deleted, the referenced [memory.Array](mo://memory.Array) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "memoryPersistentMemoryUnitList": {
      "properties": {
        "Count": {
          "description": "The number of memoryPersistentMemoryUnits matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of memoryPersistentMemoryUnits matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/memoryPersistentMemoryUnit"
          }
        }
      }
    },
    "memoryUnitRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "memoryUnit": {
      "title": "Memory:Unit",
      "description": "This represents a memory DIMM on a server.\n",
      "allOf": [
        {
          "$ref": "#/definitions/memoryAbstractUnit"
        },
        {
          "type": "object",
          "properties": {
            "MemoryId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "This represents the ID of a regular DIMM on a server.  \n"
            },
            "MemoryArray": {
              "$ref": "#/definitions/memoryArrayRef",
              "description": "A collection of references to the [memory.Array](mo://memory.Array) Managed Object.\n\nWhen this managed object is deleted, the referenced [memory.Array](mo://memory.Array) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "memoryUnitList": {
      "properties": {
        "Count": {
          "description": "The number of memoryUnits matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of memoryUnits matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/memoryUnit"
          }
        }
      }
    },
    "metaAccessPrivilegeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "metaAccessPrivilege": {
      "title": "Meta:Access Privilege",
      "description": "The required access privilege for a given Managed Object and CRUD operation.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Method": {
              "type": "string",
              "enum": [
                "Update",
                "Create",
                "Read",
                "Delete"
              ],
              "default": "Update",
              "readOnly": true,
              "description": "The type of CRUD operation (create, read, update, delete) for which an access privilege is required. \n"
            },
            "Privilege": {
              "type": "string",
              "readOnly": true,
              "description": "The name of the privilege which is required to invoke the specified CRUD method.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "metaDefinitionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "metaDefinition": {
      "title": "Meta:Definition",
      "description": "The meta-data of managed objects and complex types.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "AccessPrivileges": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/metaAccessPrivilege"
              },
              "readOnly": true,
              "description": "The list of access privileges that are required to perform CRUD operations on this managed object. If no access privileges are specified, the object is not accessible. \n"
            },
            "AncestorClasses": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "An array of parent metaclasses in the class inheritance hierarchy. The first element in the array is the parent class. The next element is the grand-parent, etc. The last element in the array is the mo.BaseMo class.  \n"
            },
            "IsConcrete": {
              "type": "boolean",
              "readOnly": true,
              "description": "Boolean flag to specify whether the meta class is a concrete class or not. \n"
            },
            "MetaType": {
              "type": "string",
              "enum": [
                "ManagedObject",
                "ComplexType"
              ],
              "default": "ManagedObject",
              "readOnly": true,
              "description": "Indicates whether the meta class is a complex type or managed object. \n"
            },
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "The fully-qualified class name of the Managed Object or complex type. For example, \"compute:Blade\" where the Managed Object is \"Blade\" and the package is 'compute'. \n"
            },
            "Namespace": {
              "type": "string",
              "readOnly": true,
              "description": "The namespace of the meta. \n"
            },
            "ParentClass": {
              "type": "string",
              "readOnly": true,
              "description": "The fully-qualified name of the parent metaclass in the class inheritance hierarchy. \n"
            },
            "PermissionSupported": {
              "type": "boolean",
              "readOnly": true,
              "description": "Boolean flag to specify whether instances of this class type can be specified in permissions for instance based access control. Permissions can be created for entire Intersight account or to a subset of resources (instance based access control). In the first release, permissions are supported for entire account or for a subset of organizations.\n \n"
            },
            "Properties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/metaPropDefinition"
              },
              "readOnly": true,
              "description": "Meta definition for the properties in the meta class and from all classes in the inheritance hierarchy. \n"
            },
            "RbacResource": {
              "type": "boolean",
              "readOnly": true,
              "description": "Boolean flag to specify whether instances of this class type can be assigned to resource groups that are part of an organization for access control. Inventoried physical/logical objects which needs access control should have rbacResource=yes. These objects are not part of any organization by default like device registrations and should be assigned to organizations for access control. Profiles, policies, workflow definitions which are created by specifying organization need not have this flag set.\n \n"
            },
            "Relationships": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/metaRelationshipDefinition"
              },
              "readOnly": true,
              "description": "Meta definition for the relationship in the meta class. \n"
            },
            "RestPath": {
              "type": "string",
              "readOnly": true,
              "description": "Restful URL path for the meta. \n"
            },
            "Version": {
              "type": "string",
              "readOnly": true,
              "description": "The version of the service that defines the meta-data.  \n"
            }
          }
        }
      ]
    },
    "metaDefinitionList": {
      "properties": {
        "Count": {
          "description": "The number of metaDefinitions matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of metaDefinitions matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/metaDefinition"
          }
        }
      }
    },
    "metaPropDefinitionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "metaPropDefinition": {
      "title": "Meta:Prop Definition",
      "description": "Definitions for the properties in a meta.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "ApiAccess": {
              "type": "string",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "default": "NoAccess",
              "readOnly": true,
              "description": "API access control for the property. Examples are NoAccess, ReadOnly, CreateOnly etc. \n"
            },
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "The name of the property. \n"
            },
            "OpSecurity": {
              "type": "string",
              "enum": [
                "ClearText",
                "Encrypted",
                "Pbkdf2",
                "Bcrypt"
              ],
              "default": "ClearText",
              "readOnly": true,
              "description": "The data-at-rest security protection applied to this property when a Managed Object is persisted.\n\nFor example, Encrypted or Cleartext.\n \n"
            },
            "SearchWeight": {
              "type": "number",
              "format": "float",
              "readOnly": true,
              "description": "Enables the property to be searchable from global search. A value of 0 means this property is not globally searchable.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "metaRelationshipDefinitionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "metaRelationshipDefinition": {
      "title": "Meta:Relationship Definition",
      "description": "Definitions for the relationship in a meta.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "ApiAccess": {
              "type": "string",
              "enum": [
                "NoAccess",
                "ReadOnly",
                "CreateOnly",
                "ReadWrite",
                "WriteOnly",
                "ReadOnCreate"
              ],
              "default": "NoAccess",
              "readOnly": true,
              "description": "API access definition for this relationship. \n"
            },
            "Collection": {
              "type": "boolean",
              "readOnly": true,
              "description": "Specifies whether the relationship is a collection. \n"
            },
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "The name of the relationship. \n"
            },
            "Type": {
              "type": "string",
              "readOnly": true,
              "description": "Fully qualified type of the foreign managed object.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "moBaseComplexTypeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "moBaseComplexType": {
      "title": "Mo:Base Complex Type",
      "description": "BaseComplexType is a base abstract class for all complex types. All complex types inherit from this base type.\n",
      "allOf": [
        {
          "type": "object",
          "properties": {
            "ObjectType": {
              "type": "string",
              "description": "The concrete type of this complex type.\n\nThe ObjectType property must be set explicitly by API clients when the type is ambiguous. In all other cases, the \nObjectType is optional. \nThe type is ambiguous when a managed object contains an array of nested documents, and the documents in the array\nare heterogeneous, i.e. the array can contain nested documents of different types.\n  \n"
            }
          }
        }
      ]
    },
    "moBaseMoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "moBaseMo": {
      "title": "Mo:Base Mo",
      "description": "The base abstract class for all Cisco Intersight managed objects.\n",
      "allOf": [
        {
          "type": "object",
          "properties": {
            "AccountMoid": {
              "type": "string",
              "readOnly": true,
              "description": "The Account ID for this managed object. \n"
            },
            "CreateTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "The time when this managed object was created. \n"
            },
            "DomainGroupMoid": {
              "type": "string",
              "readOnly": true,
              "description": "The DomainGroup ID for this managed object. \n"
            },
            "ModTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "The time when this managed object was last modified. \n"
            },
            "Moid": {
              "type": "string",
              "x-createOnly": true,
              "description": "The unique identifier of this Managed Object instance.  \n"
            },
            "ObjectType": {
              "type": "string",
              "readOnly": true,
              "description": "The fully-qualified type of this managed object, i.e. the class name.\nThis property is optional. The ObjectType is implied from the URL path.\nIf specified, the value of objectType must match the class name specified in the URL path.\n \n"
            },
            "Owners": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "The array of owners which represent effective ownership of this object.  \n"
            },
            "SharedScope": {
              "type": "string",
              "readOnly": true,
              "description": "Intersight provides pre-built workflows, tasks and policies to end users through global catalogs.\nObjects that are made available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally available to all end users or restricted to end users based on their license entitlement. Users can use this property to differentiate the scope (global or a specific license tier) to which a shared MO belongs. \n"
            },
            "Tags": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/moTag"
              },
              "description": "The array of tags, which allow to add key, value meta-data to managed objects.  \n"
            },
            "VersionContext": {
              "$ref": "#/definitions/moVersionContext",
              "readOnly": true,
              "description": "The versioning info for this managed object.  \n"
            },
            "Ancestors": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/moBaseMoRef"
              },
              "description": "The array containing the MO references of the ancestors in the object containment hierarchy.\n",
              "readOnly": true
            },
            "Parent": {
              "$ref": "#/definitions/moBaseMoRef",
              "description": "The direct ancestor of this managed object in the containment hierarchy.\n",
              "readOnly": true
            },
            "PermissionResources": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/moBaseMoRef"
              },
              "description": "A slice of all permission resources (organizations) associated with this object. Permission ties resources and its associated roles/privileges.\nThese resources which can be specified in a permission is PermissionResource. Currently only organizations can be specified in permission.\nAll logical and physical resources part of an organization will have organization in PermissionResources field.\nIf DeviceRegistration contains another DeviceRegistration and if parent is in org1 and child is part of org2, then child objects will\nhave PermissionResources as org1 and org2. Parent Objects will have PermissionResources as org1.\nAll profiles/policies created with in an organization will have the organization as PermissionResources.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "moInterestRegistrationRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "moMoRefRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "moMoRef": {
      "title": "Mo:Mo Ref",
      "description": "A reference to a REST resource, uniquely identified by object type and Moid.\n",
      "allOf": [
        {
          "type": "object",
          "properties": {
            "Moid": {
              "type": "string",
              "readOnly": true,
              "description": "The Moid of the referenced REST resource. \n"
            },
            "ObjectType": {
              "type": "string",
              "readOnly": true,
              "description": "The Object Type of the referenced REST resource. \n"
            },
            "Selector": {
              "type": "string",
              "readOnly": true,
              "description": "An OData $filter expression which describes the REST resource to be referenced. This field may\nbe set instead of 'moid' by clients. If 'moid' is set this field is ignored. If 'selector'\nis set and 'moid' is empty/absent from the request, Intersight will determine the Moid of the\nresource matching the filter expression and populate it in the MoRef that is part of the object\ninstance being inserted/updated to fulfill the REST request. An error is returned if the filter\nmatches zero or more than one REST resource.\nAn example filter string is: Serial eq '3AA8B7T11'.\n  \n"
            }
          }
        }
      ]
    },
    "moTagRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "moTag": {
      "title": "Mo:Tag",
      "description": "An arbitrary key and value pair that can be used to tag REST resources and organize managed objects by\nassigning meta-data tags to any object.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Key": {
              "type": "string",
              "description": "The string representation of a tag key. \n"
            },
            "Value": {
              "type": "string",
              "description": "The string representation of a tag value.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "moVersionContextRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "moVersionContext": {
      "title": "Mo:Version Context",
      "description": "VersionContext contains the versioning info for an object.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "InterestedMos": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/moMoRef"
              },
              "readOnly": true,
              "description": "A collection of objects that have reference to this versioned object.\nThe lifecycle of the versioned object is based on the interestedMos list;\nthe versioned object will be purged when interestedMos is empty.\n \n"
            },
            "RefMo": {
              "$ref": "#/definitions/moMoRef",
              "readOnly": true,
              "description": "A reference to the original Managed Object. \n"
            },
            "Timestamp": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "The time this versioned Managed Object was created. \n"
            },
            "Version": {
              "type": "string",
              "readOnly": true,
              "description": "The version of the Managed Object, e.g. an incrementing number or a hash id. \n"
            },
            "VersionType": {
              "type": "string",
              "enum": [
                "Modified",
                "Configured",
                "Deployed"
              ],
              "default": "Modified",
              "readOnly": true,
              "description": "Specifies type of version. Currently the only supported value is \"Configured\"\nthat is used to keep track of snapshots of policies and profiles that are intended\nto be configured to target endpoints.\n  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "networkElementRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "networkElement": {
      "title": "Network:Element",
      "description": "Fabric Interconnect of a UCS.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "AdminInbandInterfaceState": {
              "type": "string",
              "readOnly": true
            },
            "FaultSummary": {
              "type": "integer",
              "format": "int64"
            },
            "InbandIpAddress": {
              "type": "string",
              "readOnly": true,
              "description": "The Inband IP address of the network Element. \n"
            },
            "InbandIpGateway": {
              "type": "string",
              "readOnly": true,
              "description": "The Inband IP Gateway of the network Element. \n"
            },
            "InbandIpMask": {
              "type": "string",
              "readOnly": true
            },
            "InbandVlan": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "OutOfBandIpAddress": {
              "type": "string",
              "readOnly": true
            },
            "OutOfBandIpGateway": {
              "type": "string",
              "readOnly": true
            },
            "OutOfBandIpMask": {
              "type": "string",
              "readOnly": true
            },
            "OutOfBandMac": {
              "type": "string",
              "readOnly": true
            },
            "SwitchId": {
              "type": "string",
              "readOnly": true,
              "description": "The Switch Id of the network Element.  \n"
            },
            "Cards": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/equipmentSwitchCardRef"
              },
              "readOnly": true
            },
            "Fanmodules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/equipmentFanModuleRef"
              },
              "readOnly": true
            },
            "ManagementContoller": {
              "$ref": "#/definitions/managementControllerRef",
              "readOnly": true
            },
            "ManagementEntity": {
              "$ref": "#/definitions/managementEntityRef",
              "readOnly": true
            },
            "Psus": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/equipmentPsuRef"
              },
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            },
            "TopSystem": {
              "$ref": "#/definitions/topSystemRef",
              "description": "A collection of references to the [top.System](mo://top.System) Managed Object.\n\nWhen this managed object is deleted, the referenced [top.System](mo://top.System) MO unsets its reference to this deleted MO.\n"
            },
            "UcsmRunningFirmware": {
              "$ref": "#/definitions/firmwareRunningFirmwareRef",
              "description": "A collection of references to the [firmware.RunningFirmware](mo://firmware.RunningFirmware) Managed Object.\n\nWhen this managed object is deleted, the referenced [firmware.RunningFirmware](mo://firmware.RunningFirmware) MO unsets its reference to this deleted MO.\n"
            }
          }
        }
      ]
    },
    "networkElementList": {
      "properties": {
        "Count": {
          "description": "The number of networkElements matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of networkElements matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/networkElement"
          }
        }
      }
    },
    "networkElementSummaryRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "networkElementSummary": {
      "title": "Network:Element Summary",
      "description": "View MO which aggregates information pertaining to a network element from mutiple MOs.\n",
      "allOf": [
        {
          "$ref": "#/definitions/viewsView"
        },
        {
          "type": "object",
          "properties": {
            "AdminInbandInterfaceState": {
              "type": "string",
              "readOnly": true
            },
            "DeviceMoId": {
              "type": "string",
              "readOnly": true
            },
            "Dn": {
              "type": "string",
              "readOnly": true,
              "description": "The Distinguished Name unambiguously identifies an object in the system. \n"
            },
            "FaultSummary": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "Firmware": {
              "type": "string",
              "readOnly": true,
              "description": "Running firmware information. \n"
            },
            "InbandIpAddress": {
              "type": "string",
              "readOnly": true,
              "description": "The Inband IP address of the network Element. \n"
            },
            "InbandIpGateway": {
              "type": "string",
              "readOnly": true,
              "description": "The Inband IP Gateway of the network Element. \n"
            },
            "InbandIpMask": {
              "type": "string",
              "readOnly": true
            },
            "InbandVlan": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "Ipv4Address": {
              "type": "string",
              "readOnly": true,
              "description": "IP version 4 address is saved in this property. \n"
            },
            "Model": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the model of the given component. \n"
            },
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the ElementSummary object is saved in this property. \n"
            },
            "NumEtherPorts": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Total number of Ethernet ports. \n"
            },
            "NumEtherPortsConfigured": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Total number of configured Ethernet ports. \n"
            },
            "NumEtherPortsLinkUp": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Total number of Ethernet ports which are UP. \n"
            },
            "NumExpansionModules": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Total number of expansion modules. \n"
            },
            "NumFcPorts": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Total number of FC ports. \n"
            },
            "NumFcPortsConfigured": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Total number of configured FC ports. \n"
            },
            "NumFcPortsLinkUp": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Total number of FC ports which are UP. \n"
            },
            "OutOfBandIpAddress": {
              "type": "string",
              "readOnly": true
            },
            "OutOfBandIpGateway": {
              "type": "string",
              "readOnly": true
            },
            "OutOfBandIpMask": {
              "type": "string",
              "readOnly": true
            },
            "OutOfBandMac": {
              "type": "string",
              "readOnly": true
            },
            "Revision": {
              "type": "string",
              "readOnly": true
            },
            "Rn": {
              "type": "string",
              "readOnly": true,
              "description": "The Relative Name uniquely identifies an object within a given context. \n"
            },
            "Serial": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the serial of the given component. \n"
            },
            "SourceObjectType": {
              "type": "string",
              "readOnly": true,
              "description": "The source object type of this view MO. \n"
            },
            "SwitchId": {
              "type": "string",
              "readOnly": true,
              "description": "The Switch Id of the network Element. \n"
            },
            "Vendor": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the vendor of the given component. \n"
            },
            "Version": {
              "type": "string",
              "readOnly": true,
              "description": "Version holds the firmware version related information.  \n"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "networkElementSummaryList": {
      "properties": {
        "Count": {
          "description": "The number of networkElementSummaries matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of networkElementSummaries matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/networkElementSummary"
          }
        }
      }
    },
    "networkconfigDeployTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "networkconfigPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "networkconfigPolicy": {
      "title": "Network Connectivity",
      "description": "Enable or disable Dynamic DNS, add or update DNS settings for IPv4 and IPv6 on Cisco IMC.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "AlternateIpv4dnsServer": {
              "type": "string",
              "description": "IP address of the secondary DNS server. \n"
            },
            "AlternateIpv6dnsServer": {
              "type": "string",
              "description": "IP address of the secondary DNS server. \n"
            },
            "DynamicDnsDomain": {
              "type": "string",
              "description": "The domain name appended to a hostname for a Dynamic DNS (DDNS) update. If left blank, only a hostname is sent to the DDNS update request. \n"
            },
            "EnableDynamicDns": {
              "type": "boolean",
              "description": "If enabled, updates the resource records to the DNS from Cisco IMC. \n",
              "x-nullable": true
            },
            "EnableIpv4dnsFromDhcp": {
              "type": "boolean",
              "description": "If enabled, Cisco IMC retrieves the DNS server addresses from DHCP. Use DHCP field must be enabled for IPv4 in Cisco IMC to enable it. \n",
              "x-nullable": true
            },
            "EnableIpv6": {
              "type": "boolean",
              "description": "If enabled, allows to configure IPv6 properties. \n",
              "x-nullable": true
            },
            "EnableIpv6dnsFromDhcp": {
              "type": "boolean",
              "description": "If enabled, Cisco IMC retrieves the DNS server addresses from DHCP. Use DHCP field must be enabled for IPv6 in Cisco IMC to enable it. \n",
              "x-nullable": true
            },
            "PreferredIpv4dnsServer": {
              "type": "string",
              "description": "IP address of the primary DNS server. \n"
            },
            "PreferredIpv6dnsServer": {
              "type": "string",
              "description": "IP address of the primary DNS server.  \n"
            },
            "ApplianceAccount": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "The appliance account to which the appliance Network Connectivity policy belongs.\n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "The organization to which the Network Connectivity policy belongs.\n",
              "x-createOnly": true
            },
            "Profiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/policyAbstractConfigProfileRef"
              },
              "description": "Relationship to the profile object.\n"
            }
          }
        }
      ]
    },
    "networkconfigPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of networkconfigPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of networkconfigPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/networkconfigPolicy"
          }
        }
      }
    },
    "networkconfigValidationTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niaapiApicCcoPostRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niaapiApicCcoPost": {
      "title": "Niaapi:Apic Cco Post",
      "description": "The post reporting a new release is available for APIC.\n",
      "allOf": [
        {
          "$ref": "#/definitions/niaapiNewReleasePost"
        },
        {
          "type": "object"
        }
      ]
    },
    "niaapiApicCcoPostList": {
      "properties": {
        "Count": {
          "description": "The number of niaapiApicCcoPosts matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of niaapiApicCcoPosts matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/niaapiApicCcoPost"
          }
        }
      }
    },
    "niaapiApicFieldNoticeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niaapiApicFieldNotice": {
      "title": "Niaapi:Apic Field Notice",
      "description": "The field notice reporting bug and related software or hardware for APIC.\n",
      "allOf": [
        {
          "$ref": "#/definitions/niaapiFieldNotice"
        },
        {
          "type": "object"
        }
      ]
    },
    "niaapiApicFieldNoticeList": {
      "properties": {
        "Count": {
          "description": "The number of niaapiApicFieldNotices matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of niaapiApicFieldNotices matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/niaapiApicFieldNotice"
          }
        }
      }
    },
    "niaapiApicHweolRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niaapiApicHweol": {
      "title": "Niaapi:Apic Hweol",
      "description": "The hardware end of life notice for APIC.\n",
      "allOf": [
        {
          "$ref": "#/definitions/niaapiHardwareEol"
        },
        {
          "type": "object"
        }
      ]
    },
    "niaapiApicHweolList": {
      "properties": {
        "Count": {
          "description": "The number of niaapiApicHweols matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of niaapiApicHweols matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/niaapiApicHweol"
          }
        }
      }
    },
    "niaapiApicLatestMaintainedReleaseRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niaapiApicLatestMaintainedRelease": {
      "title": "Niaapi:Apic Latest Maintained Release",
      "description": "This contains the latest maintained release information for each release on APIC.\n",
      "allOf": [
        {
          "$ref": "#/definitions/niaapiMaintainedRelease"
        },
        {
          "type": "object"
        }
      ]
    },
    "niaapiApicLatestMaintainedReleaseList": {
      "properties": {
        "Count": {
          "description": "The number of niaapiApicLatestMaintainedReleases matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of niaapiApicLatestMaintainedReleases matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/niaapiApicLatestMaintainedRelease"
          }
        }
      }
    },
    "niaapiApicReleaseRecommendRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niaapiApicReleaseRecommend": {
      "title": "Niaapi:Apic Release Recommend",
      "description": "The recommend version information for each release on APIC.\n",
      "allOf": [
        {
          "$ref": "#/definitions/niaapiReleaseRecommend"
        },
        {
          "type": "object"
        }
      ]
    },
    "niaapiApicReleaseRecommendList": {
      "properties": {
        "Count": {
          "description": "The number of niaapiApicReleaseRecommends matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of niaapiApicReleaseRecommends matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/niaapiApicReleaseRecommend"
          }
        }
      }
    },
    "niaapiApicSweolRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niaapiApicSweol": {
      "title": "Niaapi:Apic Sweol",
      "description": "The software end of life notice for APIC.\n",
      "allOf": [
        {
          "$ref": "#/definitions/niaapiSoftwareEol"
        },
        {
          "type": "object"
        }
      ]
    },
    "niaapiApicSweolList": {
      "properties": {
        "Count": {
          "description": "The number of niaapiApicSweols matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of niaapiApicSweols matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/niaapiApicSweol"
          }
        }
      }
    },
    "niaapiDcnmCcoPostRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niaapiDcnmCcoPost": {
      "title": "Niaapi:Dcnm Cco Post",
      "description": "The post reporting a new release is available for DCNM.\n",
      "allOf": [
        {
          "$ref": "#/definitions/niaapiNewReleasePost"
        },
        {
          "type": "object"
        }
      ]
    },
    "niaapiDcnmCcoPostList": {
      "properties": {
        "Count": {
          "description": "The number of niaapiDcnmCcoPosts matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of niaapiDcnmCcoPosts matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/niaapiDcnmCcoPost"
          }
        }
      }
    },
    "niaapiDcnmFieldNoticeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niaapiDcnmFieldNotice": {
      "title": "Niaapi:Dcnm Field Notice",
      "description": "The field notice reporting bug and related software or hardware for DCNM.\n",
      "allOf": [
        {
          "$ref": "#/definitions/niaapiFieldNotice"
        },
        {
          "type": "object"
        }
      ]
    },
    "niaapiDcnmFieldNoticeList": {
      "properties": {
        "Count": {
          "description": "The number of niaapiDcnmFieldNotices matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of niaapiDcnmFieldNotices matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/niaapiDcnmFieldNotice"
          }
        }
      }
    },
    "niaapiDcnmHweolRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niaapiDcnmHweol": {
      "title": "Niaapi:Dcnm Hweol",
      "description": "The hardware end of life notice for DCNM.\n",
      "allOf": [
        {
          "$ref": "#/definitions/niaapiHardwareEol"
        },
        {
          "type": "object"
        }
      ]
    },
    "niaapiDcnmHweolList": {
      "properties": {
        "Count": {
          "description": "The number of niaapiDcnmHweols matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of niaapiDcnmHweols matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/niaapiDcnmHweol"
          }
        }
      }
    },
    "niaapiDcnmLatestMaintainedReleaseRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niaapiDcnmLatestMaintainedRelease": {
      "title": "Niaapi:Dcnm Latest Maintained Release",
      "description": "This contains the latest maintained release information for each release on DCNM.\n",
      "allOf": [
        {
          "$ref": "#/definitions/niaapiMaintainedRelease"
        },
        {
          "type": "object"
        }
      ]
    },
    "niaapiDcnmLatestMaintainedReleaseList": {
      "properties": {
        "Count": {
          "description": "The number of niaapiDcnmLatestMaintainedReleases matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of niaapiDcnmLatestMaintainedReleases matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/niaapiDcnmLatestMaintainedRelease"
          }
        }
      }
    },
    "niaapiDcnmReleaseRecommendRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niaapiDcnmReleaseRecommend": {
      "title": "Niaapi:Dcnm Release Recommend",
      "description": "The recommend version information for each release on DCNM.\n",
      "allOf": [
        {
          "$ref": "#/definitions/niaapiReleaseRecommend"
        },
        {
          "type": "object"
        }
      ]
    },
    "niaapiDcnmReleaseRecommendList": {
      "properties": {
        "Count": {
          "description": "The number of niaapiDcnmReleaseRecommends matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of niaapiDcnmReleaseRecommends matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/niaapiDcnmReleaseRecommend"
          }
        }
      }
    },
    "niaapiDcnmSweolRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niaapiDcnmSweol": {
      "title": "Niaapi:Dcnm Sweol",
      "description": "The software end of life notice for DCNM.\n",
      "allOf": [
        {
          "$ref": "#/definitions/niaapiSoftwareEol"
        },
        {
          "type": "object"
        }
      ]
    },
    "niaapiDcnmSweolList": {
      "properties": {
        "Count": {
          "description": "The number of niaapiDcnmSweols matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of niaapiDcnmSweols matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/niaapiDcnmSweol"
          }
        }
      }
    },
    "niaapiDetailRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niaapiDetail": {
      "title": "Niaapi:Detail",
      "description": "The content inside the metadata package with filename and check sum for this file.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Chksum": {
              "type": "string",
              "description": "Checksum of this part of Content. \n"
            },
            "Filename": {
              "type": "string",
              "description": "The file name within this Metadata file. \n"
            },
            "Name": {
              "type": "string",
              "description": "The name of this Content.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "niaapiFieldNoticeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niaapiFieldNotice": {
      "title": "Niaapi:Field Notice",
      "description": "This contains the new version release notice.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Bugid": {
              "type": "string",
              "description": "Bug Id associated with this notice. \n"
            },
            "FieldNoticeDesc": {
              "type": "string",
              "description": "Field notice Description. \n"
            },
            "FieldNoticeId": {
              "type": "string",
              "description": "Fieldnotice Id of this notice. \n"
            },
            "FieldNoticeUrl": {
              "type": "string",
              "description": "Field notice URL link to the notice webpage. \n"
            },
            "Headline": {
              "type": "string",
              "description": "The headline of this field notice. \n"
            },
            "Hwpid": {
              "type": "string",
              "description": "Hardware PID for affected models. \n"
            },
            "RevisionInfo": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/niaapiRevisionInfo"
              },
              "description": "Revision detail infomation . \n"
            },
            "SwRelease": {
              "type": "string",
              "description": "Software Release number for affected versions. \n"
            },
            "WorkaroundUrl": {
              "type": "string",
              "description": "URL of workaround of this notice.  \n"
            }
          }
        }
      ]
    },
    "niaapiFileDownloaderRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niaapiFileDownloader": {
      "title": "Niaapi:File Downloader",
      "description": "Provide a presigned url to download the metadata file from server.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "FileName": {
              "type": "string",
              "description": "Filename of this Metadata package file, folder will be handled by api. \n"
            },
            "PresignedUrl": {
              "type": "string",
              "description": "The presigned URL from server to download this file.  \n"
            }
          }
        }
      ]
    },
    "niaapiFileDownloaderList": {
      "properties": {
        "Count": {
          "description": "The number of niaapiFileDownloaders matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of niaapiFileDownloaders matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/niaapiFileDownloader"
          }
        }
      }
    },
    "niaapiHardwareEolRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niaapiHardwareEol": {
      "title": "Niaapi:Hardware Eol",
      "description": "This contains the end of life notice of hardware.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "AffectedPids": {
              "type": "string",
              "description": "String contains the PID of hardwares affected by this notice, seperated by comma. \n"
            },
            "AnnouncementDate": {
              "type": "string",
              "format": "date-time",
              "description": "When this notice is announced. \n"
            },
            "AnnouncementDateEpoch": {
              "type": "integer",
              "format": "int64",
              "description": "Epoch time of Announcement Date. \n"
            },
            "BulletinNo": {
              "type": "string",
              "description": "The bulletinno of this hardware end of life notice. \n"
            },
            "Description": {
              "type": "string",
              "description": "The description of this hardware end of life notice. \n"
            },
            "EndofNewServiceAttachmentDate": {
              "type": "string",
              "format": "date-time",
              "description": "Date time of end of new services attachment  . \n"
            },
            "EndofNewServiceAttachmentDateEpoch": {
              "type": "integer",
              "format": "int64",
              "description": "Epoch time of New service attachment Date . \n"
            },
            "EndofRoutineFailureAnalysisDate": {
              "type": "string",
              "format": "date-time",
              "description": "Date time of end of routinefailure analysis. \n"
            },
            "EndofRoutineFailureAnalysisDateEpoch": {
              "type": "integer",
              "format": "int64",
              "description": "Epoch time of End of Routine Failure Analysis Date. \n"
            },
            "EndofSaleDate": {
              "type": "string",
              "format": "date-time",
              "description": "When this hardware will end sale. \n"
            },
            "EndofSaleDateEpoch": {
              "type": "integer",
              "format": "int64",
              "description": "Epoch time of End of Sale Date. \n"
            },
            "EndofSecuritySupport": {
              "type": "string",
              "format": "date-time",
              "description": "Date time of end of security support . \n"
            },
            "EndofSecuritySupportEpoch": {
              "type": "integer",
              "format": "int64",
              "description": "Epoch time of End of Security Support Date . \n"
            },
            "EndofServiceContractRenewalDate": {
              "type": "string",
              "format": "date-time",
              "description": "Date time of end of service contract renew . \n"
            },
            "EndofServiceContractRenewalDateEpoch": {
              "type": "integer",
              "format": "int64",
              "description": "Epoch time of End of Renewal service contract. \n"
            },
            "EndofSwMaintenanceDate": {
              "type": "string",
              "format": "date-time",
              "description": "The date of end of maintainance. \n"
            },
            "EndofSwMaintenanceDateEpoch": {
              "type": "integer",
              "format": "int64",
              "description": "Epoch time of End of maintenance Date. \n"
            },
            "HardwareEolUrl": {
              "type": "string",
              "description": "Hardware end of sale URL link to the notice webpage. \n"
            },
            "Headline": {
              "type": "string",
              "description": "The title of this hardware end of life notice. \n"
            },
            "LastDateofSupport": {
              "type": "string",
              "format": "date-time",
              "description": "Date time of end of support . \n"
            },
            "LastDateofSupportEpoch": {
              "type": "integer",
              "format": "int64",
              "description": "Epoch time of last date of support . \n"
            },
            "LastShipDate": {
              "type": "string",
              "format": "date-time",
              "description": "Date time of Lastship Date. \n"
            },
            "LastShipDateEpoch": {
              "type": "integer",
              "format": "int64",
              "description": "Epoch time of last ship Date. \n"
            },
            "MigrationUrl": {
              "type": "string",
              "description": "The URL of this migration notice.  \n"
            }
          }
        }
      ]
    },
    "niaapiMaintainedReleaseRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niaapiMaintainedRelease": {
      "title": "Niaapi:Maintained Release",
      "description": "This contains the latest maintained release based on current running software release.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "MaintainedRelease": {
              "type": "string",
              "description": "Lastest maintained release. \n"
            },
            "SoftwareRelease": {
              "type": "string",
              "description": "Software release version string. \n"
            },
            "VersionTag": {
              "type": "string",
              "description": "Long lived version or short lived version.  \n"
            }
          }
        }
      ]
    },
    "niaapiNewReleaseDetailRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niaapiNewReleaseDetail": {
      "title": "Niaapi:New Release Detail",
      "description": "The detail content of of this post.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "type": "string",
              "description": "Description of this new verison release post. \n"
            },
            "Link": {
              "type": "string",
              "description": "Link of downloading the release file. \n"
            },
            "ReleaseNoteLink": {
              "type": "string",
              "description": "The link used to provide a gateway for customer to review the release note. \n"
            },
            "ReleaseNoteLinkTitle": {
              "type": "string",
              "description": "The link title used to provide a gateway for customer to review the release note. \n"
            },
            "SoftwareDownloadLink": {
              "type": "string",
              "description": "The link used to provide a gateway for customer to download the release. \n"
            },
            "SoftwareDownloadLinkTitle": {
              "type": "string",
              "description": "The link title used to provide a gateway for customer to download the release. \n"
            },
            "Title": {
              "type": "string",
              "description": "Title of the new verison release post. \n"
            },
            "Version": {
              "type": "string",
              "description": "Version number Associate with this Post.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "niaapiNewReleasePostRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niaapiNewReleasePost": {
      "title": "Niaapi:New Release Post",
      "description": "This contains the new release notice.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "PostDate": {
              "type": "string",
              "format": "date-time",
              "description": "The date when this new release notice is posted. \n"
            },
            "PostDetail": {
              "$ref": "#/definitions/niaapiNewReleaseDetail",
              "description": "Detail of this post including the content and the date it was posted. \n"
            },
            "PostType": {
              "type": "string",
              "description": "The document type of this post. \n"
            },
            "Postid": {
              "type": "string",
              "description": "Identificator of this inbox post. \n"
            },
            "Revision": {
              "type": "string",
              "description": "Revision number of this notice.  \n"
            }
          }
        }
      ]
    },
    "niaapiNiaMetadataRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niaapiNiaMetadata": {
      "title": "Niaapi:Nia Metadata",
      "description": "Contains the latest Metadata available for download from server.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Content": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/niaapiDetail"
              },
              "description": "The detail of child file in this package. \n"
            },
            "Date": {
              "type": "string",
              "format": "date-time",
              "description": "The date when this package is generated. \n"
            },
            "MetadataChksum": {
              "type": "string",
              "description": "Chksum used to check the integrity of the Metadata file downloaded. \n"
            },
            "MetadataFilename": {
              "type": "string",
              "description": "The Filename of this Metadata package. \n"
            },
            "Version": {
              "type": "integer",
              "format": "int64",
              "description": "The version number of the Metadata package.  \n"
            }
          }
        }
      ]
    },
    "niaapiNiaMetadataList": {
      "properties": {
        "Count": {
          "description": "The number of niaapiNiaMetadata matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of niaapiNiaMetadata matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/niaapiNiaMetadata"
          }
        }
      }
    },
    "niaapiReleaseRecommendRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niaapiReleaseRecommend": {
      "title": "Niaapi:Release Recommend",
      "description": "This contains the recommend version based on the hardware.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Cll": {
              "type": "string",
              "description": "Current long-lived release. \n"
            },
            "Crr": {
              "type": "string",
              "description": "Customer recommended releases. \n"
            },
            "Pid": {
              "type": "string",
              "description": "Hardware model identificator. \n"
            },
            "Ull": {
              "type": "string",
              "description": "Upcoming long-lived release.  \n"
            }
          }
        }
      ]
    },
    "niaapiRevisionInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niaapiRevisionInfo": {
      "title": "Niaapi:Revision Info",
      "description": "The Revision info including date comment and revision number.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "DatePublished": {
              "type": "string",
              "format": "date-time",
              "description": "The date the revision is made. \n"
            },
            "RevisionComment": {
              "type": "string",
              "description": "The changes made in this revision. \n"
            },
            "RevisionNo": {
              "type": "string",
              "description": "The Revision No. of this revision.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "niaapiSoftwareEolRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niaapiSoftwareEol": {
      "title": "Niaapi:Software Eol",
      "description": "This contains the end of life notice of software release.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "AffectedVersions": {
              "type": "string",
              "description": "String contains the Release versions affected by this notice, seperated by comma. \n"
            },
            "AnnouncementDate": {
              "type": "string",
              "format": "date-time",
              "description": "Date time of this notice Announced. \n"
            },
            "AnnouncementDateEpoch": {
              "type": "integer",
              "format": "int64",
              "description": "Epoch time of this notice Announced. \n"
            },
            "BulletinNo": {
              "type": "string",
              "description": "The bulletinno of this software release end of life notice. \n"
            },
            "Description": {
              "type": "string",
              "description": "The description of this software release end of life notice. \n"
            },
            "EndofNewServiceAttachmentDate": {
              "type": "string",
              "format": "date-time",
              "description": "Date time of End of New service attachment . \n"
            },
            "EndofNewServiceAttachmentDateEpoch": {
              "type": "integer",
              "format": "int64",
              "description": "Epoch time of End of New service attachment . \n"
            },
            "EndofServiceContractRenewalDate": {
              "type": "string",
              "format": "date-time",
              "description": "Date time of End of Renewal of service contract . \n"
            },
            "EndofServiceContractRenewalDateEpoch": {
              "type": "integer",
              "format": "int64",
              "description": "Epoch time of End of Renewal of service contract . \n"
            },
            "EndofSwMaintenanceDate": {
              "type": "string",
              "format": "date-time",
              "description": "Date time of End of Maintenance. \n"
            },
            "EndofSwMaintenanceDateEpoch": {
              "type": "integer",
              "format": "int64",
              "description": "Epoch time of End of Maintenance. \n"
            },
            "Headline": {
              "type": "string",
              "description": "The title of this software release end of life notice. \n"
            },
            "LastDateofSupport": {
              "type": "string",
              "format": "date-time",
              "description": "Date time of Last day of Support . \n"
            },
            "LastDateofSupportEpoch": {
              "type": "integer",
              "format": "int64",
              "description": "Epoch time of Last day of Support . \n"
            },
            "LastShipDate": {
              "type": "string",
              "format": "date-time",
              "description": "Date time of Lastship Date. \n"
            },
            "LastShipDateEpoch": {
              "type": "integer",
              "format": "int64",
              "description": "Epoch time of Lastship Date. \n"
            },
            "MigrationUrl": {
              "type": "string",
              "description": "The URL of this migration notice. \n"
            },
            "SoftwareEolUrl": {
              "type": "string",
              "description": "Software end of life notice URL link to the notice webpage.  \n"
            }
          }
        }
      ]
    },
    "niaapiSoftwareRegexRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niaapiSoftwareRegex": {
      "title": "Niaapi:Software Regex",
      "description": "The regular expression to parse the software version strings.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Regex": {
              "type": "string",
              "description": "Regular Expression pattern used to reconginze the version string. \n"
            },
            "SoftwareVersion": {
              "type": "string",
              "description": "Software release. A set of Software releases seperated by comma which can be recongized by according Regex pattern.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "niaapiVersionRegexRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niaapiVersionRegex": {
      "title": "Niaapi:Version Regex",
      "description": "The regular expression pattern to recongnize the version string.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Apic": {
              "$ref": "#/definitions/niaapiVersionRegexPlatform",
              "description": "Version Regex mapping for APIC platform. \n"
            },
            "Dcnm": {
              "$ref": "#/definitions/niaapiVersionRegexPlatform",
              "description": "Version Regex mapping for DCNM platform. \n"
            },
            "Version": {
              "type": "string",
              "description": "Version number for the Version Regex data, also used as identity.  \n"
            }
          }
        }
      ]
    },
    "niaapiVersionRegexList": {
      "properties": {
        "Count": {
          "description": "The number of niaapiVersionRegexes matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of niaapiVersionRegexes matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/niaapiVersionRegex"
          }
        }
      }
    },
    "niaapiVersionRegexPlatformRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niaapiVersionRegexPlatform": {
      "title": "Niaapi:Version Regex Platform",
      "description": "The regular expression to parse the software version strings for specific platform.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Anyllregex": {
              "type": "string",
              "description": "All long live version Regex pattern. \n"
            },
            "Currentlltrain": {
              "$ref": "#/definitions/niaapiSoftwareRegex",
              "description": "Current long live version Regex pattern. \n"
            },
            "Latestsltrain": {
              "$ref": "#/definitions/niaapiSoftwareRegex",
              "description": "Latest short live version Regex pattern. \n"
            },
            "Sltrain": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/niaapiSoftwareRegex"
              },
              "description": "List of short lived verison and Regex pattern. \n"
            },
            "Upcominglltrain": {
              "$ref": "#/definitions/niaapiSoftwareRegex",
              "description": "Upcoming short live version Regex pattern.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "niatechsupportTechSupportInventoryRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niatelemetryDiskinfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niatelemetryDiskinfo": {
      "title": "Niatelemetry:Diskinfo",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Free": {
              "type": "integer",
              "format": "int64",
              "description": "The free disk capacity, currently the type of this field is set to integer. \n"
            },
            "Name": {
              "type": "string",
              "description": "Disk Name used to identified the disk usage record. \n"
            },
            "Total": {
              "type": "integer",
              "format": "int64",
              "description": "The total disk capacity, it should be the sum of free and used, currently the type of this field is set to integer. \n"
            },
            "Used": {
              "type": "integer",
              "format": "int64",
              "description": "The used disk capacity, currently the type of this field is set to integer.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "niatelemetryFeatureRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niatelemetryNiaInventoryRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niatelemetryNiaInventory": {
      "title": "Niatelemetry:Nia Inventory",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Cpu": {
              "type": "number",
              "format": "float",
              "description": "CPU usage of device being inventoried. \n"
            },
            "CrashResetLogs": {
              "type": "string",
              "description": "Last crash reset reason of device being inventoried. \n"
            },
            "DeviceName": {
              "type": "string",
              "description": "Name of device being inventoried. \n"
            },
            "DeviceType": {
              "type": "string",
              "description": "Type of device being inventoried. \n"
            },
            "Disk": {
              "$ref": "#/definitions/niatelemetryDiskinfo",
              "description": "Disk Usage of device being inventoried. \n"
            },
            "LogInTime": {
              "type": "string",
              "description": "Last log in time device being inventoried. \n"
            },
            "LogOutTime": {
              "type": "string",
              "description": "Last log out time of device being inventoried. \n"
            },
            "Memory": {
              "type": "integer",
              "format": "int64",
              "description": "Memory usage of device being inventoried. \n"
            },
            "RecordType": {
              "type": "string",
              "description": "Type of record DCNM / APIC / SE. \n"
            },
            "RecordVersion": {
              "type": "string",
              "description": "Version of record being pushed. \n"
            },
            "Serial": {
              "type": "string",
              "description": "Serial number of device being invetoried. \n"
            },
            "SoftwareDownload": {
              "type": "string",
              "description": "Last software downloaded of device being inventoried. \n"
            },
            "Version": {
              "type": "string",
              "description": "Software version of device being inventoried.  \n"
            },
            "LicenseState": {
              "$ref": "#/definitions/niatelemetryNiaLicenseStateRef",
              "description": "The license of this device.\n"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "Relationship to the Device Registration object for this setup.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "niatelemetryNiaInventoryList": {
      "properties": {
        "Count": {
          "description": "The number of niatelemetryNiaInventories matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of niatelemetryNiaInventories matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/niatelemetryNiaInventory"
          }
        }
      }
    },
    "niatelemetryNiaLicenseStateRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "niatelemetryNiaLicenseState": {
      "title": "Niatelemetry:Nia License State",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "FeatureActivated": {
              "type": "string",
              "description": "Features activated on device being inventoried \n"
            },
            "LicenseActivated": {
              "type": "string",
              "description": "Licenses activated on device being inventoried \n"
            },
            "PidType": {
              "type": "string",
              "description": "PID of device being inventoried \n"
            },
            "Serial": {
              "type": "string",
              "description": "Serial number of device being inventoried  \n"
            },
            "Device": {
              "$ref": "#/definitions/niatelemetryNiaInventoryRef",
              "description": "A collection of references to the [niatelemetry.NiaInventory](mo://niatelemetry.NiaInventory) Managed Object.\n\nWhen this managed object is deleted, the referenced [niatelemetry.NiaInventory](mo://niatelemetry.NiaInventory) MO unsets its reference to this deleted MO.\n"
            }
          }
        }
      ]
    },
    "niatelemetryNiaLicenseStateList": {
      "properties": {
        "Count": {
          "description": "The number of niatelemetryNiaLicenseStates matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of niatelemetryNiaLicenseStates matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/niatelemetryNiaLicenseState"
          }
        }
      }
    },
    "notifsConditionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "notifsMoSubscriptionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "ntpDeployTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "ntpPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "ntpPolicy": {
      "title": "NTP",
      "description": "Policy to configure the NTP Servers.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "State of NTP service on the endpoint. \n",
              "x-nullable": true
            },
            "NtpServers": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Collection of NTP Server IP addresses or hostnames.  \n"
            },
            "ApplianceAccount": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "The appliance account to which the appliance NTP policy belongs.\n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "The organization to which the NTP policy belongs.\n",
              "x-createOnly": true
            },
            "Profiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/policyAbstractConfigProfileRef"
              },
              "description": "Relationship to the profile objects.\n"
            }
          }
        }
      ]
    },
    "ntpPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of ntpPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of ntpPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ntpPolicy"
          }
        }
      }
    },
    "ntpValidationTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "oakAnalyzeImpactTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "oakConfigImportTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "oakImportCompletionTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "oakImportValidationTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "oakTakeSnapshotTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "oauth2AuthTokenRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "onpremClusterInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "onpremClusterNodeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "onpremImagePackageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "onpremImagePackage": {
      "title": "Onprem:Image Package",
      "description": "ImagePackage encapsulates a software image package. ImagePackage can be\na docker image, a UI web image, an endpoint (e.g. UCSM) image, a device\nconnector image or an ansible scripts package.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "FilePath": {
              "type": "string",
              "readOnly": true,
              "description": "Optional file path of the image package. \n"
            },
            "FileSha": {
              "type": "string",
              "readOnly": true,
              "description": "Image file's fingerprint. Fingerprint is calculated using SHA256 algorithm. \n"
            },
            "FileSize": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Image file size in bytes. \n"
            },
            "FileTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Image file's last modified date and time. \n"
            },
            "Filename": {
              "type": "string",
              "readOnly": true,
              "description": "Filename of the image package. \n"
            },
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the software image package. \n"
            },
            "PackageType": {
              "type": "string",
              "readOnly": true,
              "description": "Image package type (e.g. service, system etc.). \n"
            },
            "Version": {
              "type": "string",
              "readOnly": true,
              "description": "Image package version string.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "onpremResourceInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "onpremScheduleRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "onpremSchedule": {
      "title": "Onprem:Schedule",
      "description": "Schedule is used by Intersight Appliance services to store task scheduling information.\nFor example, appliance backup service uses Schedule to store the backup schedule of the\nIntersight Appliance. The Upgrade service uses Schedule to store the user-defined schedule\nfor software upgrades of the Intersight Appliance.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "DayOfMonth": {
              "type": "integer",
              "format": "int64",
              "description": "Schedule a task on a specific day of the month. Valid values are 1 through 31. If monthOfYear is specified, then dayOfMonth value must be valid for that month. DayOfMonth may not be set when dayOfWeek is specfied. \n"
            },
            "DayOfWeek": {
              "type": "integer",
              "format": "int64",
              "description": "Schedule a task on a specific day of the week. Valid values are 1 through 7, with 1 being Sunday. DayOfWeek may not be specfied when dayOfMonth is specified. \n"
            },
            "MonthOfYear": {
              "type": "integer",
              "format": "int64",
              "description": "Schedule a task on a specific month of the year. Valid values are 1 through 12, with 1 being January. \n"
            },
            "RepeatInterval": {
              "type": "integer",
              "format": "int64",
              "description": "Schedule a task to run periodically at an interval. Default unit of the RepeatInterval is in minutes. If the RepeateInterval value is set, then all other properties are ignored by the scheduler. RepeateInterval constraints are enforced by the services that use the schedule. Each service has pre-configured service specific properties for enforcing minimum and maximum values of the RepeatInterval. \n"
            },
            "TimeOfDay": {
              "type": "integer",
              "format": "int64",
              "description": "Time of the day in seconds. TimeOfDay is required for all schedule configurations, except when the RepeateInterval field is specified. \n"
            },
            "TimeZone": {
              "type": "string",
              "enum": [
                "Pacific/Niue",
                "Pacific/Pago_Pago",
                "Pacific/Honolulu",
                "Pacific/Rarotonga",
                "Pacific/Tahiti",
                "Pacific/Marquesas",
                "America/Anchorage",
                "Pacific/Gambier",
                "America/Los_Angeles",
                "America/Tijuana",
                "America/Vancouver",
                "America/Whitehorse",
                "Pacific/Pitcairn",
                "America/Dawson_Creek",
                "America/Denver",
                "America/Edmonton",
                "America/Hermosillo",
                "America/Mazatlan",
                "America/Phoenix",
                "America/Yellowknife",
                "America/Belize",
                "America/Chicago",
                "America/Costa_Rica",
                "America/El_Salvador",
                "America/Guatemala",
                "America/Managua",
                "America/Mexico_City",
                "America/Regina",
                "America/Tegucigalpa",
                "America/Winnipeg",
                "Pacific/Galapagos",
                "America/Bogota",
                "America/Cancun",
                "America/Cayman",
                "America/Guayaquil",
                "America/Havana",
                "America/Iqaluit",
                "America/Jamaica",
                "America/Lima",
                "America/Nassau",
                "America/New_York",
                "America/Panama",
                "America/Port-au-Prince",
                "America/Rio_Branco",
                "America/Toronto",
                "Pacific/Easter",
                "America/Caracas",
                "America/Asuncion",
                "America/Barbados",
                "America/Boa_Vista",
                "America/Campo_Grande",
                "America/Cuiaba",
                "America/Curacao",
                "America/Grand_Turk",
                "America/Guyana",
                "America/Halifax",
                "America/La_Paz",
                "America/Manaus",
                "America/Martinique",
                "America/Port_of_Spain",
                "America/Porto_Velho",
                "America/Puerto_Rico",
                "America/Santo_Domingo",
                "America/Thule",
                "Atlantic/Bermuda",
                "America/St_Johns",
                "America/Araguaina",
                "America/Argentina/Buenos_Aires",
                "America/Bahia",
                "America/Belem",
                "America/Cayenne",
                "America/Fortaleza",
                "America/Godthab",
                "America/Maceio",
                "America/Miquelon",
                "America/Montevideo",
                "America/Paramaribo",
                "America/Recife",
                "America/Santiago",
                "America/Sao_Paulo",
                "Antarctica/Palmer",
                "Antarctica/Rothera",
                "Atlantic/Stanley",
                "America/Noronha",
                "Atlantic/South_Georgia",
                "America/Scoresbysund",
                "Atlantic/Azores",
                "Atlantic/Cape_Verde",
                "Africa/Abidjan",
                "Africa/Accra",
                "Africa/Bissau",
                "Africa/Casablanca",
                "Africa/El_Aaiun",
                "Africa/Monrovia",
                "America/Danmarkshavn",
                "Atlantic/Canary",
                "Atlantic/Faroe",
                "Atlantic/Reykjavik",
                "Etc/GMT",
                "Europe/Dublin",
                "Europe/Lisbon",
                "Europe/London",
                "Africa/Algiers",
                "Africa/Ceuta",
                "Africa/Lagos",
                "Africa/Ndjamena",
                "Africa/Tunis",
                "Africa/Windhoek",
                "Europe/Amsterdam",
                "Europe/Andorra",
                "Europe/Belgrade",
                "Europe/Berlin",
                "Europe/Brussels",
                "Europe/Budapest",
                "Europe/Copenhagen",
                "Europe/Gibraltar",
                "Europe/Luxembourg",
                "Europe/Madrid",
                "Europe/Malta",
                "Europe/Monaco",
                "Europe/Oslo",
                "Europe/Paris",
                "Europe/Prague",
                "Europe/Rome",
                "Europe/Stockholm",
                "Europe/Tirane",
                "Europe/Vienna",
                "Europe/Warsaw",
                "Europe/Zurich",
                "Africa/Cairo",
                "Africa/Johannesburg",
                "Africa/Maputo",
                "Africa/Tripoli",
                "Asia/Amman",
                "Asia/Beirut",
                "Asia/Damascus",
                "Asia/Gaza",
                "Asia/Jerusalem",
                "Asia/Nicosia",
                "Europe/Athens",
                "Europe/Bucharest",
                "Europe/Chisinau",
                "Europe/Helsinki",
                "Europe/Istanbul",
                "Europe/Kaliningrad",
                "Europe/Kiev",
                "Europe/Riga",
                "Europe/Sofia",
                "Europe/Tallinn",
                "Europe/Vilnius",
                "Africa/Khartoum",
                "Africa/Nairobi",
                "Antarctica/Syowa",
                "Asia/Baghdad",
                "Asia/Qatar",
                "Asia/Riyadh",
                "Europe/Minsk",
                "Europe/Moscow",
                "Asia/Tehran",
                "Asia/Baku",
                "Asia/Dubai",
                "Asia/Tbilisi",
                "Asia/Yerevan",
                "Europe/Samara",
                "Indian/Mahe",
                "Indian/Mauritius",
                "Indian/Reunion",
                "Asia/Kabul",
                "Antarctica/Mawson",
                "Asia/Aqtau",
                "Asia/Aqtobe",
                "Asia/Ashgabat",
                "Asia/Dushanbe",
                "Asia/Karachi",
                "Asia/Tashkent",
                "Asia/Yekaterinburg",
                "Indian/Kerguelen",
                "Indian/Maldives",
                "Asia/Calcutta",
                "Asia/Kolkata",
                "Asia/Colombo",
                "Asia/Katmandu",
                "Antarctica/Vostok",
                "Asia/Almaty",
                "Asia/Bishkek",
                "Asia/Dhaka",
                "Asia/Omsk",
                "Asia/Thimphu",
                "Indian/Chagos",
                "Asia/Rangoon",
                "Indian/Cocos",
                "Antarctica/Davis",
                "Asia/Bangkok",
                "Asia/Hovd",
                "Asia/Jakarta",
                "Asia/Krasnoyarsk",
                "Asia/Saigon",
                "Indian/Christmas",
                "Antarctica/Casey",
                "Asia/Brunei",
                "Asia/Choibalsan",
                "Asia/Hong_Kong",
                "Asia/Irkutsk",
                "Asia/Kuala_Lumpur",
                "Asia/Macau",
                "Asia/Makassar",
                "Asia/Manila",
                "Asia/Shanghai",
                "Asia/Singapore",
                "Asia/Taipei",
                "Asia/Ulaanbaatar",
                "Australia/Perth",
                "Asia/Pyongyang",
                "Asia/Dili",
                "Asia/Jayapura",
                "Asia/Seoul",
                "Asia/Tokyo",
                "Asia/Yakutsk",
                "Pacific/Palau",
                "Australia/Adelaide",
                "Australia/Darwin",
                "Antarctica/DumontDUrville",
                "Asia/Magadan",
                "Asia/Vladivostok",
                "Australia/Brisbane",
                "Australia/Hobart",
                "Australia/Sydney",
                "Pacific/Chuuk",
                "Pacific/Guam",
                "Pacific/Port_Moresby",
                "Pacific/Efate",
                "Pacific/Guadalcanal",
                "Pacific/Kosrae",
                "Pacific/Norfolk",
                "Pacific/Noumea",
                "Pacific/Pohnpei",
                "Asia/Kamchatka",
                "Pacific/Auckland",
                "Pacific/Fiji",
                "Pacific/Funafuti",
                "Pacific/Kwajalein",
                "Pacific/Majuro",
                "Pacific/Nauru",
                "Pacific/Tarawa",
                "Pacific/Wake",
                "Pacific/Wallis",
                "Pacific/Apia",
                "Pacific/Enderbury",
                "Pacific/Fakaofo",
                "Pacific/Tongatapu",
                "Pacific/Kiritimati"
              ],
              "default": "Pacific/Niue",
              "description": "Timezone to use for the schedule calculation. If a timezone value is not speficied, then the schedule calculation will be based on UTC. \n"
            },
            "WeekOfMonth": {
              "type": "integer",
              "format": "int64",
              "description": "Schedule a task on a specific week of the month. Valid values are 1 through 5. Value of 5 means last week of the month. WeekOfMonth may not be set when dayOfMonth is specified.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "onpremUpgradePhaseRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "onpremUpgradePhase": {
      "title": "Onprem:Upgrade Phase",
      "description": "UpgradePhase represents a phase of the Intersight Appliance software upgrade\nprocess. This data structure is shared by both the Intersight upgrade service\nand the Intersight Appliance's upgrade service.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "enum": [
                "init",
                "Prepare",
                "ServiceLoad",
                "UiLoad",
                "GenerateConfig",
                "DeployService",
                "Success",
                "Fail",
                "Cancel",
                "Telemetry"
              ],
              "default": "init",
              "readOnly": true,
              "description": "Name of the upgrade phase.   \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "onpremUpgradeStatusRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "organizationOrganizationRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "organizationOrganization": {
      "title": "Organization",
      "description": "Organization provides multi-tenancy within an account. Multiple organizations can be present under an account. Resources are associated to organization using resource groups. Organization can have heterogeneous resources. Resources can be shared among multiple organizations. Organizations are associated to user permissions and privileges can be specified to provide access control. User can have access to multiple organizations in same permission and with different privileges on each organization.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "type": "string",
              "description": "The informative description about the usage of this organization. \n"
            },
            "Name": {
              "type": "string",
              "description": "The name of the organization. There can be multiple organizations under an account.  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "The account under which the organization is present.\n",
              "readOnly": true
            },
            "ResourceGroups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/resourceGroupRef"
              },
              "description": "The resource groups associated with these organization.\n"
            }
          }
        }
      ]
    },
    "organizationOrganizationList": {
      "properties": {
        "Count": {
          "description": "The number of organizationOrganizations matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of organizationOrganizations matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/organizationOrganization"
          }
        }
      }
    },
    "osAnswersRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "osAnswers": {
      "title": "Os:Answers",
      "description": "This MO captures the values for the most common set of fields in OS specific\nanswer files. The values provided in this MO are used to construct the OS specific\nanswer files (kickstart, seed, unattended xml) by replacing the fields/placeholders\nin selected os.ConfigurationFile content with the values of this MO properties.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "IsAnswerFileSet": {
              "type": "boolean",
              "readOnly": true,
              "description": "Indicates whether the value of the 'answerFile' property has been set. \n"
            },
            "AnswerFile": {
              "type": "string",
              "description": "If the source of the answers is a static file, the content of the file is stored as value\nin this property.\n\nThe value is mandatory only when the 'Source' property has been set to 'File'.\n \n"
            },
            "Hostname": {
              "type": "string",
              "description": "Hostname to be configured for the server in the OS.\n \n"
            },
            "IpConfigType": {
              "type": "string",
              "enum": [
                "static",
                "DHCP"
              ],
              "default": "static",
              "description": "IP configuration type. Values are Static or Dynamic configuration of IP.\n\nIn case of static IP configuration, IP address, gateway and other details need\nto be populated. In case of dynamic the IP configuration is obtained dynamically\nfrom DHCP.\n \n"
            },
            "IpV4Config": {
              "$ref": "#/definitions/commIpV4Interface",
              "description": "In case of static IP configuration, IP address, netmask and gateway details are\nprovided.\n \n"
            },
            "IsRootPasswordSet": {
              "type": "boolean",
              "x-nullable": true
            },
            "Nameserver": {
              "type": "string",
              "description": "IP address of the name server to be configured in the OS.\n \n"
            },
            "ProductKey": {
              "type": "string",
              "description": "The product key to be used for a specific version of Windows installation.\n \n"
            },
            "RootPassword": {
              "type": "string",
              "description": "Password to be configured for the root / administrator user in the OS.\n \n"
            },
            "Source": {
              "type": "string",
              "enum": [
                "None",
                "Embedded",
                "File",
                "Template"
              ],
              "default": "None",
              "description": "Answer values can be provided from three sources - Embedded in OS image, static file,\nor as placeholder values for an answer file template.\n\nSource of the answers is given as value, Embedded/File/Template.\n'Embedded' option indicates that the answer file is embedded within the OS Image. 'File'\noption indicates that the answers are provided as a file. 'Template' indicates that the\nplaceholders in the selected os.ConfigurationFile MO are replaced with values provided\nas os.Answers MO.\n  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "osBaseInstallConfigRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "osBaseInstallConfig": {
      "title": "Base OS Install Configuration",
      "description": "BaseInstallConfig models the configuration required to install OS.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "AdditionalParameters": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/osPlaceHolder"
              },
              "description": "If the os.ConfigurationFile MO selected is a template that uses additional\nplaceholders other than the ones provided in standard os.Answers MO, the values\nfor those additional placeholders are provided here.\n \n"
            },
            "Answers": {
              "$ref": "#/definitions/osAnswers",
              "description": "Answers provided by user for the unattended OS installation.\n \n"
            },
            "Description": {
              "type": "string",
              "description": "User provided description about the OS install configuration.\n \n"
            },
            "InstallMethod": {
              "type": "string",
              "enum": [
                "vMedia"
              ],
              "default": "vMedia",
              "description": "The install method to be used for OS installation - vMedia, iPXE. \nOnly vMedia is supported as of now.\n \n"
            },
            "OperatingSystemParameters": {
              "$ref": "#/definitions/osOperatingSystemParameters",
              "description": "Parameters specific to selected OS.\n   \n"
            }
          }
        }
      ]
    },
    "osCatalogRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "osCatalog": {
      "title": "Os:Catalog",
      "description": "A catalog of operating systems related objects such as configuration files and post install scripts. Each user account will have a local OS catalog where account users can store their private configuration files and post install scripts.\nCisco provides validated answer files and post install scripts to Intersight users via shared catalogs. Intersight users will be able to read, use these files and scripts in OS installation within their account context. The shared catalogs will be managed entirely by Cisco. Contributions to shared catalogs will need to be provided to Cisco who will publish them at their own discretion.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "description": "The catalog name. There will be one for system and one for each user account.  \n"
            },
            "ConfigurationFiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/osConfigurationFileRef"
              },
              "description": "This captures the associated Configuration files.\n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "osCatalogList": {
      "properties": {
        "Count": {
          "description": "The number of osCatalogs matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of osCatalogs matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/osCatalog"
          }
        }
      }
    },
    "osConfigurationFileRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "osConfigurationFile": {
      "title": "Os:Configuration File",
      "description": "A ConfigurationFile is an OS specific answer file that helps with the unattended\ninstallation.\n\nThe file can also be a template file with placeholders instead of actual answers.\nIntersight supports the golang template syntax specified in https://golang.org/pkg/text/template/.\nThe template supports placeholders for all the properties of os.Answers MO type\nas well as any additional user-defined properties. The values for these placeholders\nshall be given during OS installation in the form of os.Answers type and 'additionalProperties' in\nos.OsInstall object.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "FileContent": {
              "type": "string",
              "description": "The content of the entire configuration file is stored as value. The content\ncan either be a static file content or a template content.\n\nThe template is expected to conform to the golang template syntax. The values\nfrom os.Answers properties will be used to populate this template.\n \n"
            },
            "Name": {
              "type": "string",
              "x-createOnly": true,
              "description": "The name of the OS ConfigurationFile that uniquely identifies the configuration file. \n"
            },
            "Placeholders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/osPlaceHolder"
              },
              "readOnly": true,
              "description": "This readonly property holds the list of placeholder names used in the\nconfiguration file content in case it is a template.\n \n"
            },
            "Supported": {
              "type": "boolean",
              "readOnly": true,
              "description": "An internal property that is used to distinguish between the pre-canned OS\nconfiguration file entries and user provided entries.\n  \n"
            },
            "Catalog": {
              "$ref": "#/definitions/osCatalogRef",
              "description": "A collection of references to the [os.Catalog](mo://os.Catalog) Managed Object.\n\nWhen this managed object is deleted, the referenced [os.Catalog](mo://os.Catalog) MO unsets its reference to this deleted MO.\n"
            },
            "Distributions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hclOperatingSystemRef"
              },
              "description": "This captures the operating system for which this configuration file is\ndefined.\n"
            }
          }
        }
      ]
    },
    "osConfigurationFileList": {
      "properties": {
        "Count": {
          "description": "The number of osConfigurationFiles matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of osConfigurationFiles matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/osConfigurationFile"
          }
        }
      }
    },
    "osDistributionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "osInstallRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "osInstall": {
      "title": "OS Install",
      "description": "This MO models the target server, answers and other properties needed for\nOS installation. The OS installation can be started in the target server by doing\na POST on this MO.\nThe requests to this MO starts a OS installation workflow that can be tracked\nusing workflow engine MO workflow.WorkflowInfo.\n",
      "allOf": [
        {
          "$ref": "#/definitions/osBaseInstallConfig"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "x-createOnly": true,
              "description": "The name of the OS install configuration.\n  \n"
            },
            "ConfigurationFile": {
              "$ref": "#/definitions/osConfigurationFileRef",
              "description": "If the answers source is selected as 'Template' in 'Answers' property, this relation provides the os.ConfigurationFile instance to be used for this OS install.\n"
            },
            "Image": {
              "$ref": "#/definitions/softwarerepositoryOperatingSystemFileRef",
              "description": "OS Image to be installed as part of this OS installation.\n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            },
            "OsduImage": {
              "$ref": "#/definitions/firmwareServerConfigurationUtilityDistributableRef",
              "description": "Location of the Intersight OS Deployment Utilityimage, if the user has downloaded and available locally, to be used for this OS install configuration. This image is applicable for vMedia install method.\nCisco publishes a OS Deployment Utility image that bootstraps and installs the user provided operating system images along with answers for unattended instllation.\nIf this property is empty for vMedia install type, the image hosted in Intersight image repository will be used. Note that in this case, the image will be downloaded from Intersight in every target server every time.\n"
            },
            "PostInstallScripts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/osPostInstallScriptRef"
              },
              "description": "Post Install Scripts to be executed specified in order.\n"
            },
            "Server": {
              "$ref": "#/definitions/computePhysicalRef",
              "description": "This relation provides the target server in which the OS is to be\ninstalled.\n"
            },
            "WorkflowInfo": {
              "$ref": "#/definitions/workflowWorkflowInfoRef",
              "description": "This relation is populated with the reference of OS install workflow\nstarted for this request. This workflow info MO shall be used for\ntracking further status and completion.\n"
            }
          }
        }
      ]
    },
    "osInstallList": {
      "properties": {
        "Count": {
          "description": "The number of osInstalls matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of osInstalls matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/osInstall"
          }
        }
      }
    },
    "osInstallTemplateRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "osOperatingSystemParametersRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "osOperatingSystemParameters": {
      "title": "Os:Operating System Parameters",
      "description": "Installation parameters specific to selected OS.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "osOsSupportRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "osOsSupport": {
      "title": "Os:Os Support",
      "description": "OsSupport is used to validate the support for an Operating System's version.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "OsVersion": {
              "type": "string",
              "x-createOnly": true,
              "description": "The version of the Operating System to be validated. The version should be as per HCL.  \n"
            }
          }
        }
      ]
    },
    "osPlaceHolderRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "osPlaceHolder": {
      "title": "Os:Place Holder",
      "description": "Definition for place holders in templates/post install scripts.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "IsValueSet": {
              "type": "boolean",
              "description": "Flag to indicate if value is set. Value will be used to check if any edit. \n",
              "x-nullable": true
            },
            "Type": {
              "$ref": "#/definitions/workflowPrimitiveDataType",
              "description": "Definition of place holder. \n"
            },
            "Value": {
              "type": "object",
              "description": "Value for placeholder provided by user.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "osPopulateConfigurationFileRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "osPostInstallScriptRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "osReadBmcFileRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "osTemplateFileRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "osTemplateFile": {
      "title": "Os:Template File",
      "description": "A TemplateFile is an OS specific answer file that helps with the unattended installation.\n\nThe file can also be a template file with placeholders instead of actual answers.\nIntersight supports the golang template syntax specified in https://golang.org/pkg/text/template/.\nThe values for these placeholders shall be given during OS installation in the form of 'additionalProperties'\nin os.OsInstall object.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "x-createOnly": true,
              "description": "The name of the OS Template File that user uploads for unattended installation. \n"
            },
            "Placeholders": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "This readonly property holds the list of placeholder names used in the\ntemplate file content.\n \n"
            },
            "TemplateContent": {
              "type": "string",
              "description": "The content of the entire template file is stored as value. The content\ncan either be a static file content or a template content.\n\nThe template is expected to conform to the golang template syntax. \nThe placeholders, if any, would be populated and the values provided would be \nused to populate this template.\n  \n"
            }
          }
        }
      ]
    },
    "osWindowsParametersRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "osWindowsParameters": {
      "title": "Windows Parameters",
      "description": "This stores the installation parameters specific to Windows .\n",
      "allOf": [
        {
          "$ref": "#/definitions/osOperatingSystemParameters"
        },
        {
          "type": "object",
          "properties": {
            "Edition": {
              "type": "string",
              "enum": [
                "Standard",
                "StandardCore",
                "Datacenter",
                "DatacenterCore"
              ],
              "default": "Standard",
              "description": "Lists all the editions supported for Windows Server installation.  \n"
            }
          }
        }
      ]
    },
    "osWriteBmcFileRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "packagemanagementConnectorDeployPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "packagemanagementConnectorImageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "packagemanagementConnectorInstallRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "packagemanagementConnectorInstallStatusRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "packagemanagementMinimumConnectorVersionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "pciCoprocessorCardRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "pciCoprocessorCard": {
      "title": "Pci:Coprocessor Card",
      "description": "PCIe Compression and Cryptographic CPU Offload Card.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "CardId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "It shows the id for the coprocessor card. \n"
            },
            "PciSlot": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the PCI slot name for the coprocessor card.  \n"
            },
            "ComputeBoard": {
              "$ref": "#/definitions/computeBoardRef",
              "description": "A collection of references to the [compute.Board](mo://compute.Board) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.Board](mo://compute.Board) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "pciCoprocessorCardList": {
      "properties": {
        "Count": {
          "description": "The number of pciCoprocessorCards matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of pciCoprocessorCards matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/pciCoprocessorCard"
          }
        }
      }
    },
    "pciDeviceRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "pciDevice": {
      "title": "Pci:Device",
      "description": "PCI device present in a server.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "FirmwareVersion": {
              "type": "string",
              "description": "It shows the running firmware version. \n"
            },
            "Pid": {
              "type": "string",
              "description": "It shows the product identifier. \n"
            },
            "SlotId": {
              "type": "string",
              "readOnly": true,
              "description": "It show PCI slot id of the device.  \n"
            },
            "ComputeBlade": {
              "$ref": "#/definitions/computeBladeRef",
              "description": "A collection of references to the [compute.Blade](mo://compute.Blade) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.Blade](mo://compute.Blade) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "ComputeRackUnit": {
              "$ref": "#/definitions/computeRackUnitRef",
              "description": "A collection of references to the [compute.RackUnit](mo://compute.RackUnit) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.RackUnit](mo://compute.RackUnit) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "pciDeviceList": {
      "properties": {
        "Count": {
          "description": "The number of pciDevices matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of pciDevices matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/pciDevice"
          }
        }
      }
    },
    "pciLinkRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "pciLink": {
      "title": "Pci:Link",
      "description": "PCI Switch Link connected to PCIe Switch.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "Adapter": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the name of the pci device. \n"
            },
            "LinkSpeed": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the upstream link speed for device. \n"
            },
            "LinkStatus": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the upstream link status for device. \n"
            },
            "LinkWidth": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the upstream link width for device. \n"
            },
            "PciSlot": {
              "type": "string",
              "readOnly": true,
              "description": "It shows pci slot name for the pci device. \n"
            },
            "SlotStatus": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the health information for pci device.  \n"
            },
            "PciSwitch": {
              "$ref": "#/definitions/pciSwitchRef",
              "description": "A collection of references to the [pci.Switch](mo://pci.Switch) Managed Object.\n\nWhen this managed object is deleted, the referenced [pci.Switch](mo://pci.Switch) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "pciLinkList": {
      "properties": {
        "Count": {
          "description": "The number of pciLinks matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of pciLinks matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/pciLink"
          }
        }
      }
    },
    "pciSwitchRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "pciSwitch": {
      "title": "Pci:Switch",
      "description": "PCI Switch present in a server connected to two GPUs and one PCIe adapter.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "DeviceId": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the device id of the switch. \n"
            },
            "Health": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the composite health of the switch. \n"
            },
            "NumOfAdaptors": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the number of gpus and pci adapters connected the switch. \n"
            },
            "PciAddress": {
              "type": "string",
              "readOnly": true,
              "description": "It shows shows the PCI address of switch. \n"
            },
            "PciSlot": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the PCI slot name for switch. \n"
            },
            "ProductName": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the model information for the switch. \n"
            },
            "ProductRevision": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the revision for the product. \n"
            },
            "SubDeviceId": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the sub device id of the switch. \n"
            },
            "SubVendorId": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the sub vendor id of the switch. \n"
            },
            "Temperature": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the current temperature of the switch. \n"
            },
            "Type": {
              "type": "string",
              "description": "It shows the type inforamtion of switch. \n"
            },
            "VendorId": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the vendor id of the switch.  \n"
            },
            "ComputeBoard": {
              "$ref": "#/definitions/computeBoardRef",
              "description": "A collection of references to the [compute.Board](mo://compute.Board) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.Board](mo://compute.Board) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "Links": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/pciLinkRef"
              },
              "description": "It shows the number of gpus and pci adapters under each switch.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "pciSwitchList": {
      "properties": {
        "Count": {
          "description": "The number of pciSwitches matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of pciSwitches matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/pciSwitch"
          }
        }
      }
    },
    "pkixDistinguishedNameRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "pkixDistinguishedName": {
      "title": "Pkix:Distinguished Name",
      "description": "The identifier for the owner of an X.509 certificate and the authority that issued the certificate.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "CommonName": {
              "type": "string",
              "readOnly": true,
              "description": "A required component that identifies a person or an object. \n"
            },
            "Country": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Identifier for the country in which the entity resides. \n"
            },
            "Locality": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Identifier for the place where the entry resides. The locality can be a city, county, township, or other geographic region. \n"
            },
            "Organization": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Identifier for the organization in which the entity resides. \n"
            },
            "OrganizationalUnit": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Identifier for a unit within the organization. \n"
            },
            "State": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Identifier for the state or province of the entity.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "pkixEcdsaKeySpecRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "pkixEcdsaKeySpec": {
      "title": "Pkix:Ecdsa Key Spec",
      "description": "The key pair is generated using Elliptic Curve Digital Signature Algorithm (ECDSA), as defined in FIPS 186-4.\nThe ECDSA standard was originally developed for the American National Standards Institute by the Accredited\nStandards Committee on Financial Services, X9.\nANS X9.62 defines methods for digital signature generation and verification using ECDSA. Specifications for\nthe generation of the domain parameters used during the generation and verification of digital signatures\nare also included in ANS X9.62.\n",
      "allOf": [
        {
          "$ref": "#/definitions/pkixKeyGenerationSpec"
        },
        {
          "type": "object",
          "properties": {
            "Curve": {
              "type": "string",
              "enum": [
                "P256",
                "P224",
                "P384",
                "P521"
              ],
              "default": "P256",
              "description": "A specific set of Elliptic Curve parameters, as recommended by NIST in FIPS 186-4.  \n"
            }
          }
        }
      ]
    },
    "pkixEddsaKeySpecRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "pkixEddsaKeySpec": {
      "title": "Pkix:Eddsa Key Spec",
      "description": "The key pair is generated using Edwards-Curve Digital Signature Algorithm (EdDSA).\nThe Edwards-curve Digital Signature Algorithm (EdDSA) is a variant of\nSchnorr's signature system with (possibly twisted) Edwards curves.\n",
      "allOf": [
        {
          "$ref": "#/definitions/pkixKeyGenerationSpec"
        },
        {
          "type": "object",
          "properties": {
            "Algorithm": {
              "type": "string",
              "enum": [
                "Ed25519",
                "Ed25519ph",
                "Ed25519ctx"
              ],
              "default": "Ed25519",
              "description": "The EdDSA algorithm, as defined in RFC 8032.  \n"
            }
          }
        }
      ]
    },
    "pkixKeyGenerationSpecRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "pkixKeyGenerationSpec": {
      "title": "Pkix:Key Generation Spec",
      "description": "The key generation spec provides the algorithm and the parameters required for this algorithm to generate a key.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "enum": [
                "RSA"
              ],
              "default": "RSA",
              "readOnly": true,
              "description": "Name of the key generation algorithm.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "pkixRsaAlgorithmRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "pkixRsaAlgorithm": {
      "title": "Pkix:Rsa Algorithm",
      "description": "The key pair is generated using the RSA algorithm and specified parameters.\n",
      "allOf": [
        {
          "$ref": "#/definitions/pkixKeyGenerationSpec"
        },
        {
          "type": "object",
          "properties": {
            "Modulus": {
              "type": "integer",
              "enum": [
                2048,
                2560,
                3072,
                3584,
                4096
              ],
              "default": 2048,
              "description": "The length of the RSA key, expressed in bits, for both public and private keys.  \n"
            }
          }
        }
      ]
    },
    "pkixSubjectAlternateNameRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "pkixSubjectAlternateName": {
      "title": "Pkix:Subject Alternate Name",
      "description": "The additional hostnames to be protected by a given X.509 certificate.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "DnsName": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Alternate DNS names for the host. \n"
            },
            "EmailAddress": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Alternate email addresses for the host. \n"
            },
            "IpAddress": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Alternate IP addresses for the host. \n"
            },
            "Uri": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Alternate URIs for the host.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "policyAbstractConfigChangeDetailRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "policyAbstractConfigChangeDetail": {
      "title": "Policy:Abstract Config Change Detail",
      "description": "Defines the details of a configuration change including change type, disruption and description of the change.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Changes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Type of the configuration change. \n"
            },
            "ConfigChangeContext": {
              "$ref": "#/definitions/policyConfigResultContext",
              "description": "Context information on the change. \n"
            },
            "ConfigChangeFlag": {
              "type": "string",
              "enum": [
                "Pending-changes",
                "Drift-changes"
              ],
              "default": "Pending-changes",
              "description": "Config change flag to differentiate Pending-changes and Config-drift. \n"
            },
            "Disruptions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Possible disruptions the configuration change might cause. \n"
            },
            "Message": {
              "type": "string",
              "description": "Detailed description of the config change. \n"
            },
            "ModStatus": {
              "type": "string",
              "enum": [
                "None",
                "Created",
                "Modified",
                "Deleted"
              ],
              "default": "None",
              "description": "Modification status of the mo in this config change.  \n"
            }
          }
        }
      ]
    },
    "policyAbstractConfigProfileRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "policyAbstractConfigProfile": {
      "title": "Policy:Abstract Config Profile",
      "description": "AbstractConfigProfile is an abstract base type for all config actions on a profile.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractProfile"
        },
        {
          "type": "object",
          "properties": {
            "Action": {
              "type": "string",
              "description": "User initiated action. Each profile type has its own supported actions. For HyperFlex cluster profile, the supported actions are -- Validate, Deploy, Continue, Retry, Abort, Unassign For server profile, the support actions are -- Deploy, Unassign. \n",
              "default": "No-op"
            },
            "ConfigContext": {
              "$ref": "#/definitions/policyConfigContext",
              "description": "The configuration state and results of the last configuration operation.  \n"
            }
          }
        }
      ]
    },
    "policyAbstractConfigResultRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "policyAbstractConfigResult": {
      "title": "Policy:Abstract Config Result",
      "description": "The results with the overall state and detailed result messages.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "ConfigStage": {
              "type": "string",
              "description": "The current running stage of the configuration or workflow. \n"
            },
            "ConfigState": {
              "type": "string",
              "description": "Indicates overall configuration state for applying the configuration to the end point. Values  -- ok, ok-with-warning, errored. \n"
            },
            "ValidationState": {
              "type": "string",
              "description": "Indicates overall state for logical model validation. Values  -- ok, ok-with-warning, errored.  \n"
            }
          }
        }
      ]
    },
    "policyAbstractConfigResultEntryRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "policyAbstractConfigResultEntry": {
      "title": "Policy:Abstract Config Result Entry",
      "description": "The results details information.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "CompletedTime": {
              "type": "string",
              "description": "The completed time of the task in installer. \n"
            },
            "Context": {
              "$ref": "#/definitions/policyConfigResultContext",
              "description": "Context information on the change. \n"
            },
            "Message": {
              "type": "string",
              "description": "Localized message based on the locale setting of the user's context. \n"
            },
            "OwnerId": {
              "type": "string"
            },
            "State": {
              "type": "string",
              "description": "Values  -- ok, ok-with-warning, errored. \n"
            },
            "Type": {
              "type": "string",
              "description": "Indicates if the result is reported during the logical model validation/resource allocation phase. or the configuration applying phase. Values -- validation, config.  \n"
            }
          }
        }
      ]
    },
    "policyAbstractPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "policyAbstractPolicy": {
      "title": "Policy:Abstract Policy",
      "description": "A base abstract class for all configuration policies that can be applied to service profiles.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "type": "string",
              "description": "Description of the policy. \n"
            },
            "Name": {
              "type": "string",
              "description": "Name of the concrete policy.  \n"
            }
          }
        }
      ]
    },
    "policyAbstractProfileRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "policyAbstractProfile": {
      "title": "Policy:Abstract Profile",
      "description": "Abstract base type for all profiles.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "type": "string",
              "description": "Description of the profile. \n"
            },
            "Name": {
              "type": "string",
              "description": "Name of the concrete profile. \n"
            },
            "Type": {
              "type": "string",
              "enum": [
                "instance"
              ],
              "default": "instance",
              "description": "Defines the type of the profile. Accepted value is instance.  \n"
            },
            "SrcTemplate": {
              "$ref": "#/definitions/policyAbstractProfileRef",
              "description": "The source profile template to apply to the profile instance. All configuration settings from the profile template will be applied to the profile instance.\n"
            }
          }
        }
      ]
    },
    "policyAnalyzeImpactTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "policyConfigChangeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "policyConfigChange": {
      "title": "Policy:Config Change",
      "description": "Defines the configuration changes at the summary level including configuration changes and disruptions.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Changes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Configuration changes at summary level. \n"
            },
            "Disruptions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Configuration disruptions.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "policyConfigChangeDetailTypeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "policyConfigContextRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "policyConfigContext": {
      "title": "Policy:Config Context",
      "description": "Configuration related state and results.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "ConfigState": {
              "type": "string",
              "readOnly": true,
              "description": "Indicates a profile's configuration deploying state. Values -- Assigned, Not-assigned, Associated, Pending-changes, Validating, Configuring, Failed. \n"
            },
            "ControlAction": {
              "type": "string",
              "description": "System action to trigger the appropriate workflow. Values -- No_op, ConfigChange, Deploy, Unbind. \n"
            },
            "ErrorState": {
              "type": "string",
              "description": "Indicates a profile's error state. Values -- Validation-error (Static validation error), Pre-config-error (Runtime validation error), Config-error (Runtime configuration error). \n"
            },
            "OperState": {
              "type": "string",
              "readOnly": true,
              "description": "Combined state (configState, and operational state of the associated physical resource) to indicate the current state of the profile. Values -- n/a, Power-off, Pending-changes, Configuring, Ok, Failed.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "policyConfigImportTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "policyConfigResultContextRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "policyConfigResultContext": {
      "title": "Policy:Config Result Context",
      "description": "The context for a validation/config result such as the related entity's name, type, MOID etc.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "EntityData": {
              "type": "object",
              "description": "The data of the object present in config result context. \n"
            },
            "EntityMoid": {
              "type": "string",
              "description": "The Moid of the object present in config result context. \n"
            },
            "EntityName": {
              "type": "string",
              "description": "The name of the object present in config result context. \n"
            },
            "EntityType": {
              "type": "string",
              "description": "The type of the object present in config result context.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "policyImportCompletionTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "policyImportValidationTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "policyTakeSnapshotTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "policyinventoryAbstractDeviceInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "policyinventoryAbstractDeviceInfo": {
      "title": "Policyinventory:Abstract Device Info",
      "description": "Information pertaining to a Registered Device in Intersight which is pertinent to policy microservice.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "ConfigState": {
              "type": "string",
              "readOnly": true,
              "description": "Configuration state of server profile config context. \n"
            },
            "ControlAction": {
              "type": "string",
              "readOnly": true,
              "description": "Control action of server profile config context. \n"
            },
            "ErrorState": {
              "type": "string",
              "readOnly": true,
              "description": "Error state of server profile config context. \n"
            },
            "JobInfo": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/policyinventoryJobInfo"
              },
              "readOnly": true,
              "description": "Inventory job information of the device. \n"
            },
            "OperState": {
              "type": "string",
              "readOnly": true,
              "description": "Operational state of server profile config context. \n"
            },
            "ProfileMoId": {
              "type": "string",
              "readOnly": true,
              "description": "Server profile MO ID of the server.  \n"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "Registered device associated with profile for which inventory is done.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "policyinventoryJobInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "policyinventoryJobInfo": {
      "title": "Policyinventory:Job Info",
      "description": "Complex type representing the Job Information of a device.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "ExecutionStatus": {
              "type": "string",
              "enum": [
                "Scheduled",
                "Completed",
                "Error"
              ],
              "default": "Scheduled",
              "readOnly": true,
              "description": "Execution status of the inventory job. \n"
            },
            "LastScheduledTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Last scheduled time of the inventory job. \n"
            },
            "PolicyId": {
              "type": "string",
              "readOnly": true,
              "description": "Policy ID for the inventory job. \n"
            },
            "PolicyName": {
              "type": "string",
              "readOnly": true,
              "description": "Policy name for the inventory job.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "portGroupRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "portGroup": {
      "title": "Port:Group",
      "description": "Holder for multiple ports. A switch card will have one or more port groups.\n",
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "type": "object",
          "properties": {
            "Transport": {
              "type": "string",
              "readOnly": true
            },
            "EquipmentSharedIoModule": {
              "$ref": "#/definitions/equipmentSharedIoModuleRef",
              "description": "A collection of references to the [equipment.SharedIoModule](mo://equipment.SharedIoModule) Managed Object.\n\nWhen this managed object is deleted, the referenced [equipment.SharedIoModule](mo://equipment.SharedIoModule) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "EquipmentSwitchCard": {
              "$ref": "#/definitions/equipmentSwitchCardRef",
              "description": "A collection of references to the [equipment.SwitchCard](mo://equipment.SwitchCard) Managed Object.\n\nWhen this managed object is deleted, the referenced [equipment.SwitchCard](mo://equipment.SwitchCard) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "EthernetPorts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/etherPhysicalPortRef"
              },
              "readOnly": true
            },
            "FcPorts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/fcPhysicalPortRef"
              },
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            },
            "SubGroups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/portSubGroupRef"
              },
              "readOnly": true
            }
          }
        }
      ]
    },
    "portGroupList": {
      "properties": {
        "Count": {
          "description": "The number of portGroups matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of portGroups matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/portGroup"
          }
        }
      }
    },
    "portPhysicalRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "portPhysical": {
      "title": "Port:Physical",
      "description": "Abstract super class for all ports.\n",
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "type": "object",
          "properties": {
            "OperState": {
              "type": "string",
              "readOnly": true
            },
            "Role": {
              "type": "string",
              "readOnly": true
            }
          }
        }
      ]
    },
    "portSubGroupRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "portSubGroup": {
      "title": "Port:Sub Group",
      "description": "Holder for multiple ports within a portGroup. SubGroup represents a break-out port group on the Fabric Interconnect.\n",
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "type": "object",
          "properties": {
            "Transport": {
              "type": "string",
              "readOnly": true
            },
            "EthernetPorts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/etherPhysicalPortRef"
              },
              "readOnly": true
            },
            "PortGroup": {
              "$ref": "#/definitions/portGroupRef",
              "description": "A collection of references to the [port.Group](mo://port.Group) Managed Object.\n\nWhen this managed object is deleted, the referenced [port.Group](mo://port.Group) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "portSubGroupList": {
      "properties": {
        "Count": {
          "description": "The number of portSubGroups matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of portSubGroups matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/portSubGroup"
          }
        }
      }
    },
    "processorUnitRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "processorUnit": {
      "title": "Processor:Unit",
      "description": "The CPU present on a server.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "Architecture": {
              "type": "string",
              "readOnly": true
            },
            "NumCores": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "NumCoresEnabled": {
              "type": "string",
              "readOnly": true
            },
            "NumThreads": {
              "type": "string",
              "readOnly": true
            },
            "OperPowerState": {
              "type": "string",
              "readOnly": true
            },
            "OperState": {
              "type": "string",
              "readOnly": true
            },
            "Operability": {
              "type": "string",
              "readOnly": true
            },
            "Presence": {
              "type": "string",
              "readOnly": true
            },
            "ProcessorId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "SocketDesignation": {
              "type": "string",
              "readOnly": true
            },
            "Speed": {
              "type": "number",
              "format": "float",
              "readOnly": true
            },
            "Stepping": {
              "type": "string",
              "readOnly": true
            },
            "Thermal": {
              "type": "string",
              "readOnly": true
            },
            "ComputeBoard": {
              "$ref": "#/definitions/computeBoardRef",
              "description": "A collection of references to the [compute.Board](mo://compute.Board) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.Board](mo://compute.Board) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "processorUnitList": {
      "properties": {
        "Count": {
          "description": "The number of processorUnits matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of processorUnits matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/processorUnit"
          }
        }
      }
    },
    "pureconnectorInventoryRequestMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "recoveryAbstractBackupConfigRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "recoveryAbstractBackupConfig": {
      "title": "Backup Policy",
      "description": "Base Backup config which contains all the required inputs to do backup on a local or remote server.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "FileNamePrefix": {
              "type": "string",
              "description": "The file name for the backup image. This name is added as a prefix in the name for the backup image. A unique file name for the backup image is created along with a timestamp. For example: prefix-1572431305418\n \n"
            },
            "IsPasswordSet": {
              "type": "boolean",
              "x-nullable": true
            },
            "LocationType": {
              "type": "string",
              "enum": [
                "Network Share",
                "Local Storage"
              ],
              "default": "Network Share",
              "description": "Specifies whether the backup will be stored locally or remotely. \n"
            },
            "Password": {
              "type": "string",
              "description": "Backup server password. \n"
            },
            "Path": {
              "type": "string",
              "description": "The file system path where the backup images must be stored. Include the IP address/hostname of the network share location and the complete file system path. For example: 172.29.109.234/var/backups/\n \n"
            },
            "Protocol": {
              "type": "string",
              "enum": [
                "SCP",
                "SFTP",
                "FTP"
              ],
              "default": "SCP",
              "description": "Protocol for transferring the backup image to the network share location. \n"
            },
            "RetentionCount": {
              "type": "integer",
              "format": "int64",
              "description": "Number of backup copies maintained on the local or remote server. When the created backup files exceed this number, the initial backup files are overwritten in a sequential manner.\n \n"
            },
            "UserName": {
              "type": "string",
              "description": "Backup server user name.  \n"
            }
          }
        }
      ]
    },
    "recoveryAbstractBackupInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "recoveryAbstractBackupInfo": {
      "title": "Recovery:Abstract Backup Info",
      "description": "Abstract class describing a backup. Backup objects for all devices must inherit from this class.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The device for which backup has been created.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "recoveryAbstractRestoreStatusRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "recoveryBackupConfigPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "recoveryBackupConfigPolicy": {
      "title": "Backup Policy",
      "description": "Backup config policy which contains all the required inputs to do backup on a local or remote server.\n",
      "allOf": [
        {
          "$ref": "#/definitions/recoveryAbstractBackupConfig"
        },
        {
          "type": "object",
          "properties": {
            "BackupProfiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/recoveryBackupProfileRef"
              },
              "description": "List of Backup profiles using this policy.\n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "recoveryBackupConfigPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of recoveryBackupConfigPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of recoveryBackupConfigPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/recoveryBackupConfigPolicy"
          }
        }
      }
    },
    "recoveryBackupProfileRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "recoveryBackupProfile": {
      "title": "BackupProfile",
      "description": "Backup profile to initiate on-demand or scheduled backups at end points.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractConfigProfile"
        },
        {
          "type": "object",
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Enables/Disables the schedule on the endpoint.  \n",
              "x-nullable": true
            },
            "BackupConfig": {
              "$ref": "#/definitions/recoveryBackupConfigPolicyRef",
              "description": "A collection of references to the [recovery.BackupConfigPolicy](mo://recovery.BackupConfigPolicy) Managed Object.\n\nWhen this managed object is deleted, the referenced [recovery.BackupConfigPolicy](mo://recovery.BackupConfigPolicy) MO unsets its reference to this deleted MO.\n"
            },
            "ConfigResult": {
              "$ref": "#/definitions/recoveryConfigResultRef",
              "description": "The profile configuration (deploy, validation) results with the overall state and detailed result messages.\n",
              "readOnly": true
            },
            "DeviceId": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "Relationship to all the end devices associated to this backup profile.\n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            },
            "ScheduleConfig": {
              "$ref": "#/definitions/recoveryScheduleConfigPolicyRef",
              "description": "A collection of references to the [recovery.ScheduleConfigPolicy](mo://recovery.ScheduleConfigPolicy) Managed Object.\n\nWhen this managed object is deleted, the referenced [recovery.ScheduleConfigPolicy](mo://recovery.ScheduleConfigPolicy) MO unsets its reference to this deleted MO.\n"
            }
          }
        }
      ]
    },
    "recoveryBackupProfileList": {
      "properties": {
        "Count": {
          "description": "The number of recoveryBackupProfiles matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of recoveryBackupProfiles matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/recoveryBackupProfile"
          }
        }
      }
    },
    "recoveryBackupScheduleRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "recoveryBackupSchedule": {
      "title": "Recovery:Backup Schedule",
      "description": "Encapsulates the various backup settings available to the user for scheduling a backup on the endpoint.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "ExecutionTime": {
              "type": "string",
              "format": "date-time",
              "description": "The time at which the backup is to be run on a given day. This is used when the frequency unit is daily. \n"
            },
            "FrequencyUnit": {
              "type": "string",
              "enum": [
                "Daily",
                "Periodic"
              ],
              "default": "Daily",
              "description": "The frequency at which the backup schedule must run. \n"
            },
            "Hours": {
              "type": "integer",
              "enum": [
                8,
                4,
                12,
                16,
                20
              ],
              "default": 8,
              "description": "The frequency, in hours, at which the backup schedule runs.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "recoveryConfigParamsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "recoveryConfigParams": {
      "title": "Recovery:Config Params",
      "description": "Encapsulates the restore workflows configuration parameters\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "recoveryConfigResultRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "recoveryConfigResult": {
      "title": "Recovery:Config Result",
      "description": "Profile configuration (deploy, validation) results with the overall state and detailed result messages.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractConfigResult"
        },
        {
          "type": "object",
          "properties": {
            "_0_OnDemandBackup": {
              "$ref": "#/definitions/recoveryOnDemandBackupRef",
              "description": "A collection of references to the [recovery.OnDemandBackup](mo://recovery.OnDemandBackup) Managed Object.\n\nWhen this managed object is deleted, the referenced [recovery.OnDemandBackup](mo://recovery.OnDemandBackup) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "BackupProfile": {
              "$ref": "#/definitions/recoveryBackupProfileRef",
              "description": "A collection of references to the [recovery.BackupProfile](mo://recovery.BackupProfile) Managed Object.\n\nWhen this managed object is deleted, the referenced [recovery.BackupProfile](mo://recovery.BackupProfile) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "ResultEntries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/recoveryConfigResultEntryRef"
              },
              "description": "Detailed result entries for both validation & configration. Each result entry can be error/warning/info messages and the context.\n"
            }
          }
        }
      ]
    },
    "recoveryConfigResultList": {
      "properties": {
        "Count": {
          "description": "The number of recoveryConfigResults matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of recoveryConfigResults matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/recoveryConfigResult"
          }
        }
      }
    },
    "recoveryConfigResultEntryRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "recoveryConfigResultEntry": {
      "title": "Recovery:Config Result Entry",
      "description": "An entry that describes the result of a Backup Profile state on the end device.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractConfigResultEntry"
        },
        {
          "type": "object",
          "properties": {
            "ConfigResult": {
              "$ref": "#/definitions/recoveryConfigResultRef",
              "description": "A collection of references to the [recovery.ConfigResult](mo://recovery.ConfigResult) Managed Object.\n\nWhen this managed object is deleted, the referenced [recovery.ConfigResult](mo://recovery.ConfigResult) MO unsets its reference to this deleted MO.\n"
            }
          }
        }
      ]
    },
    "recoveryConfigResultEntryList": {
      "properties": {
        "Count": {
          "description": "The number of recoveryConfigResultEntries matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of recoveryConfigResultEntries matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/recoveryConfigResultEntry"
          }
        }
      }
    },
    "recoveryOnDemandBackupRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "recoveryOnDemandBackup": {
      "title": "On Demand Backup",
      "description": "Handles requests for on demand backup for a given endpoint.\n",
      "allOf": [
        {
          "$ref": "#/definitions/recoveryAbstractBackupConfig"
        },
        {
          "type": "object",
          "properties": {
            "ConfigResult": {
              "$ref": "#/definitions/recoveryConfigResultRef",
              "description": "The status of ondemand backup.\n",
              "readOnly": true
            },
            "DeviceId": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "Relationship to the end point on which back up is configured.\n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "recoveryOnDemandBackupList": {
      "properties": {
        "Count": {
          "description": "The number of recoveryOnDemandBackups matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of recoveryOnDemandBackups matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/recoveryOnDemandBackup"
          }
        }
      }
    },
    "recoveryRestoreRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "recoveryRestore": {
      "title": "Restore",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "ConfigParams": {
              "$ref": "#/definitions/recoveryConfigParams",
              "description": "Configuration parameters to be passed into the restore workflow.  \n"
            },
            "BackupInfo": {
              "$ref": "#/definitions/recoveryAbstractBackupInfoRef",
              "description": "The backup info that needs to be restored in the target endpoint.\n"
            },
            "Device": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The DeviceRegistration of the target endpoint.\n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            },
            "RestoreStatus": {
              "$ref": "#/definitions/recoveryAbstractRestoreStatusRef",
              "description": "Relationship to the RestoreStatus mo that tracks status of restore workflow.\n",
              "readOnly": true
            },
            "Workflow": {
              "$ref": "#/definitions/workflowWorkflowInfoRef",
              "description": "The run time instance of the workflow for this upgrade operation.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "recoveryRestoreList": {
      "properties": {
        "Count": {
          "description": "The number of recoveryRestores matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of recoveryRestores matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/recoveryRestore"
          }
        }
      }
    },
    "recoveryScheduleConfigPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "recoveryScheduleConfigPolicy": {
      "title": "Schedule Policy",
      "description": "Base Schedule config which contains all the required inputs to do schedule on a local or remote server.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "Schedule": {
              "$ref": "#/definitions/recoveryBackupSchedule",
              "description": "Schedule to create a backup on the target device. Minimum is 4 hours and Max is 1440 hours (30 Days).  \n"
            },
            "BackupProfiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/recoveryBackupProfileRef"
              },
              "description": "List of Backup profiles using this policy.\n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "recoveryScheduleConfigPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of recoveryScheduleConfigPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of recoveryScheduleConfigPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/recoveryScheduleConfigPolicy"
          }
        }
      }
    },
    "reportingReportActionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "reportingReportConfigRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "reportingReportConfigDataSourceRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "reportingReportConfigDataSourceUrlRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "reportingReportInstanceRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "reportingReportParamPairRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "reportingReportletRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "reportingUserBasicDataRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "resourceGroupRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "resourceGroup": {
      "title": "Resource:Group",
      "description": "A group of REST resources, such as a group of compute.Blade MOs. A ResourceGroup can contain static members which are specified as a set of object references, or it can contain dynamic members, which are specified through OData query filters. A Resource can be part of multiple resource groups.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "description": "The name of this resource group. \n"
            },
            "PerTypeCombinedSelector": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/resourcePerTypeCombinedSelector"
              },
              "readOnly": true,
              "description": "A single filter expression created by OR'ing the $filter criteria of the 'selectors' of a given object type. Used to efficiently maintain the membership of the group. This filter is maintained per object type in this type.\n \n"
            },
            "Qualifier": {
              "type": "string",
              "enum": [
                "Allow-Selectors",
                "Allow-All"
              ],
              "default": "Allow-Selectors",
              "description": "Qualifier shall be used to specify if we want to organize resources using multiple resource group or single For an account, resource groups can be of only one of the above types. (Both the types are mutually exclusive for an account.). \n"
            },
            "Selectors": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/resourceSelector"
              },
              "description": "A list of ODATA filters to select resources. The group selectors may be include URLs of individual resources, or OData query with filters that match multiple queries. The URLs must be relative (i.e. do not include the host).\n  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "The account to which this resource group belongs to.\n",
              "readOnly": true
            },
            "Organizations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/organizationOrganizationRef"
              },
              "description": "A collection of references to the [organization.Organization](mo://organization.Organization) Managed Object.\n\nWhen this managed object is deleted, the referenced [organization.Organization](mo://organization.Organization) MOs unset their reference to this deleted MO.\n"
            }
          }
        }
      ]
    },
    "resourceGroupList": {
      "properties": {
        "Count": {
          "description": "The number of resourceGroups matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of resourceGroups matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/resourceGroup"
          }
        }
      }
    },
    "resourceGroupMemberRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "resourceGroupMember": {
      "title": "Resource:Group Member",
      "description": "A resolved member of a resource group.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Group": {
              "$ref": "#/definitions/resourceGroupRef",
              "description": "The resource group to which the resource is a member.\n",
              "readOnly": true
            },
            "Resource": {
              "$ref": "#/definitions/moBaseMoRef",
              "description": "Reference to the resolved resource.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "resourceGroupMemberList": {
      "properties": {
        "Count": {
          "description": "The number of resourceGroupMembers matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of resourceGroupMembers matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/resourceGroupMember"
          }
        }
      }
    },
    "resourceLicenseResourceCountRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "resourceLicenseResourceCount": {
      "title": "Resource:License Resource Count",
      "description": "LicenseResourceCount tracks the server count info for 3 different licensing tiers.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "LicenseType": {
              "type": "string",
              "enum": [
                "Base",
                "Essential",
                "Standard",
                "Advantage"
              ],
              "default": "Base",
              "readOnly": true,
              "description": "Type of licensing defined for this resource group. Used for licensing group. \n"
            },
            "ResourceCount": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "The number of resource belongs to this licensing tier.  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "The account to which this resource group belongs to.\n",
              "readOnly": true
            },
            "LicenseGroups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/resourceGroupRef"
              },
              "description": "The list of all license groups bind with this server count object.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "resourceLicenseResourceCountList": {
      "properties": {
        "Count": {
          "description": "The number of resourceLicenseResourceCounts matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of resourceLicenseResourceCounts matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/resourceLicenseResourceCount"
          }
        }
      }
    },
    "resourceMembershipRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "resourceMembership": {
      "title": "Resource:Membership",
      "description": "ResourceMembership represents a resource's associated groups, organizations and the permissions associated to this resource via organizations.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "GroupPermissionRoles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/iamGroupPermissionToRoles"
              },
              "readOnly": true,
              "description": "Groups, organizations and their permissions to roles mapping. \n"
            },
            "TargetApp": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the Service owning the resource.  \n"
            },
            "Holder": {
              "$ref": "#/definitions/resourceMembershipHolderRef",
              "description": "A collection of references to the [resource.MembershipHolder](mo://resource.MembershipHolder) Managed Object.\n\nWhen this managed object is deleted, the referenced [resource.MembershipHolder](mo://resource.MembershipHolder) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "Resource": {
              "$ref": "#/definitions/moBaseMoRef",
              "description": "Reference to the resources like device registrations which needs access control.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "resourceMembershipList": {
      "properties": {
        "Count": {
          "description": "The number of resourceMemberships matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of resourceMemberships matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/resourceMembership"
          }
        }
      }
    },
    "resourceMembershipHolderRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "resourceMembershipHolder": {
      "title": "Resource:Membership Holder",
      "description": "A holder of REST resources and their membership.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "The name of this resource membership holder.  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "The account to which this resource membership holder belongs to.\n",
              "readOnly": true
            },
            "Memberships": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/resourceMembershipRef"
              },
              "description": "The list of all resources and their membership which are part of resource groups.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "resourceMembershipHolderList": {
      "properties": {
        "Count": {
          "description": "The number of resourceMembershipHolders matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of resourceMembershipHolders matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/resourceMembershipHolder"
          }
        }
      }
    },
    "resourcePerTypeCombinedSelectorRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "resourcePerTypeCombinedSelector": {
      "title": "Resource:Per Type Combined Selector",
      "description": "Complex type representing an object type to associated filter by combining all selectors.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "CombinedSelector": {
              "type": "string",
              "readOnly": true,
              "description": "A single filter expression created by OR'ing the $filter criteria of the 'selectors'. Used to efficiently maintain the membership of the Group.\n \n"
            },
            "EmptyFilter": {
              "type": "boolean",
              "readOnly": true,
              "description": "If true, then resources are added using just object type without filter.\n \n"
            },
            "SelectorObjectType": {
              "type": "string",
              "readOnly": true,
              "description": "The ObjectType on which the selectors are defined. Used to efficiently query resource groups for a given ObjectType.\n  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "resourceSelectorRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "resourceSelector": {
      "title": "Resource:Selector",
      "description": "Complex type representing the permission to roles.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Selector": {
              "type": "string",
              "x-createOnly": true,
              "description": "ODATA filter to select resources. The group selector may include URLs of individual resource, or OData query with filters that match multiple queries. The URLs must be relative (i.e. do not include the host).  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "sdcardDeployTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "sdcardDiagnosticsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "sdcardDiagnostics": {
      "title": "Diagnostics",
      "description": "This partition is used for diagnostics utility. This drive is available under utility partition.\n",
      "allOf": [
        {
          "$ref": "#/definitions/sdcardVirtualDrive"
        },
        {
          "type": "object"
        }
      ]
    },
    "sdcardDriversRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "sdcardDrivers": {
      "title": "Drivers",
      "description": "This partition is used for drivers. This drive is available under utility partition.\n",
      "allOf": [
        {
          "$ref": "#/definitions/sdcardVirtualDrive"
        },
        {
          "type": "object"
        }
      ]
    },
    "sdcardHostUpgradeUtilityRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "sdcardHostUpgradeUtility": {
      "title": "Host Upgrade Utility",
      "description": "This partition is used for host upgrade utility referred as HUU. This drive is available under utility partition.\n",
      "allOf": [
        {
          "$ref": "#/definitions/sdcardVirtualDrive"
        },
        {
          "type": "object"
        }
      ]
    },
    "sdcardOperatingSystemRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "sdcardOperatingSystem": {
      "title": "Operating System",
      "description": "This partition is used for OS install and is commonly known as Hypervisor partition. This drive is available under OS partition.\n",
      "allOf": [
        {
          "$ref": "#/definitions/sdcardVirtualDrive"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "description": "Name of virtual drive for operating system partition.  \n"
            }
          }
        }
      ]
    },
    "sdcardPartitionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "sdcardPartition": {
      "title": "Sdcard:Partition",
      "description": "This adds and configures operating system partitions.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Type": {
              "type": "string",
              "enum": [
                "OS",
                "Utility"
              ],
              "default": "OS",
              "description": "This specifies the type of the partition. Allowed values are OS, Utility. \n"
            },
            "VirtualDrives": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/sdcardVirtualDrive"
              },
              "description": "Collection of available virtual drives.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "sdcardPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "sdcardPolicy": {
      "title": "SD Card",
      "description": "Policy for configuring SD Card settings on endpoint.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "Partitions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/sdcardPartition"
              },
              "description": "This is a collection of partition.  \n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            },
            "Profiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/policyAbstractConfigProfileRef"
              },
              "description": "Relationship to the profile object.\n"
            }
          }
        }
      ]
    },
    "sdcardPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of sdcardPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of sdcardPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/sdcardPolicy"
          }
        }
      }
    },
    "sdcardServerConfigurationUtilityRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "sdcardServerConfigurationUtility": {
      "title": "Server Configuration Utility",
      "description": "This partition is used for server configuration utility referred as SCU. This drive is available under utility partition.\n",
      "allOf": [
        {
          "$ref": "#/definitions/sdcardVirtualDrive"
        },
        {
          "type": "object"
        }
      ]
    },
    "sdcardUserPartitionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "sdcardUserPartition": {
      "title": "User Partition",
      "description": "This partition is available for user to use. This drive is available under utility partition.\n",
      "allOf": [
        {
          "$ref": "#/definitions/sdcardVirtualDrive"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "description": "Name of virtual drive for user partition.  \n"
            }
          }
        }
      ]
    },
    "sdcardValidationTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "sdcardVirtualDriveRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "sdcardVirtualDrive": {
      "title": "Sdcard:Virtual Drive",
      "description": "Base type for the virtual drive.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Enable": {
              "type": "boolean",
              "description": "Enable the respective virtual drive to be available to the host.  \n",
              "x-nullable": true
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "searchSearchItemRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "searchSearchItem": {
      "title": "Search:Search Item",
      "description": "The Search service entry point to search Intersight REST resources using OData query syntax.\nSee [Search API query syntax](/apidocs/introduction/query/#search-api) for details\nabout the query syntax.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object"
        }
      ]
    },
    "searchSearchItemList": {
      "properties": {
        "Count": {
          "description": "The number of searchSearchItems matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of searchSearchItems matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/searchSearchItem"
          }
        }
      }
    },
    "searchSuggestItemRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "searchSuggestItem": {
      "title": "Search:Suggest Item",
      "description": "The Suggester service entry point to suggest Intersight REST resources using Elastic Search suggester API syntax.\nThe suggest feature suggests similar looking terms based on a provided text by using a suggester. \nSee [Search API query syntax](/apidocs/introduction/query/#global-search-api) for details\nabout the suggester query syntax.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "CompleteMo": {
              "type": "boolean",
              "x-createOnly": true,
              "description": "Flag for returning complete objects that matched the global search criteria. \n",
              "x-nullable": true
            },
            "Rawquery": {
              "type": "string",
              "x-createOnly": true,
              "description": "Additional filter parameters for global search. You can also specify OData select fields here. Maximum Query Length is limited to 10000. \n"
            },
            "Skip": {
              "type": "integer",
              "format": "int64",
              "x-createOnly": true,
              "description": "Starting offset for the results to be returned from external search engine. \n"
            },
            "SuggestTerm": {
              "type": "string",
              "x-createOnly": true,
              "description": "Main search term used for global search across all Managed Objects that has search enabled. Search Term can be up to 200 characters long. \n"
            },
            "Top": {
              "type": "integer",
              "format": "int64",
              "x-createOnly": true,
              "description": "Maximum number of results to be returned from external search engine. \n"
            },
            "Type": {
              "type": "string",
              "x-createOnly": true,
              "description": "Object type filter of a Managed Object. Search will be restricted only on the specified object types.  Do not provide IndexMoTypes filter in the rawquery, if you specify values in this field.\n  \n"
            }
          }
        }
      ]
    },
    "searchTagItemRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "searchTagItem": {
      "title": "Search:Tag Item",
      "description": "The TagItems service entry point to search Tags across all Intersight REST resources using OData Query syntax.\nSee [Search Tags API query syntax](/apidocs/introduction/query/#search-tags-api) for details about the tag query syntax.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object"
        }
      ]
    },
    "searchTagItemList": {
      "properties": {
        "Count": {
          "description": "The number of searchTagItems matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of searchTagItems matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/searchTagItem"
          }
        }
      }
    },
    "securityUnitRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "securityUnit": {
      "title": "Security:Unit",
      "description": "The crypto card present on a server.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "OperState": {
              "type": "string",
              "readOnly": true
            },
            "Operability": {
              "type": "string",
              "readOnly": true
            },
            "PartNumber": {
              "type": "string",
              "readOnly": true
            },
            "PciSlot": {
              "type": "string",
              "readOnly": true
            },
            "Power": {
              "type": "string",
              "readOnly": true
            },
            "Presence": {
              "type": "string",
              "readOnly": true
            },
            "Thermal": {
              "type": "string",
              "readOnly": true
            },
            "UnitId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "Vid": {
              "type": "string",
              "readOnly": true
            },
            "Voltage": {
              "type": "string",
              "readOnly": true
            },
            "ComputeBoard": {
              "$ref": "#/definitions/computeBoardRef",
              "description": "A collection of references to the [compute.Board](mo://compute.Board) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.Board](mo://compute.Board) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "securityUnitList": {
      "properties": {
        "Count": {
          "description": "The number of securityUnits matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of securityUnits matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/securityUnit"
          }
        }
      }
    },
    "serverConfigChangeDetailRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "serverConfigChangeDetail": {
      "title": "Server:Config Change Detail",
      "description": "The configuration change details are captured here.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractConfigChangeDetail"
        },
        {
          "type": "object",
          "properties": {
            "Profile": {
              "$ref": "#/definitions/serverProfileRef",
              "description": "A collection of references to the [server.Profile](mo://server.Profile) Managed Object.\n\nWhen this managed object is deleted, the referenced [server.Profile](mo://server.Profile) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "serverConfigChangeDetailList": {
      "properties": {
        "Count": {
          "description": "The number of serverConfigChangeDetails matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of serverConfigChangeDetails matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/serverConfigChangeDetail"
          }
        }
      }
    },
    "serverConfigImportRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "serverConfigImport": {
      "title": "Server:Config Import",
      "description": "Configuration import action will import the existing configuration from physical server and generate Intersight policies and server profile from it. At end of successful import, server will be assigned to the generated profile which has policies associated with it. No server profile or policies will be generated if configuration import fails.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "type": "string",
              "description": "Description of the imported profile. \n"
            },
            "PolicyPrefix": {
              "type": "string",
              "description": "Policy prefix for the policies of the imported server profile. \n"
            },
            "PolicyTypes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Types of the policies to be imported for the imported server profile. \n"
            },
            "ProfileName": {
              "type": "string",
              "description": "Profile name for the imported server profile.  \n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            },
            "Server": {
              "$ref": "#/definitions/computeRackUnitRef",
              "description": "The physical server on which import action will be triggered.\n"
            },
            "ServerProfile": {
              "$ref": "#/definitions/serverProfileRef",
              "description": "The server profile which will be generated upon successful import.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "serverConfigImportList": {
      "properties": {
        "Count": {
          "description": "The number of serverConfigImports matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of serverConfigImports matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/serverConfigImport"
          }
        }
      }
    },
    "serverConfigResultRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "serverConfigResult": {
      "title": "Server:Config Result",
      "description": "The profile configuration (deploy, validation) results with the overall state and detailed result messages.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractConfigResult"
        },
        {
          "type": "object",
          "properties": {
            "Profile": {
              "$ref": "#/definitions/serverProfileRef",
              "description": "A collection of references to the [server.Profile](mo://server.Profile) Managed Object.\n\nWhen this managed object is deleted, the referenced [server.Profile](mo://server.Profile) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "ResultEntries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/serverConfigResultEntryRef"
              },
              "description": "Detailed result entries for both validation & configration. Each result entry can be error/warning/info messages and the context.\n"
            }
          }
        }
      ]
    },
    "serverConfigResultList": {
      "properties": {
        "Count": {
          "description": "The number of serverConfigResults matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of serverConfigResults matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/serverConfigResult"
          }
        }
      }
    },
    "serverConfigResultEntryRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "serverConfigResultEntry": {
      "title": "Server:Config Result Entry",
      "description": "The profile configuration (deploy, validation) results details information.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractConfigResultEntry"
        },
        {
          "type": "object",
          "properties": {
            "ConfigResult": {
              "$ref": "#/definitions/serverConfigResultRef",
              "description": "A collection of references to the [server.ConfigResult](mo://server.ConfigResult) Managed Object.\n\nWhen this managed object is deleted, the referenced [server.ConfigResult](mo://server.ConfigResult) MO unsets its reference to this deleted MO.\n"
            }
          }
        }
      ]
    },
    "serverConfigResultEntryList": {
      "properties": {
        "Count": {
          "description": "The number of serverConfigResultEntries matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of serverConfigResultEntries matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/serverConfigResultEntry"
          }
        }
      }
    },
    "serverProfileRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "serverProfile": {
      "title": "Server Profile",
      "description": "Server Profile enables server management using policies.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractConfigProfile"
        },
        {
          "type": "object",
          "properties": {
            "ConfigChanges": {
              "$ref": "#/definitions/policyConfigChange",
              "description": "Pending configuration changes at the summary level. Detail changes are saved in configChangeDetails as a separate object.  \n"
            },
            "AssignedServer": {
              "$ref": "#/definitions/computeRackUnitRef",
              "description": "The assigned physical server to the profile. A physical server can be assigned to more than one server profiles as long as it is only associated with one.\n"
            },
            "AssociatedServer": {
              "$ref": "#/definitions/computeRackUnitRef",
              "description": "The associated physical server to the profile. A physical server can only be associated to one server profiles.\n",
              "readOnly": true
            },
            "ConfigChangeDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/serverConfigChangeDetailRef"
              },
              "description": "The configuration change details are captured here.\n",
              "readOnly": true
            },
            "ConfigResult": {
              "$ref": "#/definitions/serverConfigResultRef",
              "description": "The configuration results including deploy, undeploy and compliance-check results. The errors usually are detected and reported during the apply/deploy phases.\n",
              "readOnly": true
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            },
            "RunningWorkflows": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/workflowWorkflowInfoRef"
              },
              "description": "The WorkflowInfos in the workflow engine that are running for this server Profile.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "serverProfileList": {
      "properties": {
        "Count": {
          "description": "The number of serverProfiles matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of serverProfiles matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/serverProfile"
          }
        }
      }
    },
    "serverProfileApplyTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "serverResultHandlerTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "smtpDeployTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "smtpPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "smtpPolicy": {
      "title": "SMTP",
      "description": "Name that identifies the SMTP Policy.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "If enabled, controls the state of the SMTP client service on the managed device. \n",
              "x-nullable": true
            },
            "MinSeverity": {
              "type": "string",
              "enum": [
                "critical",
                "condition",
                "warning",
                "minor",
                "major"
              ],
              "default": "critical",
              "description": "Minimum fault severity level to receive email notifications. Email notifications are sent for all faults whose severity is equal to or greater than the chosen level. \n"
            },
            "SenderEmail": {
              "type": "string",
              "description": "The email address entered here will be displayed as the from address (mail received from address) of all the SMTP mail alerts that are received. If not configured, the hostname of the server is used in the from address field. \n"
            },
            "SmtpPort": {
              "type": "integer",
              "format": "int64",
              "description": "Port number used by the SMTP server for outgoing SMTP communication. \n"
            },
            "SmtpRecipients": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of email addresses that will receive notifications for faults. \n"
            },
            "SmtpServer": {
              "type": "string",
              "description": "IP address or hostname of the SMTP server. The SMTP server is used by the managed device to send email notifications.  \n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            },
            "Profiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/policyAbstractConfigProfileRef"
              },
              "description": "Relationship to the profile object.\n"
            }
          }
        }
      ]
    },
    "smtpPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of smtpPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of smtpPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/smtpPolicy"
          }
        }
      }
    },
    "smtpValidationTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "snmpDeployTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "snmpPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "snmpPolicy": {
      "title": "SNMP",
      "description": "Policy to configure SNMP settings on endpoint.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "AccessCommunityString": {
              "type": "string",
              "description": "The default SNMPv1, SNMPv2c community name or SNMPv3 username to include on any trap messages sent to the SNMP host. The name can be 18 characters long. \n"
            },
            "CommunityAccess": {
              "type": "string",
              "enum": [
                "Disabled",
                "Limited",
                "Full"
              ],
              "default": "Disabled",
              "description": "Controls access to the information in the inventory tables. Applicable only for SNMPv1 and SNMPv2c users. \n"
            },
            "Enabled": {
              "type": "boolean",
              "description": "State of the SNMP Policy on the endpoint. If enabled, the endpoint sends SNMP traps to the designated host. \n",
              "x-nullable": true
            },
            "EngineId": {
              "type": "string",
              "description": "User-defined unique identification of the static engine. \n"
            },
            "SnmpPort": {
              "type": "integer",
              "format": "int64",
              "description": "Port on which Cisco IMC SNMP agent runs. \n"
            },
            "SnmpTraps": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/snmpTrap"
              },
              "description": "List of SNMP traps for the policy. \n"
            },
            "SnmpUsers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/snmpUser"
              },
              "description": "List of SNMP users for the policy. \n"
            },
            "SysContact": {
              "type": "string",
              "description": "Contact person responsible for the SNMP implementation. Enter a string up to 64 characters, such as an email address or a name and telephone number. \n"
            },
            "SysLocation": {
              "type": "string",
              "description": "Location of host on which the SNMP agent (server) runs. \n"
            },
            "TrapCommunity": {
              "type": "string",
              "description": "SNMP community group used for sending SNMP trap to other devices. Valid only for SNMPv2c users.  \n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            },
            "Profiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/policyAbstractConfigProfileRef"
              },
              "description": "Relationship to the profile object.\n"
            }
          }
        }
      ]
    },
    "snmpPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of snmpPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of snmpPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/snmpPolicy"
          }
        }
      }
    },
    "snmpTrapRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "snmpTrap": {
      "title": "Snmp:Trap",
      "description": "Complex type that models a trap message sent from an agent to the manager.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Destination": {
              "type": "string",
              "description": "Address to which the SNMP trap information is sent. \n"
            },
            "Enabled": {
              "type": "boolean",
              "description": "Enables/disables the trap on the server If enabled, trap is active on the server. \n",
              "x-nullable": true
            },
            "Port": {
              "type": "integer",
              "format": "int64",
              "description": "Port used by the server to communicate with trap destination. Enter a value between 1-65535. \n"
            },
            "Type": {
              "type": "string",
              "enum": [
                "Trap",
                "Inform"
              ],
              "default": "Trap",
              "description": "Type of trap which decides whether to receive a notification when a trap is received at the destination. \n"
            },
            "User": {
              "type": "string",
              "description": "SNMP user for the trap. Applicable only to SNMPv3. \n"
            },
            "Version": {
              "type": "string",
              "enum": [
                "V3",
                "V2"
              ],
              "default": "V3",
              "description": "SNMP version used for the trap.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "snmpUserRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "snmpUser": {
      "title": "Snmp:User",
      "description": "Complex type for a User based security model, for communication between an agent and manager. Applicable only for SNMPv3.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "IsAuthPasswordSet": {
              "type": "boolean",
              "readOnly": true,
              "description": "Indicates whether the value of the 'authPassword' property has been set. \n"
            },
            "AuthPassword": {
              "type": "string",
              "description": "Authorization password for the user. \n",
              "x-writeOnly": true
            },
            "AuthType": {
              "type": "string",
              "enum": [
                "NA",
                "MD5",
                "SHA"
              ],
              "default": "NA",
              "description": "Authorization protocol for authenticating the user. \n"
            },
            "IsPrivacyPasswordSet": {
              "type": "boolean",
              "readOnly": true
            },
            "Name": {
              "type": "string",
              "description": "SNMP username. Must have a minimum of 1 and and a maximum of 31 characters. \n"
            },
            "PrivacyPassword": {
              "type": "string",
              "description": "Privacy password for the user. \n",
              "x-writeOnly": true
            },
            "PrivacyType": {
              "type": "string",
              "enum": [
                "NA",
                "DES",
                "AES"
              ],
              "default": "NA",
              "description": "Privacy protocol for the user. \n"
            },
            "SecurityLevel": {
              "type": "string",
              "enum": [
                "AuthPriv",
                "NoAuthNoPriv",
                "AuthNoPriv"
              ],
              "default": "AuthPriv",
              "description": "Security mechanism used for communication between agent and manager.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "snmpValidationTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "softwareHclMetaRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "softwareHclMeta": {
      "title": "Json For Hcl Meta",
      "description": "A Json file consisting Hcl meta uploaded to be consumed by HCL service.\n",
      "allOf": [
        {
          "$ref": "#/definitions/firmwareBaseDistributable"
        },
        {
          "type": "object",
          "properties": {
            "ContentType": {
              "type": "string",
              "enum": [
                "Full",
                "Incremental"
              ],
              "default": "Full",
              "description": "Indicates what type of content the Json file is holding(Incremental or full dump).  \n"
            },
            "Catalog": {
              "$ref": "#/definitions/softwarerepositoryCatalogRef",
              "description": "The catalog where this file is present.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "softwareHclMetaList": {
      "properties": {
        "Count": {
          "description": "The number of softwareHclMeta matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of softwareHclMeta matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/softwareHclMeta"
          }
        }
      }
    },
    "softwareHyperflexDistributableRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "softwareHyperflexDistributable": {
      "title": "HyperFlex",
      "description": "A HyperFlex image distributed by Cisco.\n",
      "allOf": [
        {
          "$ref": "#/definitions/firmwareBaseDistributable"
        },
        {
          "type": "object",
          "properties": {
            "Catalog": {
              "$ref": "#/definitions/softwarerepositoryCatalogRef",
              "description": "The catalog where this image is present.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "softwareHyperflexDistributableList": {
      "properties": {
        "Count": {
          "description": "The number of softwareHyperflexDistributables matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of softwareHyperflexDistributables matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/softwareHyperflexDistributable"
          }
        }
      }
    },
    "softwarerepositoryAuthorizationRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "softwarerepositoryAuthorization": {
      "title": "Softwarerepository:Authorization",
      "description": "Consent that a user has provided to Intersight for contacting an external software repository such as cisco.com, on the user account's behalf.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "IsPasswordSet": {
              "type": "boolean",
              "x-nullable": true
            },
            "IsUserIdSet": {
              "type": "boolean",
              "x-nullable": true
            },
            "Password": {
              "type": "string",
              "description": "The password that will be used by Intersight to create OAuth2 tokens for interacting with the external repository, on the user account's behalf. \n"
            },
            "RepositoryType": {
              "type": "string",
              "enum": [
                "Cisco",
                "IntersightCloud",
                "LocalMachine",
                "NetworkShare"
              ],
              "default": "Cisco",
              "description": "The external repository for which this authorization has been provided. The only supported repository today is cisco.com. \n"
            },
            "UserId": {
              "type": "string",
              "description": "The username that will be used by Intersight to create OAuth2 tokens for interacting with the external repository, on the user account's behalf.  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "The account, on behalf of which, the authorization is being provided.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "softwarerepositoryAuthorizationList": {
      "properties": {
        "Count": {
          "description": "The number of softwarerepositoryAuthorizations matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of softwarerepositoryAuthorizations matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/softwarerepositoryAuthorization"
          }
        }
      }
    },
    "softwarerepositoryCatalogRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "softwarerepositoryCatalog": {
      "title": "Softwarerepository:Catalog",
      "description": "A container MO that holds references to the files in an account's image repository. It is internally created for each account and is used to hold information about all user uploaded files.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "The name of the catalog. The names are populated and predefined during MO creation.  \n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "The organization under which this catalog exists. This relation will not be populated for the system catalog.\n",
              "readOnly": true
            },
            "System": {
              "$ref": "#/definitions/iamSystemRef",
              "description": "The system under which this catalog exists. This relation will not be populated for organization catalogs.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "softwarerepositoryCatalogList": {
      "properties": {
        "Count": {
          "description": "The number of softwarerepositoryCatalogs matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of softwarerepositoryCatalogs matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/softwarerepositoryCatalog"
          }
        }
      }
    },
    "softwarerepositoryCifsServerRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "softwarerepositoryCifsServer": {
      "title": "CIFS",
      "description": "An external file repository accessible through the CIFS protocol.\n",
      "allOf": [
        {
          "$ref": "#/definitions/softwarerepositoryFileServer"
        },
        {
          "type": "object",
          "properties": {
            "IsPasswordSet": {
              "type": "boolean",
              "x-nullable": true
            },
            "MountOption": {
              "type": "string",
              "description": "For CIFS, leave the field blank or enter one or more comma seperated options from the following. For Example, \" \" , \" soft \" , \" soft , nounix \" .\n* soft.\n* nounix.\n* noserviceino.\n* guest.\n* USERNAME=VALUE.\n* PASSWORD=VALUE.\n* sec=VALUE (VALUE could be None, Ntlm, Ntlmi, Ntlmssp, Ntlmsspi, Ntlmv2, Ntlmv2i).\n \n"
            },
            "Password": {
              "type": "string",
              "description": "Password configured on the file server. \n"
            },
            "RemoteFile": {
              "type": "string",
              "description": "Filename of the image in the CIFS server. For example:ucs-c220m5-huu-3.1.2c.iso. \n"
            },
            "RemoteIp": {
              "type": "string",
              "description": "Hostname or IP Address of the CIFS server. \n"
            },
            "RemoteShare": {
              "type": "string",
              "description": "Remote directory where the image is present. For example:/share/subfolder. \n"
            },
            "Username": {
              "type": "string",
              "description": "Username configured on the CIFS server.  \n"
            }
          }
        }
      ]
    },
    "softwarerepositoryDownloadResultHandlerRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "softwarerepositoryDownloadSpecRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "softwarerepositoryFileRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "softwarerepositoryFile": {
      "title": "Softwarerepository:File",
      "description": "A file that resides either in an external repository or has been imported to the local repository. If the file is available in the local repository, it is marked as cached. If not, it represents a pointer to a file in an external repository. Instances of this MO will be implicitly created as part of the file import operation.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "type": "string",
              "description": "User provided description about the file. Cisco provided description for image inventoried from a Cisco repository. \n"
            },
            "DownloadCount": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "The number of times this file has been downloaded from the local repository. It is used by the repository monitoring process to determine the files that are to be evicted from the cache. \n"
            },
            "ImportAction": {
              "type": "string",
              "enum": [
                "None",
                "GeneratePreSignedUploadUrl",
                "GeneratePreSignedDownloadUrl",
                "CompleteImportProcess",
                "PreCache",
                "Cancel",
                "Evict"
              ],
              "default": "None",
              "description": "The action to be performed on the imported file. If 'PreCache' is set, the image will be cached in Appliance. Applicable in Intersight appliance deployment. If 'Evict' is set, the cached file will be removed. Applicable in Intersight appliance deployment. If 'GeneratePreSignedUploadUrl' is set, generates pre signed URL (s) for the file to be imported into the repository. Applicable for local machine source. The URL (s) will be populated under LocalMachine file server. If 'CompleteImportProcess' is set, the ImportState is marked as 'Imported'. Applicable for local machine source. If 'Cancel' is set, the ImportState is marked as 'Failed'. Applicable for local machine source.  \n"
            },
            "ImportState": {
              "type": "string",
              "enum": [
                "ReadyForImport",
                "Importing",
                "Imported",
                "Failed",
                "MetaOnly",
                "ReadyForCache",
                "Caching",
                "Cached",
                "CachingFailed",
                "Corrupted",
                "Evicted"
              ],
              "default": "ReadyForImport",
              "readOnly": true,
              "description": "The state  of this file in the repository or Appliance. The importState is updated during the import operation and as part of the repository monitoring process. \n"
            },
            "ImportedTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "The time at which this image or file was imported/cached into the repositry. if the 'ImportState' is 'Imported', the time at which this image or file was imported. if the 'ImportState' is 'Cached', the time at which this image or file was cached. \n"
            },
            "LastAccessTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "The time at which this file was last downloaded from the local repository. It is used by the repository monitoring process to determine the files that are to be evicted from the cache. \n"
            },
            "Md5sum": {
              "type": "string",
              "x-createOnly": true,
              "description": "The md5sum checksum of the file. This information is available for all Cisco distributed images and files imported to the local repository. \n"
            },
            "Name": {
              "type": "string",
              "description": "The name of the file. It is populated as part of the image import operation.  \n"
            },
            "ReleaseDate": {
              "type": "string",
              "format": "date-time",
              "description": "The date on which the file was released or distributed by its vendor. \n"
            },
            "Sha512sum": {
              "type": "string",
              "x-createOnly": true,
              "description": "The sha512sum of the file. This information is available for all Cisco distributed images and files imported to the local repository. \n"
            },
            "Size": {
              "type": "integer",
              "format": "int64",
              "description": "The size (in bytes) of the file. This information is available for all Cisco distributed images and files imported to the local repository. \n"
            },
            "SoftwareAdvisoryUrl": {
              "type": "string",
              "description": "The software advisory, if any, provided by the vendor for this file. \n"
            },
            "Source": {
              "$ref": "#/definitions/softwarerepositoryFileServer",
              "description": "Location of the file in an external repository.  \n"
            },
            "Version": {
              "type": "string",
              "description": "Vendor provided version for the file.  \n"
            }
          }
        }
      ]
    },
    "softwarerepositoryFileServerRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "softwarerepositoryFileServer": {
      "title": "Softwarerepository:File Server",
      "description": "An external software repository which serves as the source of the file to be imported into the image catalog. If the source is the user's local machine, the file is copied/imported into Intersight's local repository. If not, only a pointer to the file in the external repository is created in the image catalog.\nFor more information, please refer to the softwarerepositoryUploader and softwarerepositoryFile object descriptions where this type is used.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "softwarerepositoryHttpServerRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "softwarerepositoryHttpServer": {
      "title": "HTTP/S",
      "description": "An external HTTP file server. This can represent the cisco.com website or a HTTP server in the user's datacenter.\n",
      "allOf": [
        {
          "$ref": "#/definitions/softwarerepositoryFileServer"
        },
        {
          "type": "object",
          "properties": {
            "IsPasswordSet": {
              "type": "boolean",
              "x-nullable": true
            },
            "LocationLink": {
              "type": "string",
              "description": "HTTP/HTTPS link to the image. Accepted formats are HTTP[s]://server-hostname/share/image or HTTP[s]://serverip/share/image. \n"
            },
            "Password": {
              "type": "string",
              "description": "Password as configured on the HTTP[S] server for user authentication. It is generally required to authenticate user provided HTTP[S] based software repositories. \n"
            },
            "Username": {
              "type": "string",
              "description": "Username as configured on the HTTP[S] server for user authentication. It is generally required to authenticate user provided HTTP[S] based software repositories.  \n"
            }
          }
        }
      ]
    },
    "softwarerepositoryImportResultRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "softwarerepositoryImportResult": {
      "title": "Softwarerepository:Import Result",
      "description": "The status of the import operation.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "ErrorMessage": {
              "type": "string",
              "readOnly": true,
              "description": "The reason for the failure of an import operation, if applicable. \n"
            },
            "Progress": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "The progress percentage of the import operation.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "softwarerepositoryInitiateDownloadRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "softwarerepositoryLocalMachineRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "softwarerepositoryLocalMachine": {
      "title": "Local Machine",
      "description": "The user's local machine is being used as the source of an image.\n",
      "allOf": [
        {
          "$ref": "#/definitions/softwarerepositoryFileServer"
        },
        {
          "type": "object",
          "properties": {
            "DownloadUrl": {
              "type": "string",
              "readOnly": true,
              "description": "When import action in file MO is updated with 'GeneratePreSignedDownloadUrl', Intersight shall return a presigned URL in this property as part of the PATCH response. The user is expected to subsequently download the file using this URL. \n"
            },
            "PartSize": {
              "type": "integer",
              "format": "int64",
              "description": "Chunk size (in bytes) of the each part of file to be uploaded. \n"
            },
            "UploadId": {
              "type": "string",
              "description": "When the import action in file MO is updated with 'GeneratePreSignedUploadUrl', Intersight shall return a upload Id in this property as part of the PATCH response. \n"
            },
            "UploadUrl": {
              "type": "string",
              "readOnly": true,
              "description": "When a file MO is created with 'LocalMachine' as the source, Intersight shall return a presigned URL in this property as part of the POST response. The user is expected to subsequently upload the file content using this URL. Once this upload has been completed, the user is expected to PATCH the Uploader object's transfer state to success. \n"
            },
            "UploadUrls": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "When an file MO is created with 'LocalMachine' as the source, Intersight shall return a list of presigned URLs in this property as part of the POST response. The user is expected to subsequently upload the file content in parts using these URLs. Once these uploads have been completed, the user is expected to PATCH the Uploader object's transfer state to success.  \n"
            }
          }
        }
      ]
    },
    "softwarerepositoryNfsServerRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "softwarerepositoryNfsServer": {
      "title": "NFS",
      "description": "An external file repository accessible through the NFS protocol.\n",
      "allOf": [
        {
          "$ref": "#/definitions/softwarerepositoryFileServer"
        },
        {
          "type": "object",
          "properties": {
            "MountOptions": {
              "type": "string",
              "readOnly": true,
              "description": "For NFS, leave the field blank or enter one or more comma seperated options from the following.For Example, \" \" , \" ro \" , \" ro , rw \" .\n* ro.\n* rw.\n* nolock.\n* noexec.\n* soft.\n* PORT=VALUE.\n* timeo=VALUE.\n* retry=VALUE.\n \n"
            },
            "RemoteFile": {
              "type": "string",
              "description": "Filename of the image in the NFS server. For example:ucs-c220m5-huu-3.1.2c.iso. \n"
            },
            "RemoteIp": {
              "type": "string",
              "description": "Hostname or IP Address of the NFS server. \n"
            },
            "RemoteShare": {
              "type": "string",
              "description": "Remote directory where the image is present. For example:/share/subfolder.  \n"
            }
          }
        }
      ]
    },
    "softwarerepositoryOperatingSystemFileRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "softwarerepositoryOperatingSystemFile": {
      "title": "Operating System",
      "description": "An operating system image that resides either in an external repository or has been imported to the local repository. If the file is available in the local repository, it is marked as cached. If not, it represents a pointer to a file in an external repository.\n",
      "allOf": [
        {
          "$ref": "#/definitions/softwarerepositoryFile"
        },
        {
          "type": "object",
          "properties": {
            "Vendor": {
              "type": "string",
              "description": "The vendor or publisher of this file.  \n"
            },
            "Catalog": {
              "$ref": "#/definitions/softwarerepositoryCatalogRef",
              "description": "The catalog where this image is present.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "softwarerepositoryOperatingSystemFileList": {
      "properties": {
        "Count": {
          "description": "The number of softwarerepositoryOperatingSystemFiles matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of softwarerepositoryOperatingSystemFiles matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/softwarerepositoryOperatingSystemFile"
          }
        }
      }
    },
    "softwarerepositoryPrepareUploaderRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "softwarerepositoryUsageSummaryRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "softwarerepositoryWaitForDownloadRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "solDeployTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "solPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "solPolicy": {
      "title": "Serial Over LAN",
      "description": "Policy for configuring Serial Over LAN settings on endpoint.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "BaudRate": {
              "type": "integer",
              "enum": [
                9600,
                19200,
                38400,
                57600,
                115200
              ],
              "default": 9600,
              "description": "Baud Rate used for Serial Over LAN communication. \n"
            },
            "ComPort": {
              "type": "string",
              "enum": [
                "com0",
                "com1"
              ],
              "default": "com0",
              "description": "Serial port through which the system routes Serial Over LAN communication. This field is available only on some Cisco UCS C-Series servers. If it is unavailable, the server uses COM port 0 by default. \n"
            },
            "Enabled": {
              "type": "boolean",
              "description": "State of Serial Over LAN service on the endpoint. \n",
              "x-nullable": true
            },
            "SshPort": {
              "type": "integer",
              "format": "int64",
              "description": "SSH port used to access Serial Over LAN directly. Enables bypassing Cisco IMC shell to provide direct access to Serial Over LAN.  \n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            },
            "Profiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/policyAbstractConfigProfileRef"
              },
              "description": "Relationship to the profile object.\n"
            }
          }
        }
      ]
    },
    "solPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of solPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of solPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/solPolicy"
          }
        }
      }
    },
    "solValidationTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "sshDeployTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "sshPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "sshPolicy": {
      "title": "SSH",
      "description": "Secure shell policy on the endpoint.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "State of SSH service on the endpoint. \n",
              "x-nullable": true
            },
            "Port": {
              "type": "integer",
              "format": "int64",
              "description": "Port used for secure shell access. \n"
            },
            "Timeout": {
              "type": "integer",
              "format": "int64",
              "description": "Number of seconds to wait before the system considers a SSH request to have timed out.  \n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            },
            "Profiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/policyAbstractConfigProfileRef"
              },
              "description": "Relationship to the server profile.\n"
            }
          }
        }
      ]
    },
    "sshPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of sshPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of sshPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/sshPolicy"
          }
        }
      }
    },
    "sshValidationTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageAnalyzeImpactTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageArrayControllerRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageArrayController": {
      "title": "Storage:Array Controller",
      "description": "Common attributes for Storage array controller. It can be a hardware or software unit which manages the physical storage disk available in array.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "Storage array controller name. \n"
            },
            "OperationalMode": {
              "type": "string",
              "enum": [
                "Unknown",
                "Primary",
                "Secondary",
                "Maintenance"
              ],
              "default": "Unknown",
              "readOnly": true,
              "description": "Controller running mode, Primary or Secondary. \n"
            },
            "Status": {
              "type": "string",
              "enum": [
                "Unknown",
                "Ok",
                "Degraded",
                "Critical",
                "Offline",
                "Identifying",
                "NotAvailable",
                "Updating",
                "Unrecognized"
              ],
              "default": "Unknown",
              "readOnly": true,
              "description": "Status of the storage controller. \n"
            },
            "Version": {
              "type": "string",
              "readOnly": true,
              "description": "Software version running on a storage controller.  \n"
            },
            "StorageArray": {
              "$ref": "#/definitions/storageGenericArrayRef",
              "description": "Storage array managed object.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storageArrayDiskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageArrayDisk": {
      "title": "Storage:Array Disk",
      "description": "Common attributes of storage array disk.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "Disk name available in storage array. \n"
            },
            "PartNumber": {
              "type": "string",
              "readOnly": true,
              "description": "Storage disk part number. \n"
            },
            "Protocol": {
              "type": "string",
              "enum": [
                "Unknown",
                "SAS",
                "NVMe",
                "SATA"
              ],
              "default": "Unknown",
              "readOnly": true,
              "description": "Storage protocol used in disk for communication. Possible values are SAS, SATA and NVMe. \n"
            },
            "Speed": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Disk speed for read or write operation measured in rpm. \n"
            },
            "Status": {
              "type": "string",
              "enum": [
                "Unknown",
                "Ok",
                "Degraded",
                "Critical",
                "Offline",
                "Identifying",
                "NotAvailable",
                "Updating",
                "Unrecognized"
              ],
              "default": "Unknown",
              "readOnly": true,
              "description": "Storage disk health status. \n"
            },
            "StorageUtilization": {
              "$ref": "#/definitions/storageCapacity",
              "readOnly": true,
              "description": "Storage utilization information of storage disk. \n"
            },
            "Type": {
              "type": "string",
              "enum": [
                "Unknown",
                "SSD",
                "HDD",
                "NVRAM"
              ],
              "default": "Unknown",
              "readOnly": true,
              "description": "Storage disk type, it can be SSD, HDD, NVRAM. \n"
            },
            "Version": {
              "type": "string",
              "readOnly": true,
              "description": "Storage disk version number.  \n"
            },
            "StorageArray": {
              "$ref": "#/definitions/storageGenericArrayRef",
              "description": "Storage array managed object.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storageCapacityRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageCapacity": {
      "title": "Storage:Capacity",
      "description": "Storage capacity information which includes, total capacity, available capacity, used capacity and free capacity.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Available": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Total consumable storage capacity represented in bytes. System may reserve some space for internal purpose which is excluded from total capacity. \n"
            },
            "Free": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Unused space available for user to consume, represented in bytes. \n"
            },
            "Total": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Total storage capacity, represented in bytes. It is set by the component manufacture. \n"
            },
            "Used": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Used or consumed storage capacity, represented in bytes.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "storageConfigImportTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageControllerRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageController": {
      "title": "Storage:Controller",
      "description": "Storage Controller present in a server.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "ControllerFlags": {
              "type": "string",
              "readOnly": true
            },
            "ControllerId": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the Id of controller. \n"
            },
            "ControllerStatus": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the current status of controller. \n"
            },
            "HwRevision": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the hardware revision of controller. \n"
            },
            "OobInterfaceSupported": {
              "type": "string",
              "readOnly": true,
              "description": "It shows CIMC support for out-of-band configuration of controller. \n"
            },
            "OperState": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the current operational state of controller. \n"
            },
            "Operability": {
              "type": "string",
              "readOnly": true
            },
            "PciAddr": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the current pci address of controller. \n"
            },
            "PciSlot": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the pci slot name for the controller. \n"
            },
            "Presence": {
              "type": "string",
              "readOnly": true,
              "description": "It shows physical presence or absence of the controller on server. \n"
            },
            "RaidSupport": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the RAID levels supported by controller. \n"
            },
            "RebuildRate": {
              "type": "string",
              "readOnly": true
            },
            "SelfEncryptEnabled": {
              "type": "string"
            },
            "Type": {
              "type": "string",
              "readOnly": true,
              "description": "Controller types are SAS, SATA, PCH, NVME.  \n"
            },
            "ComputeBoard": {
              "$ref": "#/definitions/computeBoardRef",
              "description": "A collection of references to the [compute.Board](mo://compute.Board) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.Board](mo://compute.Board) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "PhysicalDiskExtensions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storagePhysicalDiskExtensionRef"
              },
              "description": "Indicates a SCSI controller has physical connectivity to specified physical disk.\n",
              "readOnly": true
            },
            "PhysicalDisks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storagePhysicalDiskRef"
              },
              "description": "Physical Disk on a server.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            },
            "RunningFirmware": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/firmwareRunningFirmwareRef"
              },
              "readOnly": true
            },
            "VirtualDriveExtensions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storageVirtualDriveExtensionRef"
              },
              "readOnly": true
            },
            "VirtualDrives": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storageVirtualDriveRef"
              },
              "description": "Storage physical drives are grouped as Drive Group, a drive group then can be partitioned into virtual drives.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storageControllerList": {
      "properties": {
        "Count": {
          "description": "The number of storageControllers matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storageControllers matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageController"
          }
        }
      }
    },
    "storageDeployTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageDiskGroupPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageDiskGroupPolicy": {
      "title": "Disk Group",
      "description": "A reusable RAID disk group configuration that can be applied across multiple servers. Also provides options to move JBOD disks in the disk group to Unconfigured Good state before they are used in the disk group.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "DedicatedHotSpares": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storageLocalDisk"
              },
              "description": "A collection of disks used as hot spares for this RAID group.  \n"
            },
            "RaidLevel": {
              "type": "string",
              "enum": [
                "Raid0",
                "Raid1",
                "Raid5",
                "Raid6",
                "Raid10",
                "Raid50",
                "Raid60"
              ],
              "default": "Raid0",
              "description": "The supported RAID level for the disk group. \n"
            },
            "SpanGroups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storageSpanGroup"
              },
              "description": "Non spanned RAID levels like Raid0, Raid1, Raid5 and Raid6 expect a single group of disks whereas spanned RAID levels need multiple groups of disks with each group representing a span group. Non spanned RAID levels expect one span group and spanned RAID levels accept minimum 2 span groups and up to 8. \n"
            },
            "UseJbods": {
              "type": "boolean",
              "description": "Selected disks in the disk group in JBOD state will be set to Unconfigured Good state before they are used in virtual drive creation.  \n",
              "x-nullable": true
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            },
            "StoragePolicies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storageStoragePolicyRef"
              },
              "description": "A collection of references to the [storage.StoragePolicy](mo://storage.StoragePolicy) Managed Object.\n\nWhen this managed object is deleted, the referenced [storage.StoragePolicy](mo://storage.StoragePolicy) MOs unset their reference to this deleted MO.\n"
            }
          }
        }
      ]
    },
    "storageDiskGroupPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of storageDiskGroupPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storageDiskGroupPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageDiskGroupPolicy"
          }
        }
      }
    },
    "storageDiskUtilizationRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageDiskUtilization": {
      "title": "Storage:Disk Utilization",
      "description": "Storage space utilization of Pure FlashArray drive entity.\n",
      "allOf": [
        {
          "$ref": "#/definitions/storageCapacity"
        },
        {
          "type": "object"
        }
      ]
    },
    "storageEnclosureRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageEnclosure": {
      "title": "Storage:Enclosure",
      "description": "Storage Enclosure for physical disks.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "ChassisId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "Description": {
              "type": "string",
              "readOnly": true
            },
            "EnclosureId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "NumSlots": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "Presence": {
              "type": "string",
              "readOnly": true
            },
            "ServerId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "Type": {
              "type": "string",
              "readOnly": true
            },
            "ComputeBlade": {
              "$ref": "#/definitions/computeBladeRef",
              "description": "A collection of references to the [compute.Blade](mo://compute.Blade) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.Blade](mo://compute.Blade) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "ComputeRackUnit": {
              "$ref": "#/definitions/computeRackUnitRef",
              "description": "A collection of references to the [compute.RackUnit](mo://compute.RackUnit) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.RackUnit](mo://compute.RackUnit) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "EnclosureDiskSlots": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storageEnclosureDiskSlotEpRef"
              },
              "readOnly": true
            },
            "EnclosureDisks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storageEnclosureDiskRef"
              },
              "readOnly": true
            },
            "EquipmentChassis": {
              "$ref": "#/definitions/equipmentChassisRef",
              "description": "A collection of references to the [equipment.Chassis](mo://equipment.Chassis) Managed Object.\n\nWhen this managed object is deleted, the referenced [equipment.Chassis](mo://equipment.Chassis) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "PhysicalDisks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storagePhysicalDiskRef"
              },
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storageEnclosureList": {
      "properties": {
        "Count": {
          "description": "The number of storageEnclosures matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storageEnclosures matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageEnclosure"
          }
        }
      }
    },
    "storageEnclosureDiskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageEnclosureDisk": {
      "title": "Storage:Enclosure Disk",
      "description": "Physical Disk on the enclosure.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "BlockSize": {
              "type": "string",
              "description": "The block size of the physical disk in bytes. \n"
            },
            "DiskId": {
              "type": "string",
              "description": "This field represents the disk Id in the storage enclosure. \n"
            },
            "DiskState": {
              "type": "string",
              "description": "This field identifies the current disk configuration applied in the physical disk. \n"
            },
            "Health": {
              "type": "string"
            },
            "NumBlocks": {
              "type": "string",
              "description": "The number of blocks present on the physical disk. \n"
            },
            "Pid": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the Product ID for physicalDisk. \n"
            },
            "SasAddress1": {
              "type": "string",
              "description": "This field identifies the SAS address assigned to the disk SAS port-1. \n"
            },
            "SasAddress2": {
              "type": "string",
              "description": "This field identifies the SAS address assigned to the disk SAS port-2. \n"
            },
            "Size": {
              "type": "string",
              "description": "The size of the physical disk in MB.  \n"
            },
            "PhysicalDisk": {
              "$ref": "#/definitions/storagePhysicalDiskRef",
              "description": "Physical Disk on a server.\n"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            },
            "StorageEnclosure": {
              "$ref": "#/definitions/storageEnclosureRef",
              "description": "A collection of references to the [storage.Enclosure](mo://storage.Enclosure) Managed Object.\n\nWhen this managed object is deleted, the referenced [storage.Enclosure](mo://storage.Enclosure) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storageEnclosureDiskList": {
      "properties": {
        "Count": {
          "description": "The number of storageEnclosureDisks matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storageEnclosureDisks matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageEnclosureDisk"
          }
        }
      }
    },
    "storageEnclosureDiskSlotEpRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageEnclosureDiskSlotEp": {
      "title": "Storage:Enclosure Disk Slot Ep",
      "description": "Physical Disk slots on the enclosure.\n",
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "type": "object",
          "properties": {
            "DrivePath": {
              "type": "string",
              "description": "This field identifies the zoning configuration applied to  this enclosure slot. \n"
            },
            "Health": {
              "type": "string",
              "description": "This field identifies the health of the disk inserted in the slot. \n"
            },
            "Presence": {
              "type": "string",
              "description": "This field identifies the disk is present in the enclosure slot. \n"
            },
            "Slot": {
              "type": "string",
              "description": "This field represents the slot Id in the storage enclosure.  \n"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            },
            "StorageEnclosure": {
              "$ref": "#/definitions/storageEnclosureRef",
              "description": "A collection of references to the [storage.Enclosure](mo://storage.Enclosure) Managed Object.\n\nWhen this managed object is deleted, the referenced [storage.Enclosure](mo://storage.Enclosure) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storageEnclosureDiskSlotEpList": {
      "properties": {
        "Count": {
          "description": "The number of storageEnclosureDiskSlotEps matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storageEnclosureDiskSlotEps matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageEnclosureDiskSlotEp"
          }
        }
      }
    },
    "storageFlexFlashControllerRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageFlexFlashController": {
      "title": "Storage:Flex Flash Controller",
      "description": "Storage Flex Flash Controller.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "ControllerState": {
              "type": "string",
              "readOnly": true
            },
            "FfControllerId": {
              "type": "string",
              "readOnly": true
            },
            "ComputeBoard": {
              "$ref": "#/definitions/computeBoardRef",
              "description": "A collection of references to the [compute.Board](mo://compute.Board) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.Board](mo://compute.Board) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "FlexFlashControllerProps": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storageFlexFlashControllerPropsRef"
              },
              "readOnly": true
            },
            "FlexFlashPhysicalDrives": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storageFlexFlashPhysicalDriveRef"
              },
              "readOnly": true
            },
            "FlexFlashVirtualDrives": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storageFlexFlashVirtualDriveRef"
              },
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storageFlexFlashControllerList": {
      "properties": {
        "Count": {
          "description": "The number of storageFlexFlashControllers matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storageFlexFlashControllers matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageFlexFlashController"
          }
        }
      }
    },
    "storageFlexFlashControllerPropsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageFlexFlashControllerProps": {
      "title": "Storage:Flex Flash Controller Props",
      "description": "Flex flash controller properties.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "CardsManageable": {
              "type": "string"
            },
            "ConfiguredMode": {
              "type": "string"
            },
            "ControllerName": {
              "type": "string"
            },
            "ControllerStatus": {
              "type": "string"
            },
            "FwVersion": {
              "type": "string"
            },
            "InternalState": {
              "type": "string"
            },
            "OperatingMode": {
              "type": "string"
            },
            "PhysicalDriveCount": {
              "type": "string"
            },
            "ProductName": {
              "type": "string"
            },
            "StartupFwVersion": {
              "type": "string"
            },
            "VirtualDriveCount": {
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            },
            "StorageFlexFlashController": {
              "$ref": "#/definitions/storageFlexFlashControllerRef",
              "description": "A collection of references to the [storage.FlexFlashController](mo://storage.FlexFlashController) Managed Object.\n\nWhen this managed object is deleted, the referenced [storage.FlexFlashController](mo://storage.FlexFlashController) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storageFlexFlashControllerPropsList": {
      "properties": {
        "Count": {
          "description": "The number of storageFlexFlashControllerProps matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storageFlexFlashControllerProps matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageFlexFlashControllerProps"
          }
        }
      }
    },
    "storageFlexFlashPhysicalDriveRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageFlexFlashPhysicalDrive": {
      "title": "Storage:Flex Flash Physical Drive",
      "description": "Physical Drive repersenting a SD Card.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "CardStatus": {
              "type": "string"
            },
            "CardType": {
              "type": "string"
            },
            "OemId": {
              "type": "string"
            },
            "PdStatus": {
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            },
            "StorageFlexFlashController": {
              "$ref": "#/definitions/storageFlexFlashControllerRef",
              "description": "A collection of references to the [storage.FlexFlashController](mo://storage.FlexFlashController) Managed Object.\n\nWhen this managed object is deleted, the referenced [storage.FlexFlashController](mo://storage.FlexFlashController) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storageFlexFlashPhysicalDriveList": {
      "properties": {
        "Count": {
          "description": "The number of storageFlexFlashPhysicalDrives matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storageFlexFlashPhysicalDrives matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageFlexFlashPhysicalDrive"
          }
        }
      }
    },
    "storageFlexFlashVirtualDriveRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageFlexFlashVirtualDrive": {
      "title": "Storage:Flex Flash Virtual Drive",
      "description": "Virtual Drive repersenting a SD Card.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "DriveScope": {
              "type": "string"
            },
            "DriveStatus": {
              "type": "string"
            },
            "PartitionId": {
              "type": "string"
            },
            "ResidentImage": {
              "type": "string"
            },
            "Size": {
              "type": "string"
            },
            "VirtualDrive": {
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            },
            "StorageFlexFlashController": {
              "$ref": "#/definitions/storageFlexFlashControllerRef",
              "description": "A collection of references to the [storage.FlexFlashController](mo://storage.FlexFlashController) Managed Object.\n\nWhen this managed object is deleted, the referenced [storage.FlexFlashController](mo://storage.FlexFlashController) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storageFlexFlashVirtualDriveList": {
      "properties": {
        "Count": {
          "description": "The number of storageFlexFlashVirtualDrives matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storageFlexFlashVirtualDrives matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageFlexFlashVirtualDrive"
          }
        }
      }
    },
    "storageFlexUtilControllerRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageFlexUtilController": {
      "title": "Storage:Flex Util Controller",
      "description": "Storage Flex Util Adapter.\n",
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "type": "object",
          "properties": {
            "ControllerName": {
              "type": "string"
            },
            "ControllerStatus": {
              "type": "string"
            },
            "FfControllerId": {
              "type": "string"
            },
            "InternalState": {
              "type": "string"
            },
            "ComputeBoard": {
              "$ref": "#/definitions/computeBoardRef",
              "description": "A collection of references to the [compute.Board](mo://compute.Board) Managed Object.\n\nWhen this managed object is deleted, the referenced [compute.Board](mo://compute.Board) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "FlexUtilPhysicalDrives": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storageFlexUtilPhysicalDriveRef"
              },
              "readOnly": true
            },
            "FlexUtilVirtualDrives": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storageFlexUtilVirtualDriveRef"
              },
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storageFlexUtilControllerList": {
      "properties": {
        "Count": {
          "description": "The number of storageFlexUtilControllers matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storageFlexUtilControllers matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageFlexUtilController"
          }
        }
      }
    },
    "storageFlexUtilPhysicalDriveRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageFlexUtilPhysicalDrive": {
      "title": "Storage:Flex Util Physical Drive",
      "description": "Storage Flex Util Physical Drive.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "BlockSize": {
              "type": "string"
            },
            "Capacity": {
              "type": "string"
            },
            "Controller": {
              "type": "string"
            },
            "DrivesEnabled": {
              "type": "string"
            },
            "Health": {
              "type": "string"
            },
            "ManufacturerDate": {
              "type": "string"
            },
            "ManufacturerId": {
              "type": "string"
            },
            "OemId": {
              "type": "string"
            },
            "PartitionCount": {
              "type": "string"
            },
            "PdStatus": {
              "type": "string"
            },
            "PhysicalDrive": {
              "type": "string"
            },
            "ProductName": {
              "type": "string"
            },
            "ProductRevision": {
              "type": "string"
            },
            "ReadErrorCount": {
              "type": "string"
            },
            "ReadErrorThreshold": {
              "type": "string"
            },
            "WriteEnabled": {
              "type": "string"
            },
            "WriteErrorCount": {
              "type": "string"
            },
            "WriteErrorThreshold": {
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            },
            "StorageFlexUtilController": {
              "$ref": "#/definitions/storageFlexUtilControllerRef",
              "description": "A collection of references to the [storage.FlexUtilController](mo://storage.FlexUtilController) Managed Object.\n\nWhen this managed object is deleted, the referenced [storage.FlexUtilController](mo://storage.FlexUtilController) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storageFlexUtilPhysicalDriveList": {
      "properties": {
        "Count": {
          "description": "The number of storageFlexUtilPhysicalDrives matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storageFlexUtilPhysicalDrives matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageFlexUtilPhysicalDrive"
          }
        }
      }
    },
    "storageFlexUtilVirtualDriveRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageFlexUtilVirtualDrive": {
      "title": "Storage:Flex Util Virtual Drive",
      "description": "Storage Flex Util Virtual Drive.\n",
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "type": "object",
          "properties": {
            "DriveStatus": {
              "type": "string"
            },
            "DriveType": {
              "type": "string"
            },
            "PartitionId": {
              "type": "string"
            },
            "PartitionName": {
              "type": "string"
            },
            "ResidentImage": {
              "type": "string"
            },
            "Size": {
              "type": "string"
            },
            "VirtualDrive": {
              "type": "string"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            },
            "StorageFlexUtilController": {
              "$ref": "#/definitions/storageFlexUtilControllerRef",
              "description": "A collection of references to the [storage.FlexUtilController](mo://storage.FlexUtilController) Managed Object.\n\nWhen this managed object is deleted, the referenced [storage.FlexUtilController](mo://storage.FlexUtilController) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storageFlexUtilVirtualDriveList": {
      "properties": {
        "Count": {
          "description": "The number of storageFlexUtilVirtualDrives matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storageFlexUtilVirtualDrives matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageFlexUtilVirtualDrive"
          }
        }
      }
    },
    "storageGenericArrayRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageGenericArray": {
      "title": "Storage:Generic Array",
      "description": "Abstract object which contains common attributes of storage array. It expects every storage array to inherit and set the value.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentAbstractDevice"
        },
        {
          "type": "object",
          "properties": {
            "StorageUtilization": {
              "$ref": "#/definitions/storageCapacity",
              "readOnly": true,
              "description": "Storage utilization of an array, it contains total capacity, available capacity, used capacity and free capacity.  \n"
            }
          }
        }
      ]
    },
    "storageHostRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageHost": {
      "title": "Storage:Host",
      "description": "Generic storage host object. It is a logical object to associate initiators to expose volume as LUN.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "type": "string",
              "readOnly": true,
              "description": "Short description about the host. \n"
            },
            "Initiators": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storageInitiator"
              },
              "readOnly": true,
              "description": "List of initiators which are associated with host. \n"
            },
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the host in storage array. \n"
            },
            "OsType": {
              "type": "string",
              "readOnly": true,
              "description": "Operating system running on the host.  \n"
            },
            "StorageArray": {
              "$ref": "#/definitions/storageGenericArrayRef",
              "description": "Storage array managed object.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storageHostLunRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageHostLun": {
      "title": "Storage:Host Lun",
      "description": "Generic storage host lun object. It exists only if the volume is associated to host initiator.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Hlu": {
              "type": "string",
              "readOnly": true,
              "description": "Logical unit number (LUN) by which hosts address specified volume. \n"
            },
            "HostName": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the host associated with LUN. \n"
            },
            "VolumeName": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the storage volume associated with LUN.  \n"
            },
            "Host": {
              "$ref": "#/definitions/storageHostRef",
              "description": "Host managed object where the volume is associated.\n",
              "readOnly": true
            },
            "StorageArray": {
              "$ref": "#/definitions/storageGenericArrayRef",
              "description": "Storage array managed object.\n",
              "readOnly": true
            },
            "Volume": {
              "$ref": "#/definitions/storageVolumeRef",
              "description": "Volume managed object used to create host lun.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storageHostUtilizationRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageHostUtilization": {
      "title": "Storage:Host Utilization",
      "description": "Storage space utilization of Pure FlashArray host entity.\n",
      "allOf": [
        {
          "$ref": "#/definitions/storageStorageUtilization"
        },
        {
          "type": "object"
        }
      ]
    },
    "storageImportCompletionTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageImportValidationTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageInitiatorRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageInitiator": {
      "title": "Storage:Initiator",
      "description": "An initiator is the consumer of storage, typically a server with an adapter card in it called a Host Bus Adapter (HBA). The initiator \"initiates\" a connection over the fabric to one or more ports on storage system target ports.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Iqn": {
              "type": "string",
              "readOnly": true,
              "description": "IQN (iSCSI qualified name). Can be up to 255 characters long and has the following format, iqn.yyyy-mm.naming-authority:unique name. \n"
            },
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the initiator represented in storage array. \n"
            },
            "Type": {
              "type": "string",
              "enum": [
                "FC",
                "iSCSI"
              ],
              "default": "FC",
              "readOnly": true,
              "description": "Initiator type, it can be FC or iSCSI. \n"
            },
            "Wwn": {
              "type": "string",
              "readOnly": true,
              "description": "World wide name, 128 bit address represented in hexa decimal notation. (51:4f:0c:50:14:1f:af:01:51:4f:0c:51:14:1f:af:01).  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "storageLocalDiskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageLocalDisk": {
      "title": "Storage:Local Disk",
      "description": "This models disks in the disk group.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "SlotNumber": {
              "type": "integer",
              "format": "int64",
              "description": "The slot number of the disk to be referenced. As this is a policy, this slot number may or may not be valid depending on the number of disks in the associated server.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "storagePhysicalDiskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storagePhysicalDisk": {
      "title": "Storage:Physical Disk",
      "description": "Physical Disk on a server.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "BlockSize": {
              "type": "string",
              "readOnly": true,
              "description": "The block size of the physical disk. \n"
            },
            "Bootable": {
              "type": "string",
              "readOnly": true
            },
            "ConfigurationCheckpoint": {
              "type": "string",
              "readOnly": true
            },
            "ConfigurationState": {
              "type": "string",
              "readOnly": true
            },
            "DiscoveredPath": {
              "type": "string",
              "readOnly": true
            },
            "DiskId": {
              "type": "string",
              "readOnly": true
            },
            "DiskState": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the health of the disk. \n"
            },
            "DriveFirmware": {
              "type": "string"
            },
            "DriveState": {
              "type": "string",
              "readOnly": true
            },
            "FdeCapable": {
              "type": "string"
            },
            "LinkSpeed": {
              "type": "string",
              "readOnly": true
            },
            "LinkState": {
              "type": "string",
              "readOnly": true
            },
            "NumBlocks": {
              "type": "string",
              "readOnly": true,
              "description": "The number of blocks present on the physical disk. \n"
            },
            "OperPowerState": {
              "type": "string",
              "readOnly": true
            },
            "OperQualifierReason": {
              "type": "string",
              "readOnly": true
            },
            "Operability": {
              "type": "string",
              "readOnly": true
            },
            "PhysicalBlockSize": {
              "type": "string",
              "readOnly": true
            },
            "Pid": {
              "type": "string",
              "readOnly": true,
              "description": "This field identifies the Product ID for physicalDisk. \n"
            },
            "Presence": {
              "type": "string",
              "readOnly": true
            },
            "Protocol": {
              "type": "string",
              "readOnly": true
            },
            "RawSize": {
              "type": "string",
              "readOnly": true
            },
            "Secured": {
              "type": "string",
              "description": "This field identifies whether the disk is encrypted. \n"
            },
            "Size": {
              "type": "string",
              "readOnly": true
            },
            "Thermal": {
              "type": "string",
              "readOnly": true
            },
            "Type": {
              "type": "string",
              "readOnly": true
            },
            "VariantType": {
              "type": "string",
              "readOnly": true
            },
            "LocatorLed": {
              "$ref": "#/definitions/equipmentLocatorLedRef",
              "readOnly": true
            },
            "PhysicalDiskExtensions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storagePhysicalDiskExtensionRef"
              },
              "description": "The physical connectivity between a SCSI controller and physical disks.\n"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            },
            "RunningFirmware": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/firmwareRunningFirmwareRef"
              },
              "readOnly": true
            },
            "SasPorts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storageSasPortRef"
              },
              "description": "It is a reference to SAS Port to physical disk.\n",
              "readOnly": true
            },
            "StorageController": {
              "$ref": "#/definitions/storageControllerRef",
              "description": "A collection of references to the [storage.Controller](mo://storage.Controller) Managed Object.\n\nWhen this managed object is deleted, the referenced [storage.Controller](mo://storage.Controller) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "StorageEnclosure": {
              "$ref": "#/definitions/storageEnclosureRef",
              "description": "A collection of references to the [storage.Enclosure](mo://storage.Enclosure) Managed Object.\n\nWhen this managed object is deleted, the referenced [storage.Enclosure](mo://storage.Enclosure) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storagePhysicalDiskList": {
      "properties": {
        "Count": {
          "description": "The number of storagePhysicalDisks matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storagePhysicalDisks matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storagePhysicalDisk"
          }
        }
      }
    },
    "storagePhysicalDiskExtensionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storagePhysicalDiskExtension": {
      "title": "Storage:Physical Disk Extension",
      "description": "Information of disks as reported by controller. In certain cases like S-series servers, disk information will be reported by controller separately and this represents such information.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "Bootable": {
              "type": "string",
              "readOnly": true,
              "description": "It shows whether disk is bootable or not. \n"
            },
            "DiskDn": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the Physical drive Dn. \n"
            },
            "DiskId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "It shows storage Enclosure slotId. \n"
            },
            "DiskState": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the current drive state of disk. \n"
            },
            "Health": {
              "type": "string",
              "description": "It shows the current drive state of disk.  \n"
            },
            "PhysicalDisk": {
              "$ref": "#/definitions/storagePhysicalDiskRef",
              "description": "A collection of references to the [storage.PhysicalDisk](mo://storage.PhysicalDisk) Managed Object.\n\nWhen this managed object is deleted, the referenced [storage.PhysicalDisk](mo://storage.PhysicalDisk) MO unsets its reference to this deleted MO.\n"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            },
            "StorageController": {
              "$ref": "#/definitions/storageControllerRef",
              "description": "A collection of references to the [storage.Controller](mo://storage.Controller) Managed Object.\n\nWhen this managed object is deleted, the referenced [storage.Controller](mo://storage.Controller) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storagePhysicalDiskExtensionList": {
      "properties": {
        "Count": {
          "description": "The number of storagePhysicalDiskExtensions matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storagePhysicalDiskExtensions matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storagePhysicalDiskExtension"
          }
        }
      }
    },
    "storagePhysicalDiskUsageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storagePhysicalDiskUsage": {
      "title": "Storage:Physical Disk Usage",
      "description": "Has usage map between physical disks and virtual drives.\n",
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "type": "object",
          "properties": {
            "NumberOfBlocks": {
              "type": "string",
              "readOnly": true
            },
            "PhysicalDrive": {
              "type": "string",
              "readOnly": true
            },
            "Span": {
              "type": "string",
              "readOnly": true
            },
            "StartingBlock": {
              "type": "string",
              "readOnly": true
            },
            "State": {
              "type": "string",
              "readOnly": true
            },
            "VirtualDrive": {
              "type": "string",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storagePhysicalDiskUsageList": {
      "properties": {
        "Count": {
          "description": "The number of storagePhysicalDiskUsages matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storagePhysicalDiskUsages matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storagePhysicalDiskUsage"
          }
        }
      }
    },
    "storagePhysicalPortRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storagePhysicalPort": {
      "title": "Storage:Physical Port",
      "description": "Common attributes for physical port in storage array.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Iqn": {
              "type": "string",
              "readOnly": true,
              "description": "ISCSI qualified name applicable for ethernet port. eg 'iqn.2008-05.com.storage:fnm00151300643-514f0c50141faf05'. \n"
            },
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the physical port available in storage array. \n"
            },
            "Speed": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Operational speed of physical port measured in Gbps. \n"
            },
            "Status": {
              "type": "string",
              "enum": [
                "Unknown",
                "Ok",
                "Degraded",
                "Critical",
                "Offline",
                "Identifying",
                "NotAvailable",
                "Updating",
                "Unrecognized"
              ],
              "default": "Unknown",
              "readOnly": true,
              "description": "Status of storage array port. \n"
            },
            "Type": {
              "type": "string",
              "enum": [
                "FC",
                "iSCSI",
                "FCoE"
              ],
              "default": "FC",
              "readOnly": true,
              "description": "Port type, it can be a any of the following category FC, FCoE and iSCSI. \n"
            },
            "Wwn": {
              "type": "string",
              "readOnly": true,
              "description": "World wide name of FC port. It is a combination of WWNN and WWPN represented in 128 bit hexa decimal formatted with colon. e.g '51:4f:0c:50:14:1f:af:01:51:4f:0c:51:14:1f:af:01'. \n"
            },
            "Wwnn": {
              "type": "string",
              "readOnly": true,
              "description": "World wide node name of FC port. Represented in 64 bit digit hexa formatted with colon eg '51:4f:0c:50:14:1f:af:01'. \n"
            },
            "Wwpn": {
              "type": "string",
              "readOnly": true,
              "description": "World wide port name of FC port. Represented in 64 bit digit hexa formatted with colon eg '51:4f:0c:51:14:1f:af:01'.  \n"
            },
            "Controller": {
              "$ref": "#/definitions/storageArrayControllerRef",
              "description": "Parent storage array controller object.\n",
              "readOnly": true
            },
            "StorageArray": {
              "$ref": "#/definitions/storageGenericArrayRef",
              "description": "Storage array managed object.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storageProtectionGroupRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageProtectionGroup": {
      "title": "Storage:Protection Group",
      "description": "A protection group contains list of members, that are protected together through snapshots with point-in-time consistency across the members.\nThe members within the protection group have common data protection requirements and the same snapshot, replication, and retention schedules.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "description": "Name of the protection Group. \n"
            },
            "Prefix": {
              "type": "string",
              "description": "Prefix used for all generated snapshots from the protection group. \n"
            },
            "ReplicationEnabled": {
              "type": "boolean",
              "description": "Flag to determine if the replication is enabled. Snapshots are created on target array if the flag is set. \n",
              "x-nullable": true
            },
            "SnapshotEnabled": {
              "type": "boolean",
              "description": "Flag to determine if the snapshot is enabled. Snapshots are created on local array if the flag is set.  \n",
              "x-nullable": true
            },
            "StorageArray": {
              "$ref": "#/definitions/storageGenericArrayRef",
              "description": "Storage array managed object.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storageProtectionGroupSnapshotRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageProtectionGroupSnapshot": {
      "title": "Storage:Protection Group Snapshot",
      "description": "Protection group snapshot entity in protection group.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "CreatedTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Protection group snapshot created time. \n"
            },
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "Protection group snapshot name which represents point in time copy of all members in protection group. \n"
            },
            "Size": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Snapshot size represented in bytes. It is a cummulative size of all snapshots in a set. \n"
            },
            "Source": {
              "type": "string",
              "readOnly": true,
              "description": "Source protection group name on which the snapshot is created.  \n"
            },
            "ProtectionGroup": {
              "$ref": "#/definitions/storageProtectionGroupRef",
              "description": "Protection group relationship object.\n",
              "readOnly": true
            },
            "StorageArray": {
              "$ref": "#/definitions/storageGenericArrayRef",
              "description": "Storage array managed object.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storagePureArrayRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storagePureArray": {
      "title": "Storage:Pure Array",
      "description": "The details of the Pure storage array.\n",
      "allOf": [
        {
          "$ref": "#/definitions/storageGenericArray"
        },
        {
          "type": "object",
          "properties": {
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "Device registration managed object that represents this storage array connection to Intersight.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storagePureArrayList": {
      "properties": {
        "Count": {
          "description": "The number of storagePureArrays matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storagePureArrays matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storagePureArray"
          }
        }
      }
    },
    "storagePureControllerRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storagePureController": {
      "title": "Storage:Pure Controller",
      "description": "A storage controller entity in Pure FlashArray.\n",
      "allOf": [
        {
          "$ref": "#/definitions/storageArrayController"
        },
        {
          "type": "object",
          "properties": {
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "Device registration managed object that represents this storage array connection to Intersight.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storagePureControllerList": {
      "properties": {
        "Count": {
          "description": "The number of storagePureControllers matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storagePureControllers matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storagePureController"
          }
        }
      }
    },
    "storagePureDiskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storagePureDisk": {
      "title": "Storage:Pure Disk",
      "description": "Disk entity associated with Pure FlashArray.\n",
      "allOf": [
        {
          "$ref": "#/definitions/storageArrayDisk"
        },
        {
          "type": "object",
          "properties": {
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "Device registration managed object that represents this storage array connection to Intersight.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storagePureDiskList": {
      "properties": {
        "Count": {
          "description": "The number of storagePureDisks matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storagePureDisks matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storagePureDisk"
          }
        }
      }
    },
    "storagePureHostRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storagePureHost": {
      "title": "Storage:Pure Host",
      "description": "A host entity in PureStorage FlashArray. It is an abstraction used by PureStorage to organize the storage network addresses (Fibre Channel worldwide names or iSCSI qualified names) of client computers and to control communications between clients and volumes.\n",
      "allOf": [
        {
          "$ref": "#/definitions/storageHost"
        },
        {
          "type": "object",
          "properties": {
            "HostGroupName": {
              "type": "string",
              "readOnly": true,
              "description": "Name of host group where the host belongs to. Empty if HostType is set as HostGroup. \n"
            },
            "HostNames": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Names of the host which are associated with the host group. Empty if HostType is set as Host. \n"
            },
            "StorageUtilization": {
              "$ref": "#/definitions/storageHostUtilization",
              "readOnly": true,
              "description": "Storage space utilized by the host entity. \n"
            },
            "Type": {
              "type": "string",
              "enum": [
                "Host",
                "HostGroup"
              ],
              "default": "Host",
              "readOnly": true,
              "description": "Type of host entity whether it is a single host or host group (collection of host).  \n"
            },
            "HostGroup": {
              "$ref": "#/definitions/storagePureHostRef",
              "description": "A collection of references to the [storage.PureHost](mo://storage.PureHost) Managed Object.\n\nWhen this managed object is deleted, the referenced [storage.PureHost](mo://storage.PureHost) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "Hosts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storagePureHostRef"
              },
              "description": "List of host object associated to the host group.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "Device registration managed object that represents this storage array connection to Intersight.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storagePureHostList": {
      "properties": {
        "Count": {
          "description": "The number of storagePureHosts matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storagePureHosts matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storagePureHost"
          }
        }
      }
    },
    "storagePureHostLunRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storagePureHostLun": {
      "title": "Storage:Pure Host Lun",
      "description": "A host LUN entity in Pure storage array. It exists only if the volume has a connection to host or host group. For host group mapping, it provides public connection to all hosts associated within host group. A volume can have private connection to host as well. It cannot have public and private connection. Pure assign same HLU for all the host in case if it is connected through host group.\n",
      "allOf": [
        {
          "$ref": "#/definitions/storageHostLun"
        },
        {
          "type": "object",
          "properties": {
            "HostGroupName": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the host group associated with LUN. \n"
            },
            "Shared": {
              "type": "boolean",
              "readOnly": true,
              "description": "Kind of volume connection to host. True if it is connected through host group. False in case of direct host connection.  \n"
            },
            "HostGroup": {
              "$ref": "#/definitions/storageHostRef",
              "description": "Host group relationship object associated with LUN. It is empty, if volume has direct connection to host.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "Device registration managed object that represents this storage array connection to Intersight.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storagePureHostLunList": {
      "properties": {
        "Count": {
          "description": "The number of storagePureHostLuns matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storagePureHostLuns matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storagePureHostLun"
          }
        }
      }
    },
    "storagePurePortRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storagePurePort": {
      "title": "Storage:Pure Port",
      "description": "Port entity in Pure FlashArray.\n",
      "allOf": [
        {
          "$ref": "#/definitions/storagePhysicalPort"
        },
        {
          "type": "object",
          "properties": {
            "Failover": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the port to which this port has failed over. \n"
            },
            "Portal": {
              "type": "string",
              "readOnly": true,
              "description": "Ip address of iSCSI portal configured on the port.  \n"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "Device registration managed object that represents this storage array connection to Intersight.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storagePurePortList": {
      "properties": {
        "Count": {
          "description": "The number of storagePurePorts matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storagePurePorts matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storagePurePort"
          }
        }
      }
    },
    "storagePureProtectionGroupRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storagePureProtectionGroup": {
      "title": "Storage:Pure Protection Group",
      "description": "Protection group entity in Pure storage array. A volume can be protected by associating with protection group either directly or indirectly (either host or host group). Snapshots are created on protected volume in local array or target array or both as per scheduler configuration.\n",
      "allOf": [
        {
          "$ref": "#/definitions/storageProtectionGroup"
        },
        {
          "type": "object",
          "properties": {
            "Size": {
              "type": "integer",
              "format": "int64",
              "description": "Overall size of all snapshots in the protection group, represented in bytes. \n"
            },
            "Source": {
              "type": "string",
              "readOnly": true,
              "description": "Name of PureStorage array name on which the protection group is created. \n"
            },
            "Targets": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Target PureStorage array names where the replication snapshots are created.  \n"
            },
            "HostGroups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storagePureHostRef"
              },
              "description": "List of host group object associated to the protection group.\n",
              "readOnly": true
            },
            "Hosts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storagePureHostRef"
              },
              "description": "List of host object associated to the protection group.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "Device registration managed object that represents this storage array connection to Intersight.\n",
              "readOnly": true
            },
            "Volumes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storagePureVolumeRef"
              },
              "description": "List of volume object associated to the protection group.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storagePureProtectionGroupList": {
      "properties": {
        "Count": {
          "description": "The number of storagePureProtectionGroups matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storagePureProtectionGroups matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storagePureProtectionGroup"
          }
        }
      }
    },
    "storagePureProtectionGroupSnapshotRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storagePureProtectionGroupSnapshot": {
      "title": "Storage:Pure Protection Group Snapshot",
      "description": "Protection group snapshot entity in Pure protection group.\n",
      "allOf": [
        {
          "$ref": "#/definitions/storageProtectionGroupSnapshot"
        },
        {
          "type": "object",
          "properties": {
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "Device registration managed object that represents this storage array connection to Intersight.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storagePureProtectionGroupSnapshotList": {
      "properties": {
        "Count": {
          "description": "The number of storagePureProtectionGroupSnapshots matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storagePureProtectionGroupSnapshots matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storagePureProtectionGroupSnapshot"
          }
        }
      }
    },
    "storagePureReplicationScheduleRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storagePureReplicationSchedule": {
      "title": "Storage:Pure Replication Schedule",
      "description": "Pure snapshot replication schedule entity.\n",
      "allOf": [
        {
          "$ref": "#/definitions/storageReplicationSchedule"
        },
        {
          "type": "object",
          "properties": {
            "DailyLimit": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Total number of snapshots per day to be available on target above and over the specified retention time. PureStorage\nFlashArray maintains all created snapshot until retention period. Daily limit is applied only on the snapshots once retention time is expired.\nIn case of, daily limit is less than the number of snapshot available on source, system select snapshots evenly spaced out throughout the day.\n \n"
            },
            "ReplicationBlackoutIntervals": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storageReplicationBlackout"
              },
              "readOnly": true,
              "description": "Blackout intervals for replication operation in PureStorage FlashArray. System disables replication during these intervals. Blackout periods only apply to scheduled replications. On-demand replications do not observe the blackout period. \n"
            },
            "SnapshotExpiryTime": {
              "type": "string",
              "readOnly": true,
              "description": "Duration to keep the daily limit snapshots on target array. StorageArray deletes the snapshots permanently from the targets beyond this period.  \n"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "Device registration managed object that represents this storage array connection to Intersight.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storagePureReplicationScheduleList": {
      "properties": {
        "Count": {
          "description": "The number of storagePureReplicationSchedules matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storagePureReplicationSchedules matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storagePureReplicationSchedule"
          }
        }
      }
    },
    "storagePureSnapshotScheduleRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storagePureSnapshotSchedule": {
      "title": "Storage:Pure Snapshot Schedule",
      "description": "PureStorage FlashArray snapshot schedule configuration entity.\n",
      "allOf": [
        {
          "$ref": "#/definitions/storageSnapshotSchedule"
        },
        {
          "type": "object",
          "properties": {
            "DailyLimit": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Total number of snapshots per day to be available on source above and over the specified retention time. PureStorage FlashArray maintains all created snapshot until retention period. Daily limit is applied only on the snapshots once retention time is expired. In case of, daily limit is less than the number of snapshot available on source, system select snapshots evenly spaced out throughout the day. \n"
            },
            "SnapshotExpiryTime": {
              "type": "string",
              "readOnly": true,
              "description": "Duration to keep the daily limit snapshots on source array. StorageArray deletes the snapshots permanently from source beyond this period.  \n"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "Device registration managed object that represents this storage array connection to Intersight.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storagePureSnapshotScheduleList": {
      "properties": {
        "Count": {
          "description": "The number of storagePureSnapshotSchedules matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storagePureSnapshotSchedules matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storagePureSnapshotSchedule"
          }
        }
      }
    },
    "storagePureVolumeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storagePureVolume": {
      "title": "Storage:Pure Volume",
      "description": "A volume entity in PureStorage FlashArray.\n",
      "allOf": [
        {
          "$ref": "#/definitions/storageVolume"
        },
        {
          "type": "object",
          "properties": {
            "Created": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Creation time of the volume. \n"
            },
            "Serial": {
              "type": "string",
              "readOnly": true,
              "description": "Serial number of the volume. \n"
            },
            "Source": {
              "type": "string",
              "readOnly": true,
              "description": "Source from which the volume is created. Applicable only if the volume is cloned from other volume or snapshot.  \n"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "Device registration managed object that represents this storage array connection to Intersight.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storagePureVolumeList": {
      "properties": {
        "Count": {
          "description": "The number of storagePureVolumes matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storagePureVolumes matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storagePureVolume"
          }
        }
      }
    },
    "storagePureVolumeSnapshotRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storagePureVolumeSnapshot": {
      "title": "Storage:Pure Volume Snapshot",
      "description": "Volume snapshot entity in Pure protection group. Volume snapshots are created either on-demand or using scheduler. Snapshots are immutable and it cannot be connected to hosts or host groups, and therefore the data it contains cannot be read or written.\n",
      "allOf": [
        {
          "$ref": "#/definitions/storageSnapshot"
        },
        {
          "type": "object",
          "properties": {
            "Serial": {
              "type": "string",
              "readOnly": true,
              "description": "Unique serial number of the snapshot allocated by the storage array.  \n"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "Device registration managed object that represents this storage array connection to Intersight.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storagePureVolumeSnapshotList": {
      "properties": {
        "Count": {
          "description": "The number of storagePureVolumeSnapshots matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storagePureVolumeSnapshots matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storagePureVolumeSnapshot"
          }
        }
      }
    },
    "storageRemoteKeySettingRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageRemoteKeySetting": {
      "title": "Remote Key Management",
      "description": "Models the remote key configurarion required for disks encryptions. KMIP is the only remote key protocol supported in the policy.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "IsPasswordSet": {
              "type": "boolean",
              "x-nullable": true
            },
            "Password": {
              "type": "string",
              "description": "The password for the KMIP server login. \n"
            },
            "Port": {
              "type": "integer",
              "format": "int64",
              "description": "The port to which the KMIP client should connect. \n"
            },
            "PrimaryServer": {
              "type": "string",
              "description": "The IP address of the primary KMIP server. It could be an IPv4 address, an IPv6 address, or a hostname. Hostnames are valid only when Inband is configured for the CIMC address. \n"
            },
            "SecondaryServer": {
              "type": "string",
              "description": "The IP address of the secondary KMIP server. It could be an IPv4 address, an IPv6 address, or a hostname. Hostnames are valid only when Inband is configured for the CIMC address. \n"
            },
            "ServerCertificate": {
              "type": "string",
              "description": "The certificate/ public key of the KMIP server. It is required for initiating secure communication with the server. \n"
            },
            "Username": {
              "type": "string",
              "description": "The user name for the KMIP server login.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "storageReplicationBlackoutRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageReplicationBlackout": {
      "title": "Storage:Replication Blackout",
      "description": "Range of time at which to suspend replication. System disables replication during this interval.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "End": {
              "type": "string",
              "format": "time",
              "readOnly": true,
              "description": "The end time of day for replication blackout window.\nExample: 17:00:01 which is 17 hours, 0 minutes, 1 seconds.\n \n"
            },
            "Start": {
              "type": "string",
              "format": "time",
              "readOnly": true,
              "description": "The start time of day when replication blackout is active. When replication blackout is active, the storage array temporarily disables replication.\nExample: 15:04:03.123 which is 15 hours, 4 minutes, 3 seconds and 123 milliseconds.\nThe fractional seconds are written using the standard decimal notation which can be used for setting milliseconds and microseconds.\n  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "storageReplicationScheduleRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageReplicationSchedule": {
      "title": "Storage:Replication Schedule",
      "description": "Configuration parameters for snapshot creation on target arrays.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Frequency": {
              "type": "string",
              "readOnly": true,
              "description": "Replication frequency. It is an interval on which replication is set to trigger.\nExamples:\n    PT2H, Snapshot is performed for every 2 hours.\n    P30D, Snapshot is scheduled for every 30 days.\n    PT2H34M56.123S is 2 hours, 34 minutes, 56 seconds and 123 milliseconds.\n \n"
            },
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "Replication schedule name. \n"
            },
            "ReplicationTime": {
              "type": "string",
              "format": "time",
              "readOnly": true,
              "description": "Preferred time of day at which to replicate the snapshots on target array.\nIt is applicable only if the replication frequency is set for a day or more.\nFormat: hh:mm:ss\nExample: 15:00:00, Replication is set for 3:00 PM.\n \n"
            },
            "RetentionTime": {
              "type": "string",
              "readOnly": true,
              "description": "Duration to keep the replicated snapshots on the targets.\nReplicated snapshots are deleted from target array once mentioned rentention period is elapsed.\nExamples:\nP30D, Snapshots are available for 30 days.\nPT2H34M56.123S, 2 hours, 34 minutes, 56 seconds and 123 milliseconds.\n  \n"
            },
            "ProtectionGroup": {
              "$ref": "#/definitions/storageProtectionGroupRef",
              "description": "Protection group relationship object.\n",
              "readOnly": true
            },
            "StorageArray": {
              "$ref": "#/definitions/storageGenericArrayRef",
              "description": "Storage array managed object.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storageSasExpanderRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageSasExpander": {
      "title": "Storage:Sas Expander",
      "description": "SAS Expander present in a server.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "ExpanderId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "Name": {
              "type": "string"
            },
            "OperState": {
              "type": "string",
              "readOnly": true
            },
            "Operability": {
              "type": "string",
              "readOnly": true
            },
            "Presence": {
              "type": "string",
              "readOnly": true
            },
            "SasAddress": {
              "type": "string",
              "readOnly": true
            },
            "Controller": {
              "$ref": "#/definitions/managementControllerRef",
              "readOnly": true
            },
            "EquipmentChassis": {
              "$ref": "#/definitions/equipmentChassisRef",
              "description": "A collection of references to the [equipment.Chassis](mo://equipment.Chassis) Managed Object.\n\nWhen this managed object is deleted, the referenced [equipment.Chassis](mo://equipment.Chassis) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storageSasExpanderList": {
      "properties": {
        "Count": {
          "description": "The number of storageSasExpanders matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storageSasExpanders matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageSasExpander"
          }
        }
      }
    },
    "storageSasPortRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageSasPort": {
      "title": "Storage:Sas Port",
      "description": "Sas Port details of the SAS endpoint.\n",
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "type": "object",
          "properties": {
            "Address": {
              "type": "string",
              "readOnly": true,
              "description": "The SAS Address assigned to storage port. \n"
            },
            "DiskId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "The disk identifier. \n"
            },
            "EndPointId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "The end-point Id assigned to storage port. \n"
            },
            "LinkDescription": {
              "type": "string",
              "readOnly": true,
              "description": "The link description. \n"
            },
            "LinkSpeed": {
              "type": "string",
              "readOnly": true,
              "description": "The link speed negotiated for communication.  \n"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            },
            "StoragePhysicalDisk": {
              "$ref": "#/definitions/storagePhysicalDiskRef",
              "description": "A collection of references to the [storage.PhysicalDisk](mo://storage.PhysicalDisk) Managed Object.\n\nWhen this managed object is deleted, the referenced [storage.PhysicalDisk](mo://storage.PhysicalDisk) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storageSasPortList": {
      "properties": {
        "Count": {
          "description": "The number of storageSasPorts matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storageSasPorts matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageSasPort"
          }
        }
      }
    },
    "storageSnapshotRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageSnapshot": {
      "title": "Storage:Snapshot",
      "description": "Reference marker for volume at a particular point in time. It is a point-in-time copy of the volume.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "CreatedTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Exact date and time on which snapshot is created. \n"
            },
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the snapshot which represents point in time copy of volume. \n"
            },
            "ProtectionGroupName": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the protection group to which the snapshot belongs. Value is emptry, if the snapshot is created directly on volume. \n"
            },
            "Size": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Snapshot size represented in bytes. \n"
            },
            "Source": {
              "type": "string",
              "readOnly": true,
              "description": "Source object on which the snapshot is created. It is a name of the originating volume.  \n"
            },
            "ProtectionGroupSnapshot": {
              "$ref": "#/definitions/storageProtectionGroupSnapshotRef",
              "description": "Protection group snapshot relationship object.\n",
              "readOnly": true
            },
            "StorageArray": {
              "$ref": "#/definitions/storageGenericArrayRef",
              "description": "Storage array managed object.\n",
              "readOnly": true
            },
            "Volume": {
              "$ref": "#/definitions/storageVolumeRef",
              "description": "Volume managed object where the snapshot is created.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storageSnapshotScheduleRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageSnapshotSchedule": {
      "title": "Storage:Snapshot Schedule",
      "description": "Configuration parameters for snapshot creation at source array.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Frequency": {
              "type": "string",
              "readOnly": true,
              "description": "Snapshot frequency. It is an interval on which snapshot is set to trigger on source array.\nExamples:\n    PT2H, Snapshot is performed for every 2 hours.\n    P4D, Snapshot is scheduled for every 4 days.\n    PT2H34M56.123S is 2 hours, 34 minutes, 56 seconds and 123 milliseconds.\n \n"
            },
            "Name": {
              "type": "string",
              "description": "Name of the snapshot schedule. \n"
            },
            "RetentionTime": {
              "type": "string",
              "readOnly": true,
              "description": "Duration to keep the snapshots on the source array.\nOnce the period expires, system deletes the snapshot automatically from source array.\nExamples:\nP200D,  200 days.\nPT2H34M56.123S, 2 hours, 34 minutes, 56 seconds and 123 milliseconds.\n \n"
            },
            "SnapshotTime": {
              "type": "string",
              "format": "time",
              "readOnly": true,
              "description": "Preferred time of the day to capture the snapshot. it is applicable only if the frequency is set for a day or more.\nFormat: hh:mm:ss\nExample: 08:30:00, Snapshot is set for 08:30 AM.\n  \n"
            },
            "ProtectionGroup": {
              "$ref": "#/definitions/storageProtectionGroupRef",
              "description": "Protection group relationship object.\n",
              "readOnly": true
            },
            "StorageArray": {
              "$ref": "#/definitions/storageGenericArrayRef",
              "description": "Storage array managed object.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storageSpanGroupRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageSpanGroup": {
      "title": "Storage:Span Group",
      "description": "This models a single span group of disks in a RAID group.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Disks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storageLocalDisk"
              },
              "description": "Collection of local disks that are part of this span group. The minimum number of disks needed in a span group varies based on RAID level. Raid0 requires at least one disk, Raid1 and Raid10 requires at least 2 and in multiples of 2, Raid5 Raid50 Raid6 and Raid60 require at least 3 disks in a span group.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "storageStorageArrayUtilizationRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageStorageArrayUtilization": {
      "title": "Storage:Storage Array Utilization",
      "description": "Storage space consumption of Pure FlashArray.\n",
      "allOf": [
        {
          "$ref": "#/definitions/storageCapacity"
        },
        {
          "type": "object",
          "properties": {
            "DataReduction": {
              "type": "number",
              "format": "float",
              "readOnly": true,
              "description": "Ratio of mapped sectors within a volume versus the amount of physical space the data occupies after data compression and deduplication. The data reduction ratio does not include thin provisioning savings. For example, a data reduction ratio of 5.0 means that for every 5 MB the host writes to the array, 1 MB is stored on the array's flash modules. \n"
            },
            "Parity": {
              "type": "number",
              "format": "float",
              "readOnly": true,
              "description": "Percentage of data that is fully protected. The percentage value will drop below 100% if the data is not fully protected. \n"
            },
            "Provisioned": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Total provisioned storage capacity in Pure FlashArray, represented in bytes. \n"
            },
            "Shared": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Physical space occupied by deduplicated data, represented in bytes. The space is shared with other volumes and snapshots as a result of data deduplication. \n"
            },
            "Snapshot": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Physical space occupied by the snapshots, represented in bytes. \n"
            },
            "System": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Physical space occupied by internal array metadata, represented in bytes. \n"
            },
            "ThinProvisioned": {
              "type": "number",
              "format": "float",
              "readOnly": true,
              "description": "Percentage of volume sectors that do not contain host-written data because the hosts have not written data to them or the sectors have been explicitly trimmed. \n"
            },
            "TotalReduction": {
              "type": "number",
              "format": "float",
              "readOnly": true,
              "description": "Ratio of provisioned sectors within a volume versus the amount of physical space the data occupies after reduction via data compression and deduplication and with thin provisioning savings. Total reduction is data reduction with thin provisioning savings. For example, a total reduction ratio of 10.0 means that for every 10 MB of provisioned space, 1 MB is stored on the array's flash modules. \n"
            },
            "Volume": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Physical space occupied by volume data, excluding shared, array metadata and snapshots. Size is represented in bytes.  \n"
            }
          }
        }
      ]
    },
    "storageStoragePolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageStoragePolicy": {
      "title": "Storage",
      "description": "The storage policy models the reusable storage related configuration that can be applied on many servers. This policy allows creation of RAID groups using existing disk group policies and virtual drives on the drive groups. The user has options to move all unused disks to JBOD or Unconfigured good state. The encryption of drives can be enabled through this policy using remote keys from a KMIP server.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "GlobalHotSpares": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storageLocalDisk"
              },
              "description": "A collection of disks used as hot spares globally for all the RAID groups.  \n"
            },
            "RetainPolicyVirtualDrives": {
              "type": "boolean",
              "description": "Retains the virtual drives defined in policy if they exist already. If this flag is false, the existing virtual drives are removed and created again based on virtual drives in the policy.  \n",
              "x-nullable": true
            },
            "UnusedDisksState": {
              "type": "string",
              "enum": [
                "UnconfiguredGood",
                "Jbod"
              ],
              "default": "UnconfiguredGood",
              "description": "This is used to specify the state, unconfigured good or jbod, in which the disks that are not used in this policy should be moved. \n"
            },
            "VirtualDrives": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storageVirtualDriveConfig"
              },
              "description": "The list of virtual drives and the disk groups that need to be created through this policy.  \n"
            },
            "DiskGroupPolicies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storageDiskGroupPolicyRef"
              },
              "description": "Relationship to the used disk group policies.\n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            },
            "Profiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/policyAbstractConfigProfileRef"
              },
              "description": "Relationship to the profile objects.\n"
            }
          }
        }
      ]
    },
    "storageStoragePolicyList": {
      "properties": {
        "Count": {
          "description": "The number of storageStoragePolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storageStoragePolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageStoragePolicy"
          }
        }
      }
    },
    "storageStorageUtilizationRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageStorageUtilization": {
      "title": "Storage:Storage Utilization",
      "description": "Storage space utilized by Pure storage entity.\n",
      "allOf": [
        {
          "$ref": "#/definitions/storageCapacity"
        },
        {
          "type": "object",
          "properties": {
            "DataReduction": {
              "type": "number",
              "format": "float",
              "readOnly": true,
              "description": "Ratio of mapped sectors within a volume versus the amount of physical space the data occupies after data compression and deduplication. The data reduction ratio does not include thin provisioning savings. For example, a data reduction ratio of 5.0 means that for every 5 MB the host writes to the array, 1 MB is stored on the array's flash modules. \n"
            },
            "Snapshot": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Physical space occupied by the snapshots, represented in bytes. \n"
            },
            "ThinProvisioned": {
              "type": "number",
              "format": "float",
              "readOnly": true,
              "description": "Percentage of volume sectors that do not contain host-written data because the hosts have not written data to them or the sectors have been explicitly trimmed. \n"
            },
            "TotalReduction": {
              "type": "number",
              "format": "float",
              "readOnly": true,
              "description": "Ratio of provisioned sectors within a volume versus the amount of physical space the data occupies after reduction via data compression and deduplication and with thin provisioning savings. Total reduction is data reduction with thin provisioning savings. For example, a total reduction ratio of 10.0 means that for every 10 MB of provisioned space, 1 MB is stored on the array's flash modules. \n"
            },
            "Volume": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Physical space occupied by volume data, excluding shared, array metadata and snapshots. Size id represented in bytes.  \n"
            }
          }
        }
      ]
    },
    "storageTakeSnapshotTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageValidationTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageVdMemberEpRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageVdMemberEp": {
      "title": "Storage:Vd Member Ep",
      "description": "Reference to LocalDisk to build up a VirtualDrive.\n",
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "type": "object",
          "properties": {
            "OperQualifierReason": {
              "type": "string",
              "readOnly": true
            },
            "Presence": {
              "type": "string",
              "readOnly": true
            },
            "Role": {
              "type": "string",
              "readOnly": true,
              "description": "Role of the disk normal or hot-spare, used by virtual-drive. \n"
            },
            "SpanId": {
              "type": "string",
              "readOnly": true
            },
            "VdMemberEpId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "It shows local disk slot number as id.  \n"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            },
            "StorageVirtualDrive": {
              "$ref": "#/definitions/storageVirtualDriveRef",
              "description": "A collection of references to the [storage.VirtualDrive](mo://storage.VirtualDrive) Managed Object.\n\nWhen this managed object is deleted, the referenced [storage.VirtualDrive](mo://storage.VirtualDrive) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storageVdMemberEpList": {
      "properties": {
        "Count": {
          "description": "The number of storageVdMemberEps matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storageVdMemberEps matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageVdMemberEp"
          }
        }
      }
    },
    "storageVirtualDriveRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageVirtualDrive": {
      "title": "Storage:Virtual Drive",
      "description": "A Virtual Disk or LUN.\n",
      "allOf": [
        {
          "$ref": "#/definitions/equipmentBase"
        },
        {
          "type": "object",
          "properties": {
            "AccessPolicy": {
              "type": "string",
              "readOnly": true
            },
            "ActualWriteCachePolicy": {
              "type": "string",
              "readOnly": true
            },
            "AvailableSize": {
              "type": "string",
              "readOnly": true
            },
            "BlockSize": {
              "type": "string",
              "readOnly": true
            },
            "Bootable": {
              "type": "string",
              "readOnly": true
            },
            "ConfigState": {
              "type": "string",
              "readOnly": true
            },
            "ConfiguredWriteCachePolicy": {
              "type": "string",
              "readOnly": true
            },
            "ConnectionProtocol": {
              "type": "string",
              "readOnly": true
            },
            "DriveCache": {
              "type": "string",
              "readOnly": true
            },
            "DriveSecurity": {
              "type": "string",
              "readOnly": true
            },
            "DriveState": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the Virtual drive state. \n"
            },
            "IoPolicy": {
              "type": "string",
              "readOnly": true
            },
            "Name": {
              "type": "string",
              "readOnly": true
            },
            "NumBlocks": {
              "type": "string",
              "readOnly": true
            },
            "OperState": {
              "type": "string",
              "readOnly": true,
              "description": "It shows the current operational state of Virtual drive. \n"
            },
            "Operability": {
              "type": "string",
              "readOnly": true
            },
            "PhysicalBlockSize": {
              "type": "string",
              "readOnly": true
            },
            "Presence": {
              "type": "string",
              "readOnly": true
            },
            "ReadPolicy": {
              "type": "string",
              "readOnly": true
            },
            "SecurityFlags": {
              "type": "string",
              "readOnly": true
            },
            "Size": {
              "type": "string",
              "readOnly": true
            },
            "StripSize": {
              "type": "string",
              "readOnly": true,
              "description": "The strip size is the portion of a stripe that resides on a single drive in the drive group, this is measured in KB. \n"
            },
            "Type": {
              "type": "string",
              "readOnly": true
            },
            "Uuid": {
              "type": "string",
              "readOnly": true
            },
            "VendorUuid": {
              "type": "string",
              "readOnly": true
            },
            "VirtualDriveId": {
              "type": "string",
              "readOnly": true
            },
            "PhysicalDiskUsages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storagePhysicalDiskUsageRef"
              }
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            },
            "StorageController": {
              "$ref": "#/definitions/storageControllerRef",
              "description": "A collection of references to the [storage.Controller](mo://storage.Controller) Managed Object.\n\nWhen this managed object is deleted, the referenced [storage.Controller](mo://storage.Controller) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "VdMemberEps": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/storageVdMemberEpRef"
              },
              "description": "It is a reference to LocalDisk to build up a VirtualDrive.\n",
              "readOnly": true
            },
            "VirtualDriveExtension": {
              "$ref": "#/definitions/storageVirtualDriveExtensionRef",
              "description": "A collection of references to the [storage.VirtualDriveExtension](mo://storage.VirtualDriveExtension) Managed Object.\n\nWhen this managed object is deleted, the referenced [storage.VirtualDriveExtension](mo://storage.VirtualDriveExtension) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storageVirtualDriveList": {
      "properties": {
        "Count": {
          "description": "The number of storageVirtualDrives matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storageVirtualDrives matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageVirtualDrive"
          }
        }
      }
    },
    "storageVirtualDriveConfigRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageVirtualDriveConfig": {
      "title": "Virtual Drive",
      "description": "This type models a single virtual drive that needs to be created through this policy.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "AccessPolicy": {
              "type": "string",
              "enum": [
                "Default",
                "ReadWrite",
                "ReadOnly",
                "Blocked"
              ],
              "default": "Default",
              "description": "This property holds the access policy that host has on this virtual drive. \n"
            },
            "BootDrive": {
              "type": "boolean",
              "description": "This flag enables the use of this virtual drive as a boot drive. \n",
              "x-nullable": true
            },
            "DiskGroupName": {
              "type": "string",
              "readOnly": true,
              "description": "Disk group policy that has the disk group in which this virtual drive needs to be created. \n"
            },
            "DiskGroupPolicy": {
              "type": "string",
              "description": "Disk group policy that has the disk group in which this virtual drive needs to be created. \n"
            },
            "DriveCache": {
              "type": "string",
              "enum": [
                "Default",
                "NoChange",
                "Enable",
                "Disable"
              ],
              "default": "Default",
              "description": "This property expect disk cache policy. \n"
            },
            "ExpandToAvailable": {
              "type": "boolean",
              "description": "This flag enables this virtual drive to use all the available space in the disk group. When this flag is configured, the size property is ignored. \n",
              "x-nullable": true
            },
            "IoPolicy": {
              "type": "string",
              "enum": [
                "Default",
                "Direct",
                "Cached"
              ],
              "default": "Default",
              "description": "This property expects the desired IO mode - direct IO or cached IO. \n"
            },
            "Name": {
              "type": "string",
              "x-createOnly": true,
              "description": "The name of the virtual drive. The name can be between 1 and 15 alphanumeric characters. Spaces or any special characters other than - (hyphen), _ (underscore), : (colon), and . (period) are not allowed. \n"
            },
            "ReadPolicy": {
              "type": "string",
              "enum": [
                "Default",
                "ReadAhead",
                "NoReadAhead"
              ],
              "default": "Default",
              "description": "This property holds the read ahead mode to be used. \n"
            },
            "Size": {
              "type": "integer",
              "format": "int64",
              "description": "Virtual drive size in MB. This is a required field unless the 'Expand to Available' option is enabled. \n"
            },
            "WritePolicy": {
              "type": "string",
              "enum": [
                "Default",
                "WriteThrough",
                "WriteBackGoodBbu",
                "AlwaysWriteBack"
              ],
              "default": "Default",
              "description": "This property holds the write mode used to write the data in this virtual drive.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "storageVirtualDriveExtensionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageVirtualDriveExtension": {
      "title": "Storage:Virtual Drive Extension",
      "description": "Information of virtual drives as reported by a storage controller. In certain cases like S-series servers, virtual drive information will be reported by the controller separately and this represents such information.\n",
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "type": "object",
          "properties": {
            "Bootable": {
              "type": "string",
              "readOnly": true,
              "description": "It shows virtual drive is bootable. \n"
            },
            "ContainerId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "DriveState": {
              "type": "string",
              "readOnly": true
            },
            "Name": {
              "type": "string",
              "readOnly": true
            },
            "OperDeviceId": {
              "type": "string",
              "readOnly": true
            },
            "Uuid": {
              "type": "string",
              "readOnly": true
            },
            "VendorUuid": {
              "type": "string",
              "readOnly": true
            },
            "VirtualDriveDn": {
              "type": "string",
              "readOnly": true
            },
            "VirtualDriveId": {
              "type": "string",
              "readOnly": true,
              "description": "It shows virtual drive Id.  \n"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            },
            "StorageController": {
              "$ref": "#/definitions/storageControllerRef",
              "description": "A collection of references to the [storage.Controller](mo://storage.Controller) Managed Object.\n\nWhen this managed object is deleted, the referenced [storage.Controller](mo://storage.Controller) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "VirtualDrive": {
              "$ref": "#/definitions/storageVirtualDriveRef",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storageVirtualDriveExtensionList": {
      "properties": {
        "Count": {
          "description": "The number of storageVirtualDriveExtensions matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of storageVirtualDriveExtensions matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageVirtualDriveExtension"
          }
        }
      }
    },
    "storageVolumeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageVolume": {
      "title": "Storage:Volume",
      "description": "Generic storage volume object. It is a provisioned storage identity which can be mapped to host to enable host access.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "type": "string",
              "readOnly": true,
              "description": "Short description about the volume. \n"
            },
            "NaaId": {
              "type": "string",
              "readOnly": true,
              "description": "NAA id of volume. It is a significant number to identify corresponding lun path in hypervisor. \n"
            },
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "Named entitiy of the volume. \n"
            },
            "Size": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "User provisioned volume size. It is a size exposed to host. \n"
            },
            "StorageUtilization": {
              "$ref": "#/definitions/storageCapacity",
              "readOnly": true,
              "description": "Storage utilization of volume entity in storage array.  \n"
            },
            "StorageArray": {
              "$ref": "#/definitions/storageGenericArrayRef",
              "description": "Storage array managed object.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "storageVolumeUtilizationRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "storageVolumeUtilization": {
      "title": "Storage:Volume Utilization",
      "description": "Storage space utilization of Pure FlashArray volume entity.\n",
      "allOf": [
        {
          "$ref": "#/definitions/storageStorageUtilization"
        },
        {
          "type": "object"
        }
      ]
    },
    "syslogDeployTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "syslogLocalClientBaseRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "syslogLocalClientBase": {
      "title": "Syslog:Local Client Base",
      "description": "Lists properties that are common to all local logging clients. It serves as base class for all local logging clients.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "MinSeverity": {
              "type": "string",
              "enum": [
                "warning",
                "emergency",
                "alert",
                "critical",
                "error",
                "notice",
                "informational",
                "debug"
              ],
              "default": "warning",
              "description": "Lowest level of messages to be included in the local log.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "syslogLocalFileLoggingClientRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "syslogLocalFileLoggingClient": {
      "title": "Local Client",
      "description": "Local logging client on the endpoint.\n",
      "allOf": [
        {
          "$ref": "#/definitions/syslogLocalClientBase"
        },
        {
          "type": "object"
        }
      ]
    },
    "syslogPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "syslogPolicy": {
      "title": "Syslog",
      "description": "The syslog policy configure the syslog server to receive CIMC log entries.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "LocalClients": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/syslogLocalClientBase"
              },
              "description": "Set of local logging clients on the endpoint. \n"
            },
            "RemoteClients": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/syslogRemoteClientBase"
              },
              "description": "Set of remote logging clients on the endpoint.  \n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            },
            "Profiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/policyAbstractConfigProfileRef"
              },
              "description": "Relationship to the profile object.\n"
            }
          }
        }
      ]
    },
    "syslogPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of syslogPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of syslogPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/syslogPolicy"
          }
        }
      }
    },
    "syslogRemoteClientBaseRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "syslogRemoteClientBase": {
      "title": "Syslog:Remote Client Base",
      "description": "Lists properties that are common to all remote logging clients. It serves as a base class for all remote logging clients.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Enables/disables remote logging for the endpoint If enabled, log messages will be sent to the syslog server mentioned in the Hostname/IP Address field. \n",
              "x-nullable": true
            },
            "Hostname": {
              "type": "string",
              "description": "Hostname or IP Address of the syslog server where log should be stored. \n"
            },
            "MinSeverity": {
              "type": "string",
              "enum": [
                "warning",
                "emergency",
                "alert",
                "critical",
                "error",
                "notice",
                "informational",
                "debug"
              ],
              "default": "warning",
              "description": "Lowest level of messages to be included in the remote log. \n"
            },
            "Port": {
              "type": "integer",
              "format": "int64",
              "description": "Port number used for logging on syslog server. \n"
            },
            "Protocol": {
              "type": "string",
              "enum": [
                "udp",
                "tcp"
              ],
              "default": "udp",
              "description": "Transport layer protocol for transmission of log messages to syslog server.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "syslogRemoteLoggingClientRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "syslogRemoteLoggingClient": {
      "title": "Remote Client",
      "description": "Remote logging client for the endpoint.\n",
      "allOf": [
        {
          "$ref": "#/definitions/syslogRemoteClientBase"
        },
        {
          "type": "object"
        }
      ]
    },
    "syslogValidationTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "tamActionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "tamAction": {
      "title": "Tam:Action",
      "description": "An action is used to react when an object satifies the condition specified in alert query. For e.g. an action in case of an object matching a fieldNotice query would be to create an alert instance of type 'fieldNotice' for the affected object.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "AffectedObjectType": {
              "type": "string",
              "description": "Type of the managed object that should be marked with an instance of the Alert (when operation type is create) or that should have an alert instance removed (when operation type is remove). \n"
            },
            "AlertType": {
              "type": "string",
              "enum": [
                "psirt",
                "fieldNotice"
              ],
              "default": "psirt",
              "description": "Alert type is used to denote the category of an Intersight alert (FieldNotice, equipment Fault etc.). \n"
            },
            "Identifiers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/tamIdentifiers"
              },
              "description": "Identifiers represents the filter criteria (property names and values) used to identify an Intersight managed object of type specified in affectedObjectType property. An instance of an alert is then create on (or removed from) the identified managed object. \n"
            },
            "Name": {
              "type": "string",
              "description": "Uniquely identifies a given action among the set of actions corresponding to an advisory. Primarily used to store and compare results of subsequent iterations corresponding to the action queries. \n"
            },
            "OperationType": {
              "type": "string",
              "enum": [
                "create",
                "remove"
              ],
              "default": "create",
              "description": "Operation type for the alert action. An action is used to carry out the process of \"reacting\" to an alert condition. For e.g.in case of a fieldNotice alert, the intention may be to create a new alert (if the condition matches and there is no existing alert) or to remove an existing alert when the alert condition has been remedied. \n"
            },
            "Queries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/tamQueryEntry"
              },
              "description": "Set of SparkSQL queries used determine if a given alert is applicable or not. Refer to https://spark.apache.org/sql/ for more details. \n"
            },
            "Type": {
              "type": "string",
              "enum": [
                "restApi"
              ],
              "default": "restApi",
              "description": "Type of Intersight alert. An alert in Intersight could be one of several kinds (FieldNotice, PSIRT etc.). Primarily used for filtering alerts based on the type.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "tamAdvisoryRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "tamAdvisory": {
      "title": "Tam:Advisory",
      "description": "An Intersight Advisory. An advisory represents an identification of a potential issue and may also include  a recommendation for resolving the said issue. Advisories may be of different kind and severity. for e.g. It could be a security vulnerability or a performance issue or a hardware issue with different recommendations for resolving them.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "type": "string",
              "description": "Brief description of the advisory details. \n"
            },
            "Name": {
              "type": "string",
              "description": "A user defined name for the Intersight Advisory. \n"
            },
            "Severity": {
              "$ref": "#/definitions/tamSeverity",
              "description": "Severity level of the Intersight Advisory. \n"
            },
            "State": {
              "type": "string",
              "enum": [
                "active",
                "acknowledged"
              ],
              "default": "active",
              "description": "Current state of the advisory. Indicates if the user is interested in getting updates for the advisory.  \n"
            }
          }
        }
      ]
    },
    "tamAdvisoryCountRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "tamAdvisoryCount": {
      "title": "Tam:Advisory Count",
      "description": "Total number of advisories currently affecting a given Account.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "AdvisoryCount": {
              "type": "integer",
              "format": "int64",
              "description": "Total number of advisories affecting the account.  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "The account associated with Advisory count.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "tamAdvisoryCountList": {
      "properties": {
        "Count": {
          "description": "The number of tamAdvisoryCounts matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of tamAdvisoryCounts matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/tamAdvisoryCount"
          }
        }
      }
    },
    "tamAdvisoryInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "tamAdvisoryInfo": {
      "title": "Tam:Advisory Info",
      "description": "State of an advisory in the context of a given account. Used to capture a given account's preferences regarding  associated advisory.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "State": {
              "type": "string",
              "enum": [
                "active",
                "acknowledged"
              ],
              "default": "active",
              "description": "Current state of the advisory for the owner. Indicates if the user is interested in getting updates for the advisory.  \n"
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "The account associated with Advisory count.\n",
              "readOnly": true
            },
            "Advisory": {
              "$ref": "#/definitions/tamAdvisoryRef",
              "description": "Reference to the source Intersight advisory.\n"
            }
          }
        }
      ]
    },
    "tamAdvisoryInfoList": {
      "properties": {
        "Count": {
          "description": "The number of tamAdvisoryInfos matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of tamAdvisoryInfos matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/tamAdvisoryInfo"
          }
        }
      }
    },
    "tamAdvisoryInstanceRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "tamAdvisoryInstance": {
      "title": "Tam:Advisory Instance",
      "description": "Instance of an Intersight advisory applicable for an Intersight managed object. An advisory instance is created when a given advisory is found applicable for an Intersight managed object. An advisory instance is retained for some time even after being cleared for historical purposes. A 'cleared' advisory instance is deleted after the retention time is elaspsed.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "AffectedObjectMoid": {
              "type": "string",
              "description": "Moid of the Intersight MO affected by the alert. Deprecated now and will be removed in subsequent releases. \n"
            },
            "AffectedObjectType": {
              "type": "string",
              "description": "Object type of the Intersight MO affected by the alert. Deprecated now and will be removed in subsequent releases. \n"
            },
            "LastStateChangeTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Timestamp when a state change was observed on this advisory instnace. \n"
            },
            "LastVerifiedTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Timestamp when this advisory was last evaluated. \n"
            },
            "State": {
              "type": "string",
              "enum": [
                "unknown",
                "active",
                "cleared"
              ],
              "default": "unknown",
              "description": "Current state of the advisory instance (Active/Cleared/Unknown etc.).  \n"
            },
            "Advisory": {
              "$ref": "#/definitions/tamAdvisoryRef",
              "description": "Reference to the Intersight advisory affecting the managed object.\n"
            },
            "AffectedObject": {
              "$ref": "#/definitions/moBaseMoRef",
              "description": "Reference to the Intersight managed object afftected by the advisory.\n"
            },
            "DeviceRegistration": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "Device registation reference for the managed object affected by a given advisory instance. The managed object itself is represented using 'affectedObject' reference.\n"
            }
          }
        }
      ]
    },
    "tamAdvisoryInstanceList": {
      "properties": {
        "Count": {
          "description": "The number of tamAdvisoryInstances matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of tamAdvisoryInstances matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/tamAdvisoryInstance"
          }
        }
      }
    },
    "tamApiDataSourceRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "tamApiDataSource": {
      "title": "Tam:Api Data Source",
      "description": "Data source using Intersight API to collect data regarding managed devices.\n",
      "allOf": [
        {
          "$ref": "#/definitions/tamBaseDataSource"
        },
        {
          "type": "object",
          "properties": {
            "MoType": {
              "type": "string",
              "description": "Type of Intersight managed object used as data source. \n"
            },
            "Queries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/tamQueryEntry"
              },
              "description": "Optional set of Queries to filter the output for Api datasource. the queries are executed in the order specified.  \n"
            }
          }
        }
      ]
    },
    "tamBaseDataSourceRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "tamBaseDataSource": {
      "title": "Tam:Base Data Source",
      "description": "Represents source for the data needed to analyze the alerts. this could one of several supported source types (textFsmTemplates/Intersight API/external API). TextFsmTemplates and Intersight API are the only ones supported currently.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "description": "Name is used to unique identify and refer a given data source in an alert definition. \n"
            },
            "Type": {
              "type": "string",
              "enum": [
                "nxos",
                "intersightApi"
              ],
              "default": "nxos",
              "description": "Type of data source (for e.g. TextFsmTempalate based, Intersight API based etc.).  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "tamDeprecatedAdvisoryRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "tamIdentifiersRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "tamIdentifiers": {
      "title": "Tam:Identifiers",
      "description": "Identifiers are used to identify an affected object in an alert defition. please refer to https://Intersight.com/apidocs/introduction/#get-requests-and-query-capabilities for more details.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "description": "Name of the filter paramter. \n"
            },
            "Value": {
              "type": "string",
              "description": "Value of the filter paramter.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "tamPsirtSeverityRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "tamPsirtSeverity": {
      "title": "Tam:Psirt Severity",
      "description": "< Severity level of a security advisory. Each advisory type (psirt/field notice etc.) may have a different method of calculating the severity. For e.g. a PSIRT severity may depend upon the corresponding CVSS score where as field notices are always critical in nature.\n",
      "allOf": [
        {
          "$ref": "#/definitions/tamSeverity"
        },
        {
          "type": "object",
          "properties": {
            "Level": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "info"
              ],
              "default": "critical",
              "description": "severity level associated with the security advisory.  \n"
            }
          }
        }
      ]
    },
    "tamQueryEntryRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "tamQueryEntry": {
      "title": "Tam:Query Entry",
      "description": "Contains a set of queries, each with an integer priority. the queries are executed in the order of specified priority. The result of each query is used as an input to the query next in priority order.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "description": "Name is used to unique identify and result of the given query which can be used by subsequent queries as input data source. \n"
            },
            "Priority": {
              "type": "integer",
              "format": "int64",
              "description": "An integer value depicting the priority of the query among the queries that are part of the same QueryEntry collection. \n"
            },
            "Query": {
              "type": "string",
              "description": "A SparkSQL query to be used on a given data source.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "tamSecurityAdvisoryRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "tamSecurityAdvisory": {
      "title": "Tam:Security Advisory",
      "description": "Intersight representation of a Cisco PSIRT (https://tools.cisco.com/security/center/publicationListing.x) advisory definition. It includes the description of the security advisory and a corresponding reference to the published advisory. It also includes the Intersight data sources needed to evaluate the applicability of this advisory for relevant Intersight managed objects. A PSIRT definition is evaluated against all managed object referenced using the included data sources. Only Cisco TAC and Intersight devops engineers have the ability to create PSIRT definitions in Intersight.\n",
      "allOf": [
        {
          "$ref": "#/definitions/tamAdvisory"
        },
        {
          "type": "object",
          "properties": {
            "Actions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/tamAction"
              },
              "description": "An array of actions that are to be taken when a given managed object matches the criteria specified for being affected by an alert definition. \n"
            },
            "AdvisoryId": {
              "type": "string",
              "description": "Cisco generated identifier for the published security advisory.\n \n"
            },
            "ApiDataSources": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/tamApiDataSource"
              },
              "description": "An array of data sources that are used to provide data for queries used to identify an Intersight alert applicability. \n"
            },
            "BaseScore": {
              "type": "number",
              "description": "CVSS version 3 base score for the security Advisory.\n \n"
            },
            "CveIds": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "CVE (https://cve.mitre.org/about/faqs.html) identifiers associated with the published security Advisory.\n \n"
            },
            "DatePublished": {
              "type": "string",
              "format": "date-time",
              "description": "Date when the security advisory was first published by Cisco.\n \n"
            },
            "DateUpdated": {
              "type": "string",
              "format": "date-time",
              "description": "Date when the security advisory was last updated by Cisco.\n \n"
            },
            "EnvironmentalScore": {
              "type": "number",
              "description": "CVSS version 3 environmental score for the security Advisory.\n \n"
            },
            "ExternalUrl": {
              "type": "string",
              "description": "A link to an external URL describing security Advisory in more details.\n \n"
            },
            "Recommendation": {
              "type": "string",
              "description": "Recommended action to resolve the security advisory.\n \n"
            },
            "Status": {
              "type": "string",
              "enum": [
                "interim",
                "final"
              ],
              "default": "interim",
              "description": "Cisco assigned status of the published advisory based on whether the investigation is complete or on-going.\n \n"
            },
            "TemporalScore": {
              "type": "number",
              "description": "CVSS version 3 temporal score for the security Advisory.\n \n"
            },
            "Version": {
              "type": "string",
              "description": "Cisco assigned advisory version after latest revision.\n  \n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "tamSecurityAdvisoryList": {
      "properties": {
        "Count": {
          "description": "The number of tamSecurityAdvisories matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of tamSecurityAdvisories matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/tamSecurityAdvisory"
          }
        }
      }
    },
    "tamSeverityRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "tamSeverity": {
      "title": "Tam:Severity",
      "description": "< Severity associated with the advisory. Severity assignment and interpretation is specific to each type of advisory. Each advisory type (SecurityAdvisory etc.) is supposed to extend and implement Severity type based on the advisory type requirements.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "tamTextFsmTemplateDataSourceRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "tamTextFsmTemplateDataSource": {
      "title": "Tam:Text Fsm Template Data Source",
      "description": "TextFsmTemplate based data source used for data collection from the managed devices.\n",
      "allOf": [
        {
          "$ref": "#/definitions/tamBaseDataSource"
        },
        {
          "type": "object",
          "properties": {
            "Cmd": {
              "type": "string",
              "description": "Command used to gather data needed to evaluate field notice applicability.  \n"
            }
          }
        }
      ]
    },
    "taskPureStorageScopedInventoryRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "taskPureStorageScopedInventory": {
      "title": "Task:Pure Storage Scoped Inventory",
      "description": "API to trigger on-demand PureStorage FlashArray inventory to update modified objects in Intersight report.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "ManagedObject": {
              "type": "string",
              "x-createOnly": true,
              "description": "PureStorage FlashArray managed object name. Example: storage.PureHost, storage.PureVolume etc.\n \n"
            },
            "PropertyName": {
              "type": "string",
              "x-createOnly": true,
              "description": "Attribute name of PureStorage FlashArray managed object.\nExample: For storage.PureVolume managed object, Name is an attribute.\n \n"
            },
            "PropertyValue": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-createOnly": true,
              "description": "Managed object property value. It is an object name for which inventory need to be collected or updated.\n  \n"
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "Device registration managed object that represents this storage array connection to Intersight.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "taskScheduleRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "techsupportmanagementDownloadRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "techsupportmanagementEndPointRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "techsupportmanagementNiaParamRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "techsupportmanagementTechSupportBundleRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "techsupportmanagementTechSupportStatusRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "telemetryExpectScriptRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "telemetryInitiateDataCollectionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "telemetryStatCollectionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "telemetryStatCollectionPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "telemetryStatLicenseRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "telemetryTextFsmCollectionStatusRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "telemetryTextFsmCollectorRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "telemetryTextFsmDataSourceRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "telemetryTextFsmTemplateRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "telemetryTimeSeriesRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "telemetryTimeSeries": {
      "title": "Telemetry:Time Series",
      "description": "Exposes a REST endpoint for performing queries against Druid time series data.\nView Telemetry allows [POST of a Druid query](http://druid.io/docs/latest/querying/querying).\nManage Telemetry allows [READ of broker status](http://druid.io/docs/latest/operations/api-reference.html#broker).\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object"
        }
      ]
    },
    "telemetryTimeSeriesList": {
      "properties": {
        "Count": {
          "description": "The number of telemetryTimeSeries matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of telemetryTimeSeries matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/telemetryTimeSeries"
          }
        }
      }
    },
    "telemetryWaitForDataCollectionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "terminalAuditLogRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "terminalAuditLog": {
      "title": "Terminal:Audit Log",
      "description": "Audit log of remote terminal user sessions.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "EndTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "The time the terminal was closed. If terminal has not closed, value is zero time.  \n"
            },
            "StartTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "The time the terminal session was opened.  \n"
            },
            "DeviceRegistration": {
              "$ref": "#/definitions/assetDeviceConnectionRef",
              "description": "The device this terminal was opened on.\n",
              "readOnly": true
            },
            "User": {
              "$ref": "#/definitions/iamUserRef",
              "description": "The user that opened the terminal session.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "terminalAuditLogList": {
      "properties": {
        "Count": {
          "description": "The number of terminalAuditLogs matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of terminalAuditLogs matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/terminalAuditLog"
          }
        }
      }
    },
    "topSystemRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "topSystem": {
      "title": "Top:System",
      "description": "Root container for all UCSM / CIMC MOs.\n",
      "allOf": [
        {
          "$ref": "#/definitions/inventoryBase"
        },
        {
          "type": "object",
          "properties": {
            "Ipv4Address": {
              "type": "string",
              "readOnly": true,
              "description": "The IPv4 address of system. \n"
            },
            "Ipv6Address": {
              "type": "string",
              "readOnly": true,
              "description": "The IPv6 address of system. \n"
            },
            "Mode": {
              "type": "string",
              "readOnly": true
            },
            "Name": {
              "type": "string",
              "readOnly": true
            },
            "TimeZone": {
              "type": "string",
              "description": "The operational timezone of the system, empty indicates no timezone has been set specifically.  \n"
            },
            "ComputeBlades": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/computeBladeRef"
              }
            },
            "ComputeRackUnits": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/computeRackUnitRef"
              },
              "readOnly": true
            },
            "ManagementController": {
              "$ref": "#/definitions/managementControllerRef",
              "readOnly": true
            },
            "NetworkElements": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/networkElementRef"
              }
            },
            "RegisteredDevice": {
              "$ref": "#/definitions/assetDeviceRegistrationRef",
              "description": "The Device to which this Managed Object is associated.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "topSystemList": {
      "properties": {
        "Count": {
          "description": "The number of topSystems matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of topSystems matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/topSystem"
          }
        }
      }
    },
    "ucsdBackupInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "ucsdBackupInfo": {
      "title": "Ucsd:Backup Info",
      "description": "List of backup images available for target end device for restore operation.\n",
      "allOf": [
        {
          "$ref": "#/definitions/recoveryAbstractBackupInfo"
        },
        {
          "type": "object",
          "properties": {
            "BackupFileName": {
              "type": "string",
              "readOnly": true,
              "description": "Auto generated backup File Name with combination of file prefix given an user input and the timestamp. \n"
            },
            "BackupLocation": {
              "type": "string",
              "readOnly": true,
              "description": "Backup location that contains the backup images for end device which can be used for restore operation. \n"
            },
            "BackupServerIp": {
              "type": "string",
              "readOnly": true,
              "description": "Backup server where backup images are maintained. \n"
            },
            "BackupSize": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Size of the backup image in bytes. \n"
            },
            "Connectors": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ucsdConnectorPack"
              },
              "readOnly": true,
              "description": "Connector pack versions that are active on the UCS Director when this backup image was taken. \n"
            },
            "Duration": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Time taken for the backup to be completed. \n"
            },
            "EncryptionKey": {
              "type": "string",
              "description": "The key used for encrypting the backup file. \n"
            },
            "FailureReason": {
              "type": "string",
              "readOnly": true,
              "description": "Reason for backup failure. \n"
            },
            "IsPurged": {
              "type": "boolean",
              "readOnly": true,
              "description": "Backup image got purged or not. The backup images get purged based on the retention count set by the user in the backup config policy. \n"
            },
            "LastModified": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Last modified time when this backup record got updated. \n"
            },
            "PercentageCompletion": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Backup current precentage completion status information. \n"
            },
            "ProductVersion": {
              "type": "string",
              "description": "The end device product version when the backup image was taken. \n"
            },
            "Protocol": {
              "type": "string",
              "readOnly": true,
              "description": "Protocol used for the remote backup. possible values are FTP, SCP and SFTP. Not applicable for the localhost (127.0.0.1). \n"
            },
            "StageCompletion": {
              "type": "string",
              "readOnly": true,
              "description": "Backup current status stage information. \n"
            },
            "StartTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Start time of backup when it got initiated. \n"
            },
            "Status": {
              "type": "string",
              "readOnly": true,
              "description": "Current status of Backup current.  \n"
            }
          }
        }
      ]
    },
    "ucsdBackupInfoList": {
      "properties": {
        "Count": {
          "description": "The number of ucsdBackupInfos matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of ucsdBackupInfos matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ucsdBackupInfo"
          }
        }
      }
    },
    "ucsdConnectorPackRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "ucsdConnectorPack": {
      "title": "Ucsd:Connector Pack",
      "description": "Information about the connector packs present in the backup file.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "ConnectorFeature": {
              "type": "string",
              "readOnly": true,
              "description": "State of the connector pack whether it is enabled or disabled. \n"
            },
            "DependencyNames": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "List of dependent connectors on the UCS Director for this connector. For example BigData depends on UCS Connector. \n"
            },
            "DownloadedVersion": {
              "type": "string",
              "readOnly": true,
              "description": "Version of the connector pack that is last downloaded successfully to UCS Director. \n"
            },
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the connector pack running on the UCS Director. \n"
            },
            "Services": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "List of dependent connectors on the UCS Director for this connector. For example BigData depends on UCS Connector. \n"
            },
            "State": {
              "type": "string",
              "readOnly": true,
              "description": "State of the connector pack whether it is enabled or disabled. \n"
            },
            "Version": {
              "type": "string",
              "readOnly": true,
              "description": "Version of the connector pack.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "ucsdInitiateDatabaseRestoreRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "ucsdRestoreHandlerRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "ucsdUcsdRestoreParametersRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "ucsdUcsdRestoreParameters": {
      "title": "Ucsd:Ucsd Restore Parameters",
      "description": "Restore Configuration Parameters for UCS Director restore workflow\n",
      "allOf": [
        {
          "$ref": "#/definitions/recoveryConfigParams"
        },
        {
          "type": "object",
          "properties": {
            "IsPasswordSet": {
              "type": "boolean",
              "x-nullable": true
            },
            "Location": {
              "type": "string",
              "description": "The complete location of the path on the server. The location should be specified in the following format- hostname-or-ipv4address<:port>/absolute-file-path \n"
            },
            "Password": {
              "type": "string",
              "description": "The password of the target backup server. Only required if the target server is accessed using SFTP or SCP protocol. \n"
            },
            "Protocol": {
              "type": "string",
              "description": "The protocol used to backup the UCS Director. \n"
            },
            "RestoreConfigurationFiles": {
              "type": "boolean",
              "description": "Decides whether UCS Director property files should also be restored \n",
              "x-nullable": true
            },
            "RestoreLicense": {
              "type": "boolean",
              "description": "Decides whether license should also be restored \n",
              "x-nullable": true
            },
            "Username": {
              "type": "string",
              "description": "The username of the target backup server. Only required if the target server is accessed using SFTP or SCP protocol.  \n"
            }
          }
        }
      ]
    },
    "ucsdValidateRestoreInputsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "ucsdWaitForDatabaseRestoreCompletionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "ucsdconnectorBackupPolicyConfigRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "ucsdconnectorConnectorPackDependentsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "ucsdconnectorConnectorPackDownloadMetaRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "ucsdconnectorConnectorPackInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "ucsdconnectorFieldQueryRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "ucsdconnectorInventoryMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "ucsdconnectorRestClientMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "ucsdconnectorRestoreBackupMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "ucsdconnectorSqlQueryRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "ucsdconnectorTelemetryMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "ucsdconnectorTelemetryMoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "viewsViewRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "viewsView": {
      "title": "Views:View",
      "description": "An abstract representation of a view. A view provides read-only access to the object model. A view can combine and transform data from multiple data sources.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object"
        }
      ]
    },
    "vmediaDeployTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vmediaMappingRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vmediaMapping": {
      "title": "Vmedia:Mapping",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "AuthenticationProtocol": {
              "type": "string",
              "enum": [
                "none",
                "ntlm",
                "ntlmi",
                "ntlmv2",
                "ntlmv2i",
                "ntlmssp",
                "ntlmsspi"
              ],
              "default": "none",
              "description": "Type of Authentication protocol when CIFS is used for communication with the remote server. \n"
            },
            "DeviceType": {
              "type": "string",
              "enum": [
                "cdd",
                "hdd"
              ],
              "default": "cdd",
              "description": "Type of remote Virtual Media device. \n"
            },
            "HostName": {
              "type": "string",
              "description": "IP address or hostname of the remote server. \n"
            },
            "IsPasswordSet": {
              "type": "boolean",
              "x-nullable": true
            },
            "MountOptions": {
              "type": "string",
              "description": "Mount options for the Virtual Media mapping. The field can be left blank or filled in a comma separated list with the following options.\\n For NFS, supported options are ro, rw, nolock, noexec, soft, port=VALUE, timeo=VALUE, retry=VALUE.\\n For CIFS, supported options are soft, nounix, noserverino, guest.\\n For HTTP/HTTPS, the only supported option is noauto. \n"
            },
            "MountProtocol": {
              "type": "string",
              "enum": [
                "nfs",
                "cifs",
                "http",
                "https"
              ],
              "default": "nfs",
              "description": "Protocol to use to communicate with the remote server. \n"
            },
            "Password": {
              "type": "string",
              "description": "Password associated with the username. \n"
            },
            "RemoteFile": {
              "type": "string",
              "description": "Name of the remote file. It should be of .img format for HDD Virtual Media mapping and .iso format for CDD Virtual Media mapping. \n"
            },
            "RemotePath": {
              "type": "string",
              "description": "URL path to the location of the image on the remote server. The preferred format is '/path/'. \n"
            },
            "Username": {
              "type": "string",
              "description": "Username to log in to the remote server. \n"
            },
            "VolumeName": {
              "type": "string",
              "description": "Identity of the image for Virtual Media mapping.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "vmediaPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vmediaPolicy": {
      "title": "Virtual Media",
      "description": "Policy to configure virtual media settings on endpoint.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "State of the Virtual Media service on the endpoint. \n",
              "x-nullable": true
            },
            "Encryption": {
              "type": "boolean",
              "description": "If enabled, allows encryption of all Virtual Media communications. \n",
              "x-nullable": true
            },
            "LowPowerUsb": {
              "type": "boolean",
              "description": "If enabled, the virtual drives appear on the boot selection menu after mapping the image and rebooting the host. \n",
              "x-nullable": true
            },
            "Mappings": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/vmediaMapping"
              },
              "description": "Adds a new Virtual Media mapping for images.  \n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            },
            "Profiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/policyAbstractConfigProfileRef"
              },
              "description": "Relationship to the profile object.\n"
            }
          }
        }
      ]
    },
    "vmediaPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of vmediaPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of vmediaPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/vmediaPolicy"
          }
        }
      }
    },
    "vmediaValidationTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicArfsSettingsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicArfsSettings": {
      "title": "ARFS Settings",
      "description": "Settings for Accelerated Receive Flow Steering to reduce the network latency and increase CPU cache efficiency.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Status of Accelerated Receive Flow Steering on the virtual ethernet interface.  \n",
              "x-nullable": true
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "vnicCdnRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicCdn": {
      "title": "Consistent Device Naming",
      "description": "Consistent Device Naming configuration for the virtual NIC.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Source": {
              "type": "string",
              "enum": [
                "vnic",
                "user"
              ],
              "default": "vnic",
              "description": "Source of the CDN. It can either be user specified or be the same as the vNIC name. \n"
            },
            "Value": {
              "type": "string",
              "description": "The CDN value entered in case of user defined mode.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "vnicCompletionQueueSettingsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicCompletionQueueSettings": {
      "title": "Completion Queue Settings",
      "description": "Completion Queue resource settings.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Count": {
              "type": "integer",
              "format": "int64",
              "description": "The number of completion queue resources to allocate. In general, the number of completion queue resources you should allocate is equal to the number of transmit queue resources plus the number of receive queue resources. \n"
            },
            "RingSize": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "The number of descriptors in each completion queue.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "vnicEthAdapterPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicEthAdapterPolicy": {
      "title": "Ethernet Adapter",
      "description": "An Ethernet adapter policy governs the host-side behavior of the adapter, including how the adapter handles traffic. For each VIC Virtual Ethernet Interface you can configure various features like VXLAN, NVGRE, ARFS, Interrupt settings, and TCP Offload settings.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "AdvancedFilter": {
              "type": "boolean",
              "description": "Enables advanced filtering on the interface. \n",
              "x-nullable": true
            },
            "ArfsSettings": {
              "$ref": "#/definitions/vnicArfsSettings",
              "description": "Settings for Accelerated Receive Flow Steering to reduce the network latency and increase CPU cache efficiency. \n"
            },
            "CompletionQueueSettings": {
              "$ref": "#/definitions/vnicCompletionQueueSettings",
              "description": "Completion Queue resource settings. \n"
            },
            "InterruptSettings": {
              "$ref": "#/definitions/vnicEthInterruptSettings",
              "description": "Interrupt Settings for the virtual ethernet interface. \n"
            },
            "NvgreSettings": {
              "$ref": "#/definitions/vnicNvgreSettings",
              "description": "Network Virtualization using Generic Routing Encapsulation Settings. \n"
            },
            "RoceSettings": {
              "$ref": "#/definitions/vnicRoceSettings",
              "description": "Settings for RDMA over Converged Ethernet. \n"
            },
            "RssSettings": {
              "type": "boolean",
              "description": "Receive Side Scaling allows the incoming traffic to be spread across multiple CPU cores. \n",
              "x-nullable": true
            },
            "RxQueueSettings": {
              "$ref": "#/definitions/vnicEthRxQueueSettings",
              "description": "Receive Queue resouce settings. \n"
            },
            "TcpOffloadSettings": {
              "$ref": "#/definitions/vnicTcpOffloadSettings",
              "description": "The TCP offload settings decide whether to offload the TCP related network functions from the CPU to the network hardware or not. \n"
            },
            "TxQueueSettings": {
              "$ref": "#/definitions/vnicEthTxQueueSettings",
              "description": "Transmit Queue resource settings. \n"
            },
            "VxlanSettings": {
              "$ref": "#/definitions/vnicVxlanSettings",
              "description": "Virtual Extensible LAN Protocol Settings.  \n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "vnicEthAdapterPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of vnicEthAdapterPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of vnicEthAdapterPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/vnicEthAdapterPolicy"
          }
        }
      }
    },
    "vnicEthIfRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicEthIf": {
      "title": "Virtual Ethernet Interface",
      "description": "Virtual Ethernet Interface.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Cdn": {
              "$ref": "#/definitions/vnicCdn",
              "description": "Consistent Device Naming configuration for the virtual NIC. \n"
            },
            "Name": {
              "type": "string",
              "description": "Name of the virtual ethernet interface. \n"
            },
            "Order": {
              "type": "integer",
              "format": "int64",
              "description": "The order in which the virtual interface is brought up. The order assigned to an interface should be unique for all the Ethernet and Fibre-Channel interfaces on each PCI link on a VIC adapter. The maximum value of PCI order is limited by the number of virtual interfaces (Ethernet and Fibre-Channel) on each PCI link on a VIC adapter. All VIC adapters have a single PCI link except VIC 1385 which has two. \n"
            },
            "Placement": {
              "$ref": "#/definitions/vnicPlacementSettings",
              "description": "Placement Settings for the virtual interface. \n"
            },
            "UsnicSettings": {
              "$ref": "#/definitions/vnicUsnicSettings",
              "description": "User Space NIC Settings that enable low-latency and higher throughput by bypassing the kernel layer when sending/receiving packets. \n"
            },
            "VmqSettings": {
              "$ref": "#/definitions/vnicVmqSettings",
              "description": "Virtual Machine Queue Settings for the virtual interface that allow efficient transfer of network traffic to the guest OS.  \n"
            },
            "EthAdapterPolicy": {
              "$ref": "#/definitions/vnicEthAdapterPolicyRef",
              "description": "Relationship to the the Ethernet Adapter Policy.\n"
            },
            "EthNetworkPolicy": {
              "$ref": "#/definitions/vnicEthNetworkPolicyRef",
              "description": "Relationship to the Ethernet Network Policy.\n"
            },
            "EthQosPolicy": {
              "$ref": "#/definitions/vnicEthQosPolicyRef",
              "description": "Relationship to the Ethernet QoS Policy.\n"
            },
            "LanConnectivityPolicy": {
              "$ref": "#/definitions/vnicLanConnectivityPolicyRef",
              "description": "Relationship to the LAN Connectivity Policy.\n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "vnicEthIfList": {
      "properties": {
        "Count": {
          "description": "The number of vnicEthIfs matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of vnicEthIfs matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/vnicEthIf"
          }
        }
      }
    },
    "vnicEthInterruptSettingsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicEthInterruptSettings": {
      "title": "Interrupt Settings",
      "description": "Interrupt settings for the virtual ethernet interface.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "CoalescingTime": {
              "type": "integer",
              "format": "int64",
              "description": "The time to wait between interrupts or the idle period that must be encountered before an interrupt is sent. To turn off interrupt coalescing, enter 0 (zero) in this field. \n"
            },
            "CoalescingType": {
              "type": "string",
              "enum": [
                "MIN",
                "IDLE"
              ],
              "default": "MIN",
              "description": "Interrupt Coalescing Type. This can be one of the following:- MIN  - The system waits for the time specified in the Coalescing Time field before sending another interrupt event IDLE - The system does not send an interrupt until there is a period of no activity lasting as least as long as the time specified in the Coalescing Time field. \n"
            },
            "Count": {
              "type": "integer",
              "format": "int64",
              "description": "The number of interrupt resources to allocate. Typical value is be equal to the number of completion queue resources. \n"
            },
            "Mode": {
              "type": "string",
              "enum": [
                "MSIx",
                "MSI",
                "INTx"
              ],
              "default": "MSIx",
              "description": "Preferred driver interrupt mode. This can be one of the following:- MSIx - Message Signaled Interrupts (MSI) with the optional extension. MSI  - MSI only. INTx - PCI INTx interrupts. MSIx is the recommended option.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "vnicEthNetworkPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicEthNetworkPolicy": {
      "title": "Ethernet Network",
      "description": "An Ethernet Network policy determines if the port can carry single VLAN (Access) or multiple VLANs (Trunk) traffic. You can specify the VLAN to be associated with an Ethernet packet if no tag is found.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "VlanSettings": {
              "$ref": "#/definitions/vnicVlanSettings",
              "description": "VLAN configuration for the virtual interface.  \n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "vnicEthNetworkPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of vnicEthNetworkPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of vnicEthNetworkPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/vnicEthNetworkPolicy"
          }
        }
      }
    },
    "vnicEthQosPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicEthQosPolicy": {
      "title": "Ethernet QoS",
      "description": "An Ethernet Quality of Service (QoS) policy assigns a system class to the outgoing traffic for a vNIC. This system class determines the quality of service for the outgoing traffic. For certain adapters you can also specify additional controls like burst and rate on the outgoing traffic.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "Cos": {
              "type": "integer",
              "format": "int64",
              "description": "Class of Service to be associated to the traffic on the virtual interface. \n"
            },
            "Mtu": {
              "type": "integer",
              "format": "int64",
              "description": "The Maximum Transmission Unit (MTU) or packet size that the virtual interface accepts. \n"
            },
            "RateLimit": {
              "type": "integer",
              "format": "int64",
              "description": "The value in Mbps (0-100000) to use for limiting the data rate on the virtual interface. Setting this to zero will turn rate limiting off. \n"
            },
            "TrustHostCos": {
              "type": "boolean",
              "description": "Enables usage of the Class of Service provided by the operating system.  \n",
              "x-nullable": true
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "vnicEthQosPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of vnicEthQosPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of vnicEthQosPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/vnicEthQosPolicy"
          }
        }
      }
    },
    "vnicEthRxQueueSettingsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicEthRxQueueSettings": {
      "title": "Queue Settings",
      "description": "Receive Queue resource settings.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Count": {
              "type": "integer",
              "format": "int64",
              "description": "The number of queue resources to allocate. \n"
            },
            "RingSize": {
              "type": "integer",
              "format": "int64",
              "description": "The number of descriptors in each queue.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "vnicEthTxQueueSettingsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicEthTxQueueSettings": {
      "title": "Queue Settings",
      "description": "Transmit Queue resource settings.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Count": {
              "type": "integer",
              "format": "int64",
              "description": "The number of queue resources to allocate. \n"
            },
            "RingSize": {
              "type": "integer",
              "format": "int64",
              "description": "The number of descriptors in each queue.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "vnicFcAdapterPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicFcAdapterPolicy": {
      "title": "Fibre Channel Adapter",
      "description": "A Fibre Channel Adapter policy governs the host-side behavior of the adapter, including how the adapter handles traffic. You can enable FCP Error Recovery, change the default settings of Queues and Interrupt handling for performance enhancement.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "ErrorDetectionTimeout": {
              "type": "integer",
              "format": "int64",
              "description": "Error Detection Timeout, also referred to as EDTOV, is the number of milliseconds to wait before the system assumes that an error has occurred. \n"
            },
            "ErrorRecoverySettings": {
              "$ref": "#/definitions/vnicFcErrorRecoverySettings",
              "description": "Fibre Channel Error Recovery Settings. \n"
            },
            "FlogiSettings": {
              "$ref": "#/definitions/vnicFlogiSettings",
              "description": "Fibre Channel Flogi Settings. \n"
            },
            "InterruptSettings": {
              "$ref": "#/definitions/vnicFcInterruptSettings",
              "description": "Interrupt Settings for the virtual fibre channel interface. \n"
            },
            "IoThrottleCount": {
              "type": "integer",
              "format": "int64",
              "description": "The maximum number of data or control I/O operations that can be pending for the virtual interface at one time. If this value is exceeded, the additional I/O operations wait in the queue until the number of pending I/O operations decreases and the additional operations can be processed. \n"
            },
            "LunCount": {
              "type": "integer",
              "format": "int64",
              "description": "The maximum number of LUNs that the Fibre Channel driver will export or show. The maximum number of LUNs is usually controlled by the operating system running on the server. \n"
            },
            "LunQueueDepth": {
              "type": "integer",
              "format": "int64",
              "description": "The number of commands that the HBA can send and receive in a single transmission per LUN. \n"
            },
            "PlogiSettings": {
              "$ref": "#/definitions/vnicPlogiSettings",
              "description": "Fibre Channel Plogi Settings. \n"
            },
            "ResourceAllocationTimeout": {
              "type": "integer",
              "format": "int64",
              "description": "Resource Allocation Timeout, also referred to as RATOV, is the number of milliseconds to wait before the system assumes that a resource cannot be properly allocated. \n"
            },
            "RxQueueSettings": {
              "$ref": "#/definitions/vnicFcQueueSettings",
              "description": "Fibre Channel Receive Queue Settings. \n"
            },
            "ScsiQueueSettings": {
              "$ref": "#/definitions/vnicScsiQueueSettings",
              "description": "SCSI Input/Output Queue Settings. \n"
            },
            "TxQueueSettings": {
              "$ref": "#/definitions/vnicFcQueueSettings",
              "description": "Fibre Channel Transmit Queue Settings.  \n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "vnicFcAdapterPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of vnicFcAdapterPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of vnicFcAdapterPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/vnicFcAdapterPolicy"
          }
        }
      }
    },
    "vnicFcErrorRecoverySettingsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicFcErrorRecoverySettings": {
      "title": "Error Recovery Settings",
      "description": "Fibre Channel Error Recovery Settings.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Enables Fibre Channel Error recovery. \n",
              "x-nullable": true
            },
            "IoRetryCount": {
              "type": "integer",
              "format": "int64",
              "description": "The number of times an I/O request to a port is retried because the port is busy before the system decides the port is unavailable. \n"
            },
            "IoRetryTimeout": {
              "type": "integer",
              "format": "int64",
              "description": "The number of seconds the adapter waits before aborting the pending command and resending the same IO request. \n"
            },
            "LinkDownTimeout": {
              "type": "integer",
              "format": "int64",
              "description": "The number of milliseconds the port should actually be down before it is marked down and fabric connectivity is lost. \n"
            },
            "PortDownTimeout": {
              "type": "integer",
              "format": "int64",
              "description": "The number of milliseconds a remote Fibre Channel port should be offline before informing the SCSI upper layer that the port is unavailable. For a server with a VIC adapter running ESXi, the recommended value is 10000. For a server with a port used to boot a Windows OS from the SAN, the recommended value is 5000 milliseconds.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "vnicFcIfRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicFcIf": {
      "title": "Virtual Fibre Channel Interface",
      "description": "Virtual Fibre Channel Interface.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "description": "Name of the virtual fibre channel interface. \n"
            },
            "Order": {
              "type": "integer",
              "format": "int64",
              "description": "The order in which the virtual interface is brought up. The order assigned to an interface should be unique for all the Ethernet and Fibre-Channel interfaces on each PCI link on a VIC adapter. The maximum value of PCI order is limited by the number of virtual interfaces (Ethernet and Fibre-Channel) on each PCI link on a VIC adapter. All VIC adapters have a single PCI link except VIC 1385 which has two. \n"
            },
            "PersistentBindings": {
              "type": "boolean",
              "description": "Enables retention of LUN ID associations in memory until they are manually cleared. \n",
              "x-nullable": true
            },
            "Placement": {
              "$ref": "#/definitions/vnicPlacementSettings",
              "description": "Placement Settings for the virtual interface. \n"
            },
            "FcAdapterPolicy": {
              "$ref": "#/definitions/vnicFcAdapterPolicyRef",
              "description": "Relationship to the the Fibre Channel Adapter Policy.\n"
            },
            "FcNetworkPolicy": {
              "$ref": "#/definitions/vnicFcNetworkPolicyRef",
              "description": "Relationship to the Fibre Channel Network Policy.\n"
            },
            "FcQosPolicy": {
              "$ref": "#/definitions/vnicFcQosPolicyRef",
              "description": "Relationship to the Fibre Channel QoS Policy.\n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            },
            "SanConnectivityPolicy": {
              "$ref": "#/definitions/vnicSanConnectivityPolicyRef",
              "description": "Relationship to the SAN Connectivity Policy.\n"
            }
          }
        }
      ]
    },
    "vnicFcIfList": {
      "properties": {
        "Count": {
          "description": "The number of vnicFcIfs matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of vnicFcIfs matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/vnicFcIf"
          }
        }
      }
    },
    "vnicFcInterruptSettingsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicFcInterruptSettings": {
      "title": "Interrupt Settings",
      "description": "Interrupt Settings for the virtual fibre channel interface.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Mode": {
              "type": "string",
              "enum": [
                "MSIx",
                "MSI",
                "INTx"
              ],
              "default": "MSIx",
              "description": "The preferred driver interrupt mode. This can be one of the following:- MSIx - Message Signaled Interrupts (MSI) with the optional extension. MSI  - MSI only. INTx - PCI INTx interrupts. MSIx is the recommended option.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "vnicFcNetworkPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicFcNetworkPolicy": {
      "title": "Fibre Channel Network",
      "description": "A Fibre Channel Network policy governs the VSAN configuration for the virtual interfaces.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "VsanSettings": {
              "$ref": "#/definitions/vnicVsanSettings",
              "description": "VSAN configuration for the virtual interface.  \n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "vnicFcNetworkPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of vnicFcNetworkPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of vnicFcNetworkPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/vnicFcNetworkPolicy"
          }
        }
      }
    },
    "vnicFcQosPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicFcQosPolicy": {
      "title": "Fibre Channel QoS",
      "description": "A Fibre Channel Quality of Service (QoS) policy assigns a system class to the outgoing traffic for a vHBA. This system class determines the quality of service for the outgoing traffic. For certain adapters you can also specify additional controls like burst and rate on the outgoing traffic.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "Cos": {
              "type": "integer",
              "format": "int64",
              "description": "Class of Service to be associated to the traffic on the virtual interface. \n"
            },
            "MaxDataFieldSize": {
              "type": "integer",
              "format": "int64",
              "description": "The maximum size of the Fibre Channel frame payload bytes that the virtual interface supports. \n"
            },
            "RateLimit": {
              "type": "integer",
              "format": "int64",
              "description": "The value in Mbps to use for limiting the data rate on the virtual interface. Setting this to zero will turn rate limiting off.  \n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "vnicFcQosPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of vnicFcQosPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of vnicFcQosPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/vnicFcQosPolicy"
          }
        }
      }
    },
    "vnicFcQueueSettingsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicFcQueueSettings": {
      "title": "Queue Settings",
      "description": "Transmit/Receive Queue resource settings.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Count": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "The number of queue resources to allocate. \n"
            },
            "RingSize": {
              "type": "integer",
              "format": "int64",
              "description": "The number of descriptors in each queue.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "vnicFlogiSettingsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicFlogiSettings": {
      "title": "Flogi Settings",
      "description": "Fibre Channel Flogi Settings.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Retries": {
              "type": "integer",
              "format": "int64",
              "description": "The number of times that the system tries to log in to the fabric after the first failure. \n"
            },
            "Timeout": {
              "type": "integer",
              "format": "int64",
              "description": "The number of milliseconds that the system waits before it tries to log in again.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "vnicLanConnectivityPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicLanConnectivityPolicy": {
      "title": "LAN Connectivity",
      "description": "A LAN Connectivity Policy determines the network resources and the connections between the server and the LAN on the network. This policy uses Consistent Device Naming to configure the vNIC. You can configure a usNIC or VMQ connection for the vNIC to improve network performance.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "EthIfs": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/vnicEthIfRef"
              },
              "description": "A collection of references to the [vnic.EthIf](mo://vnic.EthIf) Managed Object.\n\nWhen this managed object is deleted, the referenced [vnic.EthIf](mo://vnic.EthIf) MOs on the other side of the relationship are deleted.\n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            },
            "Profiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/policyAbstractConfigProfileRef"
              },
              "description": "Relationship to the server profile.\n"
            }
          }
        }
      ]
    },
    "vnicLanConnectivityPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of vnicLanConnectivityPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of vnicLanConnectivityPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/vnicLanConnectivityPolicy"
          }
        }
      }
    },
    "vnicLcpDeployTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicLcpValidationTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicNvgreSettingsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicNvgreSettings": {
      "title": "NVGRE Settings",
      "description": "Network Virtualization using Generic Routing Encapsulation Settings.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Status of the Network Virtualization using Generic Routing Encapsulation on the virtual ethernet interface.  \n",
              "x-nullable": true
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "vnicPlacementSettingsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicPlacementSettings": {
      "title": "Placement Settings",
      "description": "Placement Settings for the virtual interface.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Id": {
              "type": "string",
              "description": "PCIe Slot where the VIC adapter is installed. Supported values are (1-15) and MLOM. \n"
            },
            "PciLink": {
              "type": "integer",
              "format": "int64",
              "description": "The PCI Link used as transport for the virtual interface. All VIC adapters have a single PCI link except VIC 1385 which has two.  \n"
            },
            "Uplink": {
              "type": "integer",
              "format": "int64",
              "description": "Adapter port on which the virtual interface will be created.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "vnicPlogiSettingsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicPlogiSettings": {
      "title": "Plogi Settings",
      "description": "Fibre Channel Plogi Settings.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Retries": {
              "type": "integer",
              "format": "int64",
              "description": "The number of times that the system tries to log in to a port after the first failure. \n"
            },
            "Timeout": {
              "type": "integer",
              "format": "int64",
              "description": "The number of milliseconds that the system waits before it tries to log in again.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "vnicRoceSettingsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicRoceSettings": {
      "title": "RoCE Settings",
      "description": "Settings for RDMA over Converged Ethernet.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "If enabled sets RDMA over Converged Ethernet (RoCE) on this virtual interface. \n",
              "x-nullable": true
            },
            "MemoryRegions": {
              "type": "integer",
              "format": "int64",
              "description": "The number of memory regions per adapter. Recommended value = integer power of 2. \n"
            },
            "QueuePairs": {
              "type": "integer",
              "format": "int64",
              "description": "The number of queue pairs per adapter. Recommended value = integer power of 2. \n"
            },
            "ResourceGroups": {
              "type": "integer",
              "format": "int64",
              "description": "The number of resource groups per adapter. Recommended value = be an integer power of 2 greater than or equal to the number of CPU cores on the system for optimum performance.   \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "vnicSanConnectivityPolicyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicSanConnectivityPolicy": {
      "title": "SAN Connectivity",
      "description": "SAN connectivity policy determines the network storage resources and the connections between the server and the SAN on the network. This policy enables you to configure vHBAs that the servers use to communicate with the storage network.\n",
      "allOf": [
        {
          "$ref": "#/definitions/policyAbstractPolicy"
        },
        {
          "type": "object",
          "properties": {
            "FcIfs": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/vnicFcIfRef"
              },
              "description": "A collection of references to the [vnic.FcIf](mo://vnic.FcIf) Managed Object.\n\nWhen this managed object is deleted, the referenced [vnic.FcIf](mo://vnic.FcIf) MOs on the other side of the relationship are deleted.\n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            },
            "Profiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/policyAbstractConfigProfileRef"
              },
              "description": "Relationship to the server profile.\n"
            }
          }
        }
      ]
    },
    "vnicSanConnectivityPolicyList": {
      "properties": {
        "Count": {
          "description": "The number of vnicSanConnectivityPolicies matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of vnicSanConnectivityPolicies matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/vnicSanConnectivityPolicy"
          }
        }
      }
    },
    "vnicScpDeployTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicScpValidationTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicScsiQueueSettingsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicScsiQueueSettings": {
      "title": "SCSI Queue Settings",
      "description": "SCSI Queue resource settings.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Count": {
              "type": "integer",
              "format": "int64",
              "description": "The number of SCSI I/O queue resources the system should allocate. \n"
            },
            "RingSize": {
              "type": "integer",
              "format": "int64",
              "description": "The number of descriptors in each SCSI I/O queue.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "vnicTcpOffloadSettingsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicTcpOffloadSettings": {
      "title": "TCP Offload",
      "description": "The TCP offload settings decide whether to offload the TCP related network functions from the CPU to the network hardware or not. These options help reduce the CPU overhead and increase the network throughput.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "LargeReceive": {
              "type": "boolean",
              "description": "Enables the reassembly of segmented packets in hardware before sending them to the CPU. \n",
              "x-nullable": true
            },
            "LargeSend": {
              "type": "boolean",
              "description": "Enables the CPU to send large packets to the hardware for segmentation. \n",
              "x-nullable": true
            },
            "RxChecksum": {
              "type": "boolean",
              "description": "When enabled, the CPU sends all packet checksums to the hardware for validation. \n",
              "x-nullable": true
            },
            "TxChecksum": {
              "type": "boolean",
              "description": "When enabled, the CPU sends all packets to the hardware so that the checksum can be calculated.  \n",
              "x-nullable": true
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "vnicUsnicSettingsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicUsnicSettings": {
      "title": "USNIC Settings",
      "description": "User Space NIC Settings that enable low-latency and higher throughput by bypassing the kernel layer when sending/receiving packets.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Cos": {
              "type": "integer",
              "format": "int64",
              "description": "Class of Service to be used for traffic on the usNIC. \n"
            },
            "Count": {
              "type": "integer",
              "format": "int64",
              "description": "Number of usNIC interfaces to be created. \n"
            },
            "UsnicAdapterPolicy": {
              "type": "string",
              "description": "Ethernet Adapter policy to be associated with the usNICs.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "vnicVlanSettingsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicVlanSettings": {
      "title": "VLAN Settings",
      "description": "VLAN configuration for the virtual interface.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "DefaultVlan": {
              "type": "integer",
              "format": "int64",
              "description": "Default VLAN ID of the virtual interface. Setting the ID to 0 will not associate any default VLAN to the traffic on the virtual interface. \n"
            },
            "Mode": {
              "type": "string",
              "enum": [
                "ACCESS",
                "TRUNK"
              ],
              "default": "ACCESS",
              "description": "Option to determine if the port can carry single VLAN (Access) or multiple VLANs (Trunk) traffic.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "vnicVmqSettingsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicVmqSettings": {
      "title": "VMQ Settings",
      "description": "Virtual Machine Queue Settings for the virtual interface that allow efficient transfer of network traffic to the guest OS.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Enables VMQ feature on the virtual interface.  \n",
              "x-nullable": true
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "vnicVsanSettingsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicVsanSettings": {
      "title": "VSAN Settings",
      "description": "VSAN configuration for the virtual interface.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Id": {
              "type": "integer",
              "format": "int64",
              "description": "Default VSAN ID of the virtual interface. Setting the ID to 0 will not associate any default VSAN to the traffic on the virtual interface.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "vnicVxlanSettingsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "vnicVxlanSettings": {
      "title": "Vxlan Settings",
      "description": "Virtual Extensible LAN Protocol Settings.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Status of the Virtual Extensible LAN Protocol on the virtual ethernet interface.  \n",
              "x-nullable": true
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "workflowAbstractWorkerTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowAbstractWorkerTask": {
      "title": "Workflow:Abstract Worker Task",
      "description": "An AbstractWorkerTask is used to model a task that does some end-user work. This can be another task or it can be another workflow.\n",
      "allOf": [
        {
          "$ref": "#/definitions/workflowWorkflowTask"
        },
        {
          "type": "object",
          "properties": {
            "InputParameters": {
              "type": "object",
              "description": "JSON formatted map that defines the input given to the task. JSONPath is used for chaining output from previous tasks as inputs into the current task. The format to specify the mapping is '${Source.input/output.JsonPath}'. 'Source' can be either workflow or the name of the task within the workflow. You can map the task input to either a workflow input or a task output. Following this is JSON path expression to extract JSON fragment from source's input/output. \n"
            },
            "OnFailure": {
              "type": "string",
              "description": "This specifies the name of the next task to run if Task fails.  This is the unique name given to the task instance within the workflow. In a graph model, denotes an edge to another Task Node. \n"
            },
            "OnSuccess": {
              "type": "string",
              "description": "This specifies the name of the next task to run if Task succeeds.  This is the unique name given to the task instance within the workflow. In a graph model, denotes an edge to another Task Node.  \n"
            }
          }
        }
      ]
    },
    "workflowApiRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowApi": {
      "title": "API",
      "description": "Intersight Orchestrator supports generic API workflow tasks that can execute\nan API given the request body and response parser specification.\n\nAPI type models a single API request within a batch of requests that get\nexecuted within a single workflow task.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Body": {
              "type": "string",
              "description": "The optional request body that is sent as part of this API request.\n\nThe request body can contain a golang template that can be populated with task input\nparameters and previous API output parameters.\n \n"
            },
            "ContentType": {
              "type": "string",
              "enum": [
                "json",
                "xml",
                "text"
              ],
              "default": "json",
              "description": "Intersight Orchestrator, with the support of response parser specification,\ncan extract the values from API responses and map them to task output parameters.\nThe value extraction is supported for response content types XML and JSON.\n\nThe type of the content that gets passed as payload and response in this\nAPI.\n \n"
            },
            "Name": {
              "type": "string",
              "description": "A reference name for this API request within the batch API request.\n\nThis name shall be used to map the API output parameters to subsequent\nAPI input parameters within a batch API task.\n \n"
            },
            "Outcomes": {
              "type": "object",
              "description": "All the possible outcomes of this API are captured here. Outcomes property\nis a collection property of type workflow.Outcome objects.\n\nThe outcomes can be mapped to the message to be shown. The outcomes are\nevaluated in the order they are given. At the end of the outcomes list,\nan catchall success/fail outcome can be added with condition as 'true'.\n\nThis is an optional\nproperty and if not specified the task will be marked as success.\n \n"
            },
            "ResponseSpec": {
              "$ref": "#/definitions/contentGrammar",
              "description": "The optional grammar specification for parsing the response to extract the\nrequired values.\n\nThe specification should have extraction specification specified for\nall the API output parameters.\n \n"
            },
            "SkipOnCondition": {
              "type": "string",
              "description": "The skip expression, if provided, allows the batch API executor to skip the\napi execution when the given expression evaluates to true.\n\nThe expression is given as such a golang template that has to be\nevaluated to a final content true/false. The expression is an optional and in\ncase not provided, the API will always be executed.\n \n"
            },
            "Timeout": {
              "type": "integer",
              "format": "int64",
              "description": "The duration in seconds by which the API response is expected from the API target.\n\nIf the end point does not respond for the API request within this timeout\nduration, the task will be marked as failed.\n  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "workflowApiTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowArrayDataTypeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowArrayDataType": {
      "title": "Workflow:Array Data Type",
      "description": "This data type represents an array of a given type. It can be an array of primitive data or of custom data.\n",
      "allOf": [
        {
          "$ref": "#/definitions/workflowBaseDataType"
        },
        {
          "type": "object",
          "properties": {
            "ArrayItemType": {
              "$ref": "#/definitions/workflowArrayItem",
              "description": "Data item within the array data type. \n"
            },
            "Max": {
              "type": "integer",
              "format": "int64",
              "description": "Specify the maximum value of the array. \n"
            },
            "Min": {
              "type": "integer",
              "format": "int64",
              "description": "Specify the minimum value of the array.  \n"
            }
          }
        }
      ]
    },
    "workflowArrayItemRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowArrayItem": {
      "title": "Workflow:Array Item",
      "description": "ArrayItem represents an array item within the array.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "workflowBaseDataTypeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowBaseDataType": {
      "title": "Workflow:Base Data Type",
      "description": "The base data type that is used to derive all the other data types for inputs and outputs.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Default": {
              "$ref": "#/definitions/workflowDefaultValue",
              "description": "Default value for the data type. If default value was provided and the input was required the default value will be used as the input. \n"
            },
            "Description": {
              "type": "string",
              "description": "Provide a detailed description of the data type. \n"
            },
            "Label": {
              "type": "string",
              "description": "Descriptive name for the data type. \n"
            },
            "Name": {
              "type": "string",
              "description": "Pick a descriptive name for the data type. \n"
            },
            "Required": {
              "type": "boolean",
              "description": "Specifies whether this parameter is required. The field is applicable for task and workflow.\n  \n",
              "x-nullable": true
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "workflowBatchApiExecutorRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowBatchApiExecutor": {
      "title": "Batch API",
      "description": "Intersight allows generic API tasks to be created by taking the API request\nbody and a response parser specification in the form of content.Grammar object.\n\nBatch API associates the list of API requests to be executed as part of single\ntask execution. Each API request takes the request body and a response parser\nspecification.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Batch": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/workflowApi"
              },
              "description": "Intersight Orchestrator supports one or a batch of APIs to be executed as part of\na task execution.\n\nThe batch cannot be empty.\n \n"
            },
            "Constraints": {
              "type": "string",
              "description": "Enter the constraints on when this task should match against the task definition.\n \n"
            },
            "Description": {
              "type": "string",
              "description": "A detailed description about the batch APIs.\n \n"
            },
            "Name": {
              "type": "string",
              "description": "Name for the batch API task.\n \n"
            },
            "Outcomes": {
              "type": "object",
              "description": "All the possible outcomes of this task are captured here. Outcomes property\nis a collection property of type workflow.Outcome objects.\n\nThe outcomes can be mapped to the message to be shown. The outcomes are\nevaluated in the order they are given. At the end of the outcomes list,\nan catchall success/fail outcome can be added with condition as 'true'.\n\nThis is an optional\nproperty and if not specified the task will be marked as success.\n \n"
            },
            "Output": {
              "type": "object",
              "description": "Intersight Orchestrator allows the extraction of required values from API\nresponses using the API response grammar. These extracted values can be mapped\nto task output parameters defined in task definition.\n\nThe mapping of API output parameters to the task output parameters is provided\nas JSON in this property.\n \n"
            },
            "SkipOnCondition": {
              "type": "string",
              "description": "The skip expression, if provided, allows the batch API executor to skip the\ntask execution when the given expression evaluates to true.\n\nThe expression is given as such a golang template that has to be\nevaluated to a final content true/false. The expression is an optional and in\ncase not provided, the API will always be executed.\n  \n"
            },
            "TaskDefinition": {
              "$ref": "#/definitions/workflowTaskDefinitionRef",
              "description": "The interface task definition for which this batch API is one of the implementation.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "workflowBatchApiExecutorList": {
      "properties": {
        "Count": {
          "description": "The number of workflowBatchApiExecutors matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of workflowBatchApiExecutors matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/workflowBatchApiExecutor"
          }
        }
      }
    },
    "workflowBuildTaskMetaRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowBuildTaskMeta": {
      "title": "Workflow:Build Task Meta",
      "description": "Contains relationship for tasks within a workflow. It is used to dynamically generate a workflow.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "Name for the BuildTaskMeta instance used to created a dynamic workflow. \n"
            },
            "Src": {
              "type": "string",
              "readOnly": true,
              "description": "Microservice owner for the task in this workflow. \n"
            },
            "TaskList": {
              "type": "object",
              "readOnly": true,
              "description": "Task list used to build the dynamic workflow. \n"
            },
            "TaskType": {
              "type": "string",
              "readOnly": true,
              "description": "The type of the task within this workflow. \n"
            },
            "WorkflowType": {
              "type": "string",
              "readOnly": true,
              "description": "The type for the dynamic workflow.  \n"
            }
          }
        }
      ]
    },
    "workflowBuildTaskMetaList": {
      "properties": {
        "Count": {
          "description": "The number of workflowBuildTaskMeta matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of workflowBuildTaskMeta matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/workflowBuildTaskMeta"
          }
        }
      }
    },
    "workflowBuildTaskMetaOwnerRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowBuildTaskMetaOwner": {
      "title": "Workflow:Build Task Meta Owner",
      "description": "Contains the list of dynamic workflow types that a microservice supports.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Service": {
              "type": "string",
              "readOnly": true,
              "description": "The microservice owner responsible for the tasks. \n"
            },
            "WorkflowTypes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "The list of workflow types supported by the microservice.  \n"
            }
          }
        }
      ]
    },
    "workflowBuildTaskMetaOwnerList": {
      "properties": {
        "Count": {
          "description": "The number of workflowBuildTaskMetaOwners matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of workflowBuildTaskMetaOwners matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/workflowBuildTaskMetaOwner"
          }
        }
      }
    },
    "workflowCatalogRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowCatalog": {
      "title": "Workflow:Catalog",
      "description": "A catalog of workflow related objects such as workflow and task definitions. Each user account will have a local workflow catalog where account users can store their private workflow and task definitions.\nCisco provides validated workflows and tasks to Intersight users via shared catalogs. Intersight users will be able to read, run these workflows and tasks within their account context. The shared catalogs will be managed entirely by Cisco. Contributions to shared catalogs will need to be provided to Cisco who will publish them at their own discretion.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "description": "A unique name for the catalog.  \n"
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "workflowCatalogList": {
      "properties": {
        "Count": {
          "description": "The number of workflowCatalogs matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of workflowCatalogs matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/workflowCatalog"
          }
        }
      }
    },
    "workflowCliCommandRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowCliCommand": {
      "title": "CLI Command",
      "description": "This models a single CLI command that can be executed on the end point.\n",
      "allOf": [
        {
          "$ref": "#/definitions/workflowApi"
        },
        {
          "type": "object",
          "properties": {
            "Command": {
              "type": "string",
              "description": "The command to run on the device connector.\n \n"
            },
            "EndPrompt": {
              "type": "string",
              "description": "The regex string that identifies the end of the command response.\n \n"
            },
            "ExpectPrompts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/workflowExpectPrompt"
              },
              "description": "Cli prompts required as part of interactive command execution. For e.g. login credentials will be part of prompts\nwhich are provided as list of expect prompt regex and corresponding answer string.\n \n"
            },
            "SkipStatusCheck": {
              "type": "boolean",
              "description": "Skips the execution status check of the terminal command. One use case for this is while exiting the\nterminal session from esxi host.\n \n",
              "x-nullable": true
            },
            "TerminalEnd": {
              "type": "boolean",
              "description": "If this flag is set, it marks the end of the terminal session where the previous commands were executed.\n \n",
              "x-nullable": true
            },
            "TerminalStart": {
              "type": "boolean",
              "description": "If this flag is set, the execution of this command initiates a terminal session in which the subsequent\nCLI commands are executed until a command with terminalEnd flag is encountered or the end of the batch.\n \n",
              "x-nullable": true
            },
            "Type": {
              "type": "string",
              "enum": [
                "NonInteractive",
                "Interactive"
              ],
              "default": "NonInteractive",
              "description": "The type of the command - can be interactive or non-interactive.\n  \n"
            }
          }
        }
      ]
    },
    "workflowConstraintsRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowConstraints": {
      "title": "Workflow:Constraints",
      "description": "Captures the constraints for valid parameter values.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "EnumList": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/workflowEnumEntry"
              },
              "description": "When the parameter is a enum then this list of enum entry is used to validate the input belongs to one of items in the list. \n"
            },
            "Max": {
              "type": "number",
              "format": "double",
              "description": "Allowed maximum value of the parameter if parameter is integer/float or maximum length of the parameter if the parameter is string. When max and min are set to 0, then the limits are not checked.\n \n"
            },
            "Min": {
              "type": "number",
              "format": "double",
              "description": "Allowed minimum value of the parameter if parameter is integer/float or minimum length of the parameter if the parameter is string. When max and min are set to 0, then the limits are not checked.\n \n"
            },
            "Regex": {
              "type": "string",
              "description": "When the parameter is a string this regular expression is used to ensure the value is valid.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "workflowControlTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowControlTask": {
      "title": "Workflow:Control Task",
      "description": "Control tasks run within the workflow engine and are not executed by remote worker microservices. They are used to modify flow of control within a workflow.\n",
      "allOf": [
        {
          "$ref": "#/definitions/workflowWorkflowTask"
        },
        {
          "type": "object"
        }
      ]
    },
    "workflowCustomDataPropertyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowCustomDataProperty": {
      "title": "Workflow:Custom Data Property",
      "description": "Capture all the properties for Custom data type.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "CatalogMoid": {
              "type": "string",
              "description": "Specify the catalog moid that this custom data type belongs. \n"
            },
            "CustomDataTypeId": {
              "type": "string",
              "readOnly": true,
              "description": "The resolved custom data type definition managed object. \n"
            },
            "CustomDataTypeName": {
              "type": "string",
              "description": "Name of the custom data type for this input.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "workflowCustomDataTypeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowCustomDataType": {
      "title": "Workflow:Custom Data Type",
      "description": "This data type represents a custom data object.\n",
      "allOf": [
        {
          "$ref": "#/definitions/workflowBaseDataType"
        },
        {
          "type": "object",
          "properties": {
            "Properties": {
              "$ref": "#/definitions/workflowCustomDataProperty",
              "description": "Captures the custom data type properties.  \n"
            }
          }
        }
      ]
    },
    "workflowCustomDataTypeDefinitionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowCustomDataTypeDefinition": {
      "title": "Workflow:Custom Data Type Definition",
      "description": "Captures a customized data type definition that can be used for task or workflow input/output.  This can be reused across multiple tasks and workflow definitions.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "CompositeType": {
              "type": "boolean",
              "description": "When true this data type definition is a collection of type definitions to represent composite data like JSON. \n",
              "x-nullable": true
            },
            "Description": {
              "type": "string",
              "description": "A human-friendly description of this custom data type indicating it's domain and usage. \n"
            },
            "Label": {
              "type": "string",
              "description": "A user friendly short name to identify the custom data type definition. \n"
            },
            "Name": {
              "type": "string",
              "description": "The name of custom data type definition. The valid name can contain lower case and upper case alphabetic characters, degits and special characters '-' and '_'. \n"
            },
            "TypeDefinition": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/workflowBaseDataType"
              },
              "description": "The properties of this custom data type definition.  \n"
            },
            "Catalog": {
              "$ref": "#/definitions/workflowCatalogRef",
              "description": "The catalog under which the definition is present.\n"
            }
          }
        }
      ]
    },
    "workflowCustomDataTypeDefinitionList": {
      "properties": {
        "Count": {
          "description": "The number of workflowCustomDataTypeDefinitions matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of workflowCustomDataTypeDefinitions matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/workflowCustomDataTypeDefinition"
          }
        }
      }
    },
    "workflowDecisionCaseRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowDecisionCase": {
      "title": "Workflow:Decision Case",
      "description": "A Decision Case is a condition for a Decision Task. It is the equivalent of case statement in the programming language paradigm of switch and case.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "type": "string",
              "description": "Description of this decision case. \n"
            },
            "NextTask": {
              "type": "string",
              "description": "The name of the next task (Task names unique within workflow) to run.  In a graph model, denotes an edge to another Task Node. \n"
            },
            "Value": {
              "type": "string",
              "description": "Value for the decision case.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "workflowDecisionTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowDecisionTask": {
      "title": "Workflow:Decision Task",
      "description": "A DecisionTask is a control task that executes a sequence of WorkflowTasks based off decision provided and evaluated by this task.\n",
      "allOf": [
        {
          "$ref": "#/definitions/workflowControlTask"
        },
        {
          "type": "object",
          "properties": {
            "Condition": {
              "type": "string",
              "description": "The condition to evaluate for this decision task. The condition can be a workflow or task variable or an expression based on the input parameters. Example value for condition if its Workflow/task variable is -  \"${task1.output.var1} or ${workflow.input.var2}\" which evaluates to a value matching any of the decision case values. Example value for condition if its an expression is - \"if ( $.element ! = null && $.element > 0 ) 'true'; else 'false'; \" which evaluates to 'true' or 'false' and will match one of the decision case values. Here \"element\" is a variable in decisiontask's inputParameters JSON formatted map. You can also use javascript like functions indexOf, toUpperCase in the expression which will be evaluated by the expression evaluator. \n"
            },
            "DecisionCases": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/workflowDecisionCase"
              },
              "description": "A list of potential decision task flows based off a condition. \n"
            },
            "DefaultTask": {
              "type": "string",
              "description": "The default next Task to execute if the decision cannot be evaluated to any of the DecisionCases. \n"
            },
            "InputParameters": {
              "type": "object",
              "description": "JSON formatted map that defines the input given to the decision task. The inputs are used as variables in the condition property of decision task. The input variables can be static values like \"hello\" , \"24\", \"true\" OR previous task outputs/workflow inputs like \"${task2.output.var1}}\". The input variables are referrenced as $.inputVariableName in the condition property.  \n"
            }
          }
        }
      ]
    },
    "workflowDecisionWorkflowTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowDefaultValueRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowDefaultValue": {
      "title": "Workflow:Default Value",
      "description": "Captures default vales for a data type.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Override": {
              "type": "boolean",
              "description": "Override the default value provided for the data type. When true, allow the user to enter value for the data type. \n",
              "x-nullable": true
            },
            "Value": {
              "type": "object",
              "description": "Default value for the data type. If default value was provided and the input was required the default value will be used as the input.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "workflowDynamicWorkflowActionTaskListRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowDynamicWorkflowActionTaskList": {
      "title": "Workflow:Dynamic Workflow Action Task List",
      "description": "Keeps a list of the tasks to add for a corresponding workflow action when PendingDynamicWorkflowInfo is built.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Action": {
              "type": "string",
              "description": "The action of the Dynamic Workflow. \n"
            },
            "Tasks": {
              "type": "object",
              "description": "The task list that has precedence which dictates how the workflow should be constructed.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "workflowEndTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowEndTask": {
      "title": "Workflow:End Task",
      "description": "An EndTask denotes the completion of a workflow.\n",
      "allOf": [
        {
          "$ref": "#/definitions/workflowControlTask"
        },
        {
          "type": "object"
        }
      ]
    },
    "workflowEnumEntryRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowEnumEntry": {
      "title": "Workflow:Enum Entry",
      "description": "Captures a single enum entry which has a label and value.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Label": {
              "type": "string",
              "description": "Label for the enum value. A user friendly short string to identify the enum value. \n"
            },
            "Value": {
              "type": "string",
              "description": "Enum value for this enum entry. Value will be passed to the workflow as string type for execution.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "workflowExpectPromptRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowExpectPrompt": {
      "title": "Expect Prompt",
      "description": "This models a single expect and answer prompt of the interactive command.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Expect": {
              "type": "string",
              "description": "The regex of the expect prompt of the interactive command. \n"
            },
            "Send": {
              "type": "string",
              "description": "The answer string to the expect prompt.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "workflowFailureEndTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowFailureEndTask": {
      "title": "Workflow:Failure End Task",
      "description": "A FailureEndTask denotes the failed completion of a workflow.\n",
      "allOf": [
        {
          "$ref": "#/definitions/workflowEndTask"
        },
        {
          "type": "object"
        }
      ]
    },
    "workflowFailureEndWorkflowTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowFormatTemplateDataRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowInternalPropertiesRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowInternalProperties": {
      "title": "Workflow:Internal Properties",
      "description": "Internal properties for a task definition which are not editable by the user.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "BaseTaskType": {
              "type": "string",
              "readOnly": true,
              "description": "This field will hold the base task type like HttpBaseTask or RemoteAnsibleBaseTask. \n"
            },
            "Constraints": {
              "type": "string",
              "readOnly": true,
              "description": "This field will hold any constraints a concrete task definition will specify in order to limit the environment where the task can execute. \n"
            },
            "Internal": {
              "type": "boolean",
              "readOnly": true,
              "description": "Denotes this is an internal task.  Internal tasks will be hidden from the UI within a workflow. \n"
            },
            "Owner": {
              "type": "string",
              "readOnly": true,
              "description": "The service that owns and is responsible for execution of the task.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "workflowMessageRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowMessage": {
      "title": "Workflow:Message",
      "description": "Intermediate Task or Workflow message with severity.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Message": {
              "type": "string",
              "description": "An i18n message that can be translated in multiple languages to support internationalization. \n"
            },
            "Severity": {
              "type": "string",
              "enum": [
                "Info",
                "Warning",
                "Debug",
                "Error"
              ],
              "default": "Info",
              "description": "The severity of the Task or Workflow message warning/error/info etc.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "workflowMoReferenceDataTypeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowMoReferenceDataType": {
      "title": "Workflow:Mo Reference Data Type",
      "description": "Data type to capture an Intersight Managed object reference.\n",
      "allOf": [
        {
          "$ref": "#/definitions/workflowBaseDataType"
        },
        {
          "type": "object",
          "properties": {
            "Properties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/workflowMoReferenceProperty"
              },
              "description": "List of managed object references.  \n"
            }
          }
        }
      ]
    },
    "workflowMoReferencePropertyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowMoReferenceProperty": {
      "title": "Workflow:Mo Reference Property",
      "description": "Capture all the properties for an Intersight managed object reference.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "DisplayAttributes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of properties from the Intersight object which can help to identify the object. Typically the set of identity constraints on the object can be listed here to help the user identity the managed object. \n"
            },
            "Selector": {
              "type": "string",
              "description": "Field to hold an Intersight API along with an optional filter to narrow down the search options.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "workflowOutcomeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowPendingDynamicWorkflowInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowPendingDynamicWorkflowInfo": {
      "title": "Workflow:Pending Dynamic Workflow Info",
      "description": "Information for a pending Dynamic Workflow Instance before it is run.  Validation needs to be done on the dynamic workflow tasks before starting.  After it begins, it will be tracked with regular WorkflowInstance.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Input": {
              "type": "object",
              "description": "The inputs of the workflow. \n"
            },
            "Name": {
              "type": "string",
              "description": "A name for the pending dynamic workflow. \n"
            },
            "PendingServices": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The pending services the dynamic workflow is waiting for to return the task list. \n"
            },
            "Src": {
              "type": "string",
              "description": "The src is workflow owner service. \n"
            },
            "Status": {
              "type": "string",
              "enum": [
                "GatheringTasks",
                "Waiting"
              ],
              "default": "GatheringTasks",
              "description": "The current status of the PendingDynamicWorkflowInfo. \n"
            },
            "WaitOnDuplicate": {
              "type": "boolean",
              "description": "When set to true workflow engine will wait for a duplicate to finish before starting a new one. \n",
              "x-nullable": true
            },
            "WorkflowActionTaskLists": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/workflowDynamicWorkflowActionTaskList"
              },
              "description": "The task lists returned by services for building dynamic workflows.  There will be an entry for every different workflow action. \n"
            },
            "WorkflowCtx": {
              "type": "object",
              "description": "The workflow's workflow context which contains initiator and target information. \n"
            },
            "WorkflowKey": {
              "type": "string",
              "description": "This key contains workflow, initiator and target name. Workflow engine uses the key to do workflow dedup. \n"
            },
            "WorkflowMeta": {
              "type": "object",
              "description": "The metadata of the workflow.  \n"
            },
            "WorkflowInfo": {
              "$ref": "#/definitions/workflowWorkflowInfoRef",
              "description": "A collection of references to the [workflow.WorkflowInfo](mo://workflow.WorkflowInfo) Managed Object.\n\nWhen this managed object is deleted, the referenced [workflow.WorkflowInfo](mo://workflow.WorkflowInfo) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "workflowPendingDynamicWorkflowInfoList": {
      "properties": {
        "Count": {
          "description": "The number of workflowPendingDynamicWorkflowInfos matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of workflowPendingDynamicWorkflowInfos matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/workflowPendingDynamicWorkflowInfo"
          }
        }
      }
    },
    "workflowPrimitiveArrayItemRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowPrimitiveArrayItem": {
      "title": "Workflow:Primitive Array Item",
      "description": "PrimitiveArrayItem is used to create an array of primitive datatype. In order to create an array of strings, integers or float use PrimitiveArrayItem object type within the array.\n",
      "allOf": [
        {
          "$ref": "#/definitions/workflowArrayItem"
        },
        {
          "type": "object",
          "properties": {
            "Properties": {
              "$ref": "#/definitions/workflowPrimitiveDataProperty",
              "description": "Captures an array item which is of primitive data type.  \n"
            }
          }
        }
      ]
    },
    "workflowPrimitiveDataPropertyRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowPrimitiveDataProperty": {
      "title": "Workflow:Primitive Data Property",
      "description": "Capture all the properties for primitive data type.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Constraints": {
              "$ref": "#/definitions/workflowConstraints",
              "description": "Constraints that must be applied to the parameter value supplied for this data type. \n"
            },
            "Secure": {
              "type": "boolean",
              "x-createOnly": true,
              "description": "Intersight allows the secure properties to be used as task input/output. The values of\nthese properties are encrypted and stored in Intersight.\n\nThis flag marks the property to be secure when it is set to true.\n \n",
              "x-nullable": true
            },
            "Type": {
              "type": "string",
              "enum": [
                "string",
                "integer",
                "float",
                "boolean",
                "json",
                "enum"
              ],
              "default": "string",
              "description": "Specify the enum type for primitive data type.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "workflowPrimitiveDataTypeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowPrimitiveDataType": {
      "title": "Workflow:Primitive Data Type",
      "description": "This data type is used to represent primitives like string, floats and integers.\n",
      "allOf": [
        {
          "$ref": "#/definitions/workflowBaseDataType"
        },
        {
          "type": "object",
          "properties": {
            "Properties": {
              "$ref": "#/definitions/workflowPrimitiveDataProperty",
              "description": "Primitive data type properties.  \n"
            }
          }
        }
      ]
    },
    "workflowPropertiesRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowProperties": {
      "title": "Workflow:Properties",
      "description": "Properties for the task definition like the inputs, outputs, timeout and retry policies. Tasks are the building blocks for workflows.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "InputDefinition": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/workflowBaseDataType"
              },
              "description": "The schema expected for input parameters for this task. \n"
            },
            "OutputDefinition": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/workflowBaseDataType"
              },
              "description": "The schema expected for output parameters for this task. \n"
            },
            "RetryCount": {
              "type": "integer",
              "format": "int64",
              "description": "The number of times a task should be tried before marking as failed. \n"
            },
            "RetryDelay": {
              "type": "integer",
              "format": "int64",
              "description": "The delay in seconds after which the the task is re-tried. \n"
            },
            "RetryPolicy": {
              "type": "string",
              "enum": [
                "Fixed"
              ],
              "default": "Fixed",
              "description": "The retry policy for the task. \n"
            },
            "Timeout": {
              "type": "integer",
              "format": "int64",
              "description": "The timeout value in seconds after which task will be marked as timed out. Max allowed value is 7 days. \n"
            },
            "TimeoutPolicy": {
              "type": "string",
              "enum": [
                "Timeout",
                "Retry"
              ],
              "default": "Timeout",
              "description": "The timeout policy for the task.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "workflowStartTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowStartTask": {
      "title": "Workflow:Start Task",
      "description": "A StartTask is the starting point for a workflow.  There can only be one StartTask in a workflow.\n",
      "allOf": [
        {
          "$ref": "#/definitions/workflowControlTask"
        },
        {
          "type": "object",
          "properties": {
            "NextTask": {
              "type": "string",
              "description": "The name of the next task (Task names unique within workflow) to run.  In a graph model, denotes an edge to another Task Node.  \n"
            }
          }
        }
      ]
    },
    "workflowSubWorkflowInternalTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowSubWorkflowTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowSubWorkflowTask": {
      "title": "Workflow:Sub Workflow Task",
      "description": "A SubWorkflowTask is used to include another workflow as a task within this workflow.\n",
      "allOf": [
        {
          "$ref": "#/definitions/workflowAbstractWorkerTask"
        },
        {
          "type": "object",
          "properties": {
            "CatalogMoid": {
              "type": "string",
              "description": "Specify the catalog moid that this task belongs. \n"
            },
            "Version": {
              "type": "integer",
              "format": "int64",
              "description": "The workflow definition version to use as subworkflow. When no version is specified then the default version of the workflow at the time of creating or updating this workflow is used. \n"
            },
            "WorkflowDefinitionId": {
              "type": "string",
              "readOnly": true,
              "description": "The resolved referenced workflow definition managed object. \n"
            },
            "WorkflowDefinitionName": {
              "type": "string",
              "description": "The qualified name of workflow that should be executed as a task.  \n"
            }
          }
        }
      ]
    },
    "workflowSuccessEndTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowSuccessEndTask": {
      "title": "Workflow:Success End Task",
      "description": "A SuccessEndTask denotes the successful completion of a workflow.\n",
      "allOf": [
        {
          "$ref": "#/definitions/workflowEndTask"
        },
        {
          "type": "object"
        }
      ]
    },
    "workflowSuccessEndWorkflowTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowTargetDataTypeRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowTargetDataType": {
      "title": "Workflow:Target Data Type",
      "description": "Data type to capture a target endpoint or device.\n",
      "allOf": [
        {
          "$ref": "#/definitions/workflowBaseDataType"
        },
        {
          "type": "object",
          "properties": {
            "Properties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/workflowMoReferenceProperty"
              },
              "description": "Reference to target device or endpoint managed object.  \n"
            }
          }
        }
      ]
    },
    "workflowTaskDefinitionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowTaskDefinition": {
      "title": "Workflow:Task Definition",
      "description": "Used to define a task which can be included within a workflow. Task definition conveys the intent that we want to achieve with the task. We can have a standalone task definition that is bound to a single implementation for that task, or we can define an TaskDefinition that will serve as the interface task definition which is linked to multiple implementation tasks. Each implemented TaskDefinition will be bound to its own implementation so we can achieve a case where single TaskDefinition has multiple implementations.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "DefaultVersion": {
              "type": "boolean",
              "description": "When true this will be the task version that is used when a specific task definition version is not specified. The very first task definition created with a name will be set as the default version, after that user can explicitly set any version of the task definition as the default version. \n",
              "x-nullable": true
            },
            "Description": {
              "type": "string",
              "description": "The task definition description to describe what this task will do when executed. \n"
            },
            "InternalProperties": {
              "$ref": "#/definitions/workflowInternalProperties",
              "readOnly": true,
              "description": "Type to capture all the internal properties for the task definition. \n"
            },
            "Label": {
              "type": "string",
              "description": "A user friendly short name to identify the task definition. \n"
            },
            "LicenseEntitlement": {
              "type": "string",
              "enum": [
                "Base",
                "Essential",
                "Standard",
                "Advantage"
              ],
              "default": "Base",
              "readOnly": true,
              "description": "License entitlement required to run this task. It is determined by license requirement of features. \n"
            },
            "Name": {
              "type": "string",
              "x-createOnly": true,
              "description": "The name of the task definition. The name should follow this convention <Verb or Action><Category><Vendor><Product><Noun or object> Verb or Action is a required portion of the name and this must be part of the pre-approved verb list. Category is an optional field and this will refer to the broad category of the task referring to the type of resource or endpoint. If there is no specific category then use \"Generic\" if required. Vendor is an optional field and this will refer to the specific vendor this task applies to. If the task is generic and not tied to a vendor, then do not specify anything. Product is an optional field, this will contain the vendor product and model when desired. Noun or object is a required field and  this will contain the noun or object on which the action is being performed. Examples SendEmail  - This is a task in Generic category for sending email. NewStorageVolume - This is a vendor agnostic task under Storage device category for creating a new volume. \n"
            },
            "Properties": {
              "$ref": "#/definitions/workflowProperties",
              "description": "Type to capture all the properties for the task definition. \n"
            },
            "Version": {
              "type": "integer",
              "format": "int64",
              "description": "The version of the task definition so we can support multiple versions of a task definition.  \n"
            },
            "Catalog": {
              "$ref": "#/definitions/workflowCatalogRef",
              "description": "The catalog under which the definition has been added.\n"
            },
            "ImplementedTasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/workflowTaskDefinitionRef"
              },
              "description": "List of all the implemented task for this TaskDefinition. When this list is populated it implies that this TaskDefinition has multiple implementations.\n",
              "x-createOnly": true
            },
            "InterfaceTask": {
              "$ref": "#/definitions/workflowTaskDefinitionRef",
              "description": "A collection of references to the [workflow.TaskDefinition](mo://workflow.TaskDefinition) Managed Object.\n\nWhen this managed object is deleted, the referenced [workflow.TaskDefinition](mo://workflow.TaskDefinition) MO unsets its reference to this deleted MO.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "workflowTaskDefinitionList": {
      "properties": {
        "Count": {
          "description": "The number of workflowTaskDefinitions matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of workflowTaskDefinitions matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/workflowTaskDefinition"
          }
        }
      }
    },
    "workflowTaskInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowTaskInfo": {
      "title": "Workflow:Task Info",
      "description": "Task instance which represents the run time instance of a task within a workflow.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "type": "string",
              "readOnly": true,
              "description": "The task description and this is the description that was added when the task was included into the workflow. \n"
            },
            "EndTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "The time stamp when the task reached a final state. \n"
            },
            "FailureReason": {
              "type": "string",
              "readOnly": true,
              "description": "Description of the reason why the task failed. \n"
            },
            "Input": {
              "type": "object",
              "readOnly": true,
              "description": "The input data that was sent to the task at the start of execution. \n"
            },
            "InstId": {
              "type": "string",
              "readOnly": true,
              "description": "The current running task instance Id. \n"
            },
            "Internal": {
              "type": "boolean",
              "readOnly": true,
              "description": "Denotes whether or not this is an internal task.  Internal tasks will be hidden from the UI within a workflow. \n"
            },
            "Label": {
              "type": "string",
              "readOnly": true,
              "description": "User friendly short label to describe this task instance in the workflow. \n"
            },
            "Message": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/workflowMessage"
              },
              "readOnly": true,
              "description": "Collection of Task execution messages with severity. \n"
            },
            "Name": {
              "type": "string",
              "readOnly": true,
              "description": "Task definition name which specifies the task type. \n"
            },
            "Output": {
              "type": "object",
              "readOnly": true,
              "description": "The output data that was generated by this task. \n"
            },
            "RefName": {
              "type": "string",
              "readOnly": true,
              "description": "The task reference name to ensure its unique inside a workflow. \n"
            },
            "RetryCount": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "A counter for number of retries. \n"
            },
            "StartTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "The time stamp when the task started execution. \n"
            },
            "Status": {
              "type": "string",
              "description": "The status of the task and this will specify if the task is running or has reached a final state. \n"
            },
            "TaskInstIdList": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/workflowTaskRetryInfo"
              },
              "readOnly": true,
              "description": "The list keeps a list of retried task instances.  \n"
            },
            "SubWorkflowInfo": {
              "$ref": "#/definitions/workflowWorkflowInfoRef",
              "description": "A collection of references to the [workflow.WorkflowInfo](mo://workflow.WorkflowInfo) Managed Object.\n\nWhen this managed object is deleted, the referenced [workflow.WorkflowInfo](mo://workflow.WorkflowInfo) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "TaskDefinition": {
              "$ref": "#/definitions/workflowTaskDefinitionRef",
              "description": "The task definition that was used to launch this task execution instance.\n"
            },
            "WorkflowInfo": {
              "$ref": "#/definitions/workflowWorkflowInfoRef",
              "description": "A collection of references to the [workflow.WorkflowInfo](mo://workflow.WorkflowInfo) Managed Object.\n\nWhen this managed object is deleted, the referenced [workflow.WorkflowInfo](mo://workflow.WorkflowInfo) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            }
          }
        }
      ]
    },
    "workflowTaskInfoList": {
      "properties": {
        "Count": {
          "description": "The number of workflowTaskInfos matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of workflowTaskInfos matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/workflowTaskInfo"
          }
        }
      }
    },
    "workflowTaskMetaRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowTaskMeta": {
      "title": "Workflow:Task Meta",
      "description": "This MO contains a task definition.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "ActionType": {
              "type": "string",
              "description": "A task execution type to indicate if it is a system task. \n"
            },
            "Description": {
              "type": "string",
              "description": "A description of the task. \n"
            },
            "InputKeys": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Input keys for the task which specifies parameters the task can take in as inputs. \n"
            },
            "Internal": {
              "type": "boolean",
              "description": "Denotes whether or not this is an internal task.  Internal tasks will be hidden from the UI within a workflow. \n",
              "x-nullable": true
            },
            "Name": {
              "type": "string",
              "description": "A task name that should be unique in Conductor DB. \n"
            },
            "OutputKeys": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Output keys for the task which specifies parameters the task will output at the end of execution. \n"
            },
            "ResponseTimeoutSec": {
              "type": "integer",
              "format": "int64",
              "description": "The worker respnose timeout value. \n"
            },
            "RetryCount": {
              "type": "integer",
              "format": "int64",
              "description": "A number of reties for this task. \n"
            },
            "RetryDelaySec": {
              "type": "integer",
              "format": "int64",
              "description": "The time on which the retry will be delayed. \n"
            },
            "RetryLogic": {
              "type": "string",
              "description": "A logic which defines the way to handle retry (FIXED, EXPONENTIAL_BACKOFF). \n"
            },
            "Src": {
              "type": "string",
              "description": "A service owns the task metadata. \n"
            },
            "TimeoutPolicy": {
              "type": "string",
              "description": "A policy which defines the way to handle timeout (RETRY, TIME_OUT_WF, ALERT_ONLY). \n"
            },
            "TimeoutSec": {
              "type": "integer",
              "format": "int64",
              "description": "A timeout value for the task in seconds.  \n"
            }
          }
        }
      ]
    },
    "workflowTaskMetaList": {
      "properties": {
        "Count": {
          "description": "The number of workflowTaskMeta matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of workflowTaskMeta matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/workflowTaskMeta"
          }
        }
      }
    },
    "workflowTaskRetryInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowTaskRetryInfo": {
      "title": "Workflow:Task Retry Info",
      "description": "Keep track of task retry information using TaskRetryInfo.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Status": {
              "type": "string",
              "description": "Status of the retried task. \n"
            },
            "TaskInstId": {
              "type": "string",
              "description": "Retry instance will get a unique instance id.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "workflowValidationErrorRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowValidationError": {
      "title": "Workflow:Validation Error",
      "description": "Used to show validation errors for the workflow or for the task within the workflow.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "ErrorLog": {
              "type": "string",
              "readOnly": true,
              "description": "Description of the error. \n"
            },
            "Field": {
              "type": "string",
              "readOnly": true,
              "description": "When populated this refers to the input or output field within the workflow or task. \n"
            },
            "TaskName": {
              "type": "string",
              "readOnly": true,
              "description": "The task name on which the error is found, when empty the error applies to the top level workflow. \n"
            },
            "TransitionName": {
              "type": "string",
              "readOnly": true,
              "description": "When populated this refers to the transition connection that has a problem. When this field has value OnSuccess it means the transition connection OnSuccess for the task has an issue.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "workflowValidationInformationRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowValidationInformation": {
      "title": "Workflow:Validation Information",
      "description": "Type used to capture all the validation information for the workflow definition.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "State": {
              "type": "string",
              "enum": [
                "NotValidated",
                "Valid",
                "Invalid"
              ],
              "default": "NotValidated",
              "readOnly": true,
              "description": "The current validation state of this workflow. The possible states are Valid, Invalid, NotValidated (default). \n"
            },
            "ValidationError": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/workflowValidationError"
              },
              "readOnly": true,
              "description": "List of all workflow or task validation errors. The validation errors can be for worker task or for control tasks.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "workflowWaitTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowWaitTask": {
      "title": "Workflow:Wait Task",
      "description": "A WaitTask will remain in progress until marked success or failed by an external trigger. The timeout for wait task is 180 days, so a workflow can wait for task status update for upto 180 days. Currently the only supported means to update the task status is through an API that provides the status of the task runtime instance. Once the wait task status has been set the workflow will continue with the execution based on the task status.\n",
      "allOf": [
        {
          "$ref": "#/definitions/workflowAbstractWorkerTask"
        },
        {
          "type": "object"
        }
      ]
    },
    "workflowWaitWorkflowTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowWebApiRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowWebApi": {
      "title": "Web API",
      "description": "This models a single Web API request within a batch of requests that get\nexecuted within a single workflow task.\n",
      "allOf": [
        {
          "$ref": "#/definitions/workflowApi"
        },
        {
          "type": "object",
          "properties": {
            "Headers": {
              "type": "object",
              "description": "Collection of key value pairs to set in the request header.\n \n"
            },
            "Method": {
              "type": "string",
              "description": "The HTTP method to be executed in the given URL (GET, POST, PUT, etc).\nIf the value is not specified, GET will be used as default.\n \n"
            },
            "Protocol": {
              "type": "string",
              "description": "The accepted web protocol values are http and https.\n \n"
            },
            "TargetType": {
              "type": "string",
              "enum": [
                "Endpoint",
                "Local"
              ],
              "default": "Endpoint",
              "description": "If the web API is to be executed in a remote device connected to the\nIntersight through device connector, 'Endpoint' is expected as the value\nwhereas if the API is an Intersight API, 'Local' is expected as the value.\n \n"
            },
            "Url": {
              "type": "string",
              "description": "The URL of the resource in the target to which the API request is made.\n  \n"
            }
          }
        }
      ]
    },
    "workflowWorkerTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowWorkerTask": {
      "title": "Workflow:Worker Task",
      "description": "A WorkerTask is a simple task and the smallest granularity of work that can be defined as a task.\n",
      "allOf": [
        {
          "$ref": "#/definitions/workflowAbstractWorkerTask"
        },
        {
          "type": "object",
          "properties": {
            "CatalogMoid": {
              "type": "string",
              "description": "Specify the catalog moid that this task belongs. \n"
            },
            "TaskDefinitionId": {
              "type": "string",
              "readOnly": true,
              "description": "The resolved referenced task definition managed object. \n"
            },
            "TaskDefinitionName": {
              "type": "string",
              "description": "The qualified name of task that should be executed. \n"
            },
            "Version": {
              "type": "integer",
              "format": "int64",
              "description": "The task definition version to use in this workflow. When no version is specified then the default version of the task at the time of creating or updating this workflow is used.  \n"
            }
          }
        }
      ]
    },
    "workflowWorkflowDefinitionRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowWorkflowDefinition": {
      "title": "Workflow:Workflow Definition",
      "description": "Workflow definition is a collection of tasks that are sequenced in a certain way using control tasks. The tasks in the workflow definition is represented as a directed acyclic graph where each node in the graph is a task and the edges in the graph are transitions from one task to another.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "DefaultVersion": {
              "type": "boolean",
              "description": "When true this will be the workflow version that is used when a specific workflow definition version is not specified. The default version is used when user executes a workflow without specifying a version or when workflow is included in another workflow without a specific version. The very first workflow definition created with a name will be set as the default version, after that user can explicitly set any version of the workflow definition as the default version. \n",
              "x-nullable": true
            },
            "Description": {
              "type": "string",
              "description": "The description for this workflow. \n"
            },
            "InputDefinition": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/workflowBaseDataType"
              },
              "description": "The schema expected for input parameters for this workflow. \n"
            },
            "Label": {
              "type": "string",
              "description": "A user friendly short name to identify the workflow. \n"
            },
            "LicenseEntitlement": {
              "type": "string",
              "enum": [
                "Base",
                "Essential",
                "Standard",
                "Advantage"
              ],
              "default": "Base",
              "readOnly": true,
              "description": "License entitlement required to run this workflow. It is calculated based on the highest license requirement of all its tasks. \n"
            },
            "Name": {
              "type": "string",
              "description": "The name for this workflow. You can have multiple version of the workflow with the same name. \n"
            },
            "OutputDefinition": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/workflowBaseDataType"
              },
              "description": "The schema expected for output parameters for this workflow. \n"
            },
            "OutputParameters": {
              "type": "object",
              "description": "The output mappings for the workflow. The outputs for worflows will generally be task output variables that we want to export out at the end of the workflow. The format to specify the mapping is '${Source.output.JsonPath}'. 'Source' is the name of the task within the workflow. You can map any task output to a workflow output as long as the types are compatible. Following this is JSON path expression to extract JSON fragment from source's output. \n"
            },
            "Tasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/workflowWorkflowTask"
              },
              "description": "The tasks contained inside of the workflow. \n"
            },
            "UiRenderingData": {
              "type": "object",
              "description": "This will hold the data needed for workflow to be rendered in the user interface. \n"
            },
            "ValidationInformation": {
              "$ref": "#/definitions/workflowValidationInformation",
              "readOnly": true,
              "description": "The current validation state and associated information for this workflow. \n"
            },
            "Version": {
              "type": "integer",
              "format": "int64",
              "description": "The version of the workflow to support multiple versions.  \n"
            },
            "Catalog": {
              "$ref": "#/definitions/workflowCatalogRef",
              "description": "The catalog under which the definition is present.\n"
            }
          }
        }
      ]
    },
    "workflowWorkflowDefinitionList": {
      "properties": {
        "Count": {
          "description": "The number of workflowWorkflowDefinitions matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of workflowWorkflowDefinitions matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/workflowWorkflowDefinition"
          }
        }
      }
    },
    "workflowWorkflowInfoRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowWorkflowInfo": {
      "title": "Workflow:Workflow Info",
      "description": "Contains information for a workflow execution which is a runtime instance of workflow.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Action": {
              "type": "string",
              "enum": [
                "Start",
                "Pause",
                "Resume",
                "Retry",
                "Cancel"
              ],
              "default": "Start",
              "description": "The action of the workflow such as start, cancel, retry, pause. \n"
            },
            "CleanupTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "The time when the workflow info will be removed from database. \n"
            },
            "EndTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "The time when the workflow reached a final state. \n"
            },
            "FailedWorkflowCleanupDuration": {
              "type": "integer",
              "format": "int64",
              "x-createOnly": true,
              "description": "The duration in hours after which the workflow info for failed, terminated or timed out workflow will be removed from database. \n"
            },
            "Input": {
              "type": "object",
              "x-createOnly": true,
              "description": "All the given inputs for the workflow. \n"
            },
            "InstId": {
              "type": "string",
              "readOnly": true,
              "description": "A workflow instance Id which is the unique identified for the workflow execution. \n"
            },
            "Internal": {
              "type": "boolean",
              "x-createOnly": true,
              "description": "Denotes if this workflow is internal and should be hidden from user view of running workflows. \n",
              "x-nullable": true
            },
            "Message": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/workflowMessage"
              },
              "readOnly": true,
              "description": "Collection of Workflow execution messages with severity. \n"
            },
            "MetaVersion": {
              "type": "integer",
              "format": "int64",
              "x-createOnly": true,
              "description": "Version of the workflow metadata for which this workflow execution was started. \n"
            },
            "Name": {
              "type": "string",
              "x-createOnly": true,
              "description": "A name of the workflow execution instance. \n"
            },
            "Output": {
              "type": "object",
              "readOnly": true,
              "description": "All the generated outputs for the workflow. \n"
            },
            "Progress": {
              "type": "number",
              "format": "float",
              "readOnly": true,
              "description": "This field indicates percentage of workflow task execution.  \n"
            },
            "Src": {
              "type": "string",
              "readOnly": true,
              "description": "The source microservice name which is the owner for this workflow. \n"
            },
            "StartTime": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "The time when the workflow was started for execution. \n"
            },
            "Status": {
              "type": "string",
              "readOnly": true,
              "description": "A status of the workflow (RUNNING, WAITING, COMPLETED, TIME_OUT, FAILED). \n"
            },
            "SuccessWorkflowCleanupDuration": {
              "type": "integer",
              "format": "int64",
              "x-createOnly": true,
              "description": "The duration in hours after which the workflow info for successful workflow will be removed from database. \n"
            },
            "TraceId": {
              "type": "string",
              "readOnly": true,
              "description": "The trace id to keep track of workflow execution. \n"
            },
            "Type": {
              "type": "string",
              "readOnly": true,
              "description": "A type of the workflow (serverconfig, ansible_monitoring). \n"
            },
            "UserId": {
              "type": "string",
              "readOnly": true,
              "description": "The user identifier which indicates the user that started this workflow. \n"
            },
            "WaitReason": {
              "type": "string",
              "enum": [
                "None",
                "GatherTasks",
                "Duplicate",
                "RateLimit",
                "WaitTask"
              ],
              "default": "None",
              "x-createOnly": true,
              "description": "Denotes the reason workflow is in waiting status. \n"
            },
            "WorkflowCtx": {
              "type": "object",
              "x-createOnly": true,
              "description": "The workflow context which contains initiator and target information.  \n"
            },
            "WorkflowMetaType": {
              "type": "string",
              "enum": [
                "SystemDefined",
                "UserDefined",
                "Dynamic"
              ],
              "default": "SystemDefined",
              "description": "The type of workflow meta. Derived from the workflow meta that is used to launch this workflow instance. \n"
            },
            "WorkflowTaskCount": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Total number of workflow tasks in this workflow.  \n"
            },
            "_0_ClusterProfile": {
              "$ref": "#/definitions/hyperflexClusterProfileRef",
              "description": "A collection of references to the [hyperflex.ClusterProfile](mo://hyperflex.ClusterProfile) Managed Object.\n\nWhen this managed object is deleted, the referenced [hyperflex.ClusterProfile](mo://hyperflex.ClusterProfile) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "_1_Profile": {
              "$ref": "#/definitions/serverProfileRef",
              "description": "A collection of references to the [server.Profile](mo://server.Profile) Managed Object.\n\nWhen this managed object is deleted, the referenced [server.Profile](mo://server.Profile) MO unsets its reference to this deleted MO.\n",
              "readOnly": true
            },
            "Account": {
              "$ref": "#/definitions/iamAccountRef",
              "description": "The Account to which the workflow is associated.\n",
              "x-createOnly": true
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "The Organization to which the workflow is associated.\n",
              "x-createOnly": true
            },
            "ParentTaskInfo": {
              "$ref": "#/definitions/workflowTaskInfoRef",
              "description": "Link to the task in the parent workflow which launched this workflow.\n",
              "readOnly": true
            },
            "PendingDynamicWorkflowInfo": {
              "$ref": "#/definitions/workflowPendingDynamicWorkflowInfoRef",
              "description": "Reference to the PendingDynamicWorkflowInfo that was used to construct this workflow instance.\n",
              "readOnly": true
            },
            "Permission": {
              "$ref": "#/definitions/iamPermissionRef",
              "description": "Reference to the permission object for which user has access to start this workflow.\n"
            },
            "TaskInfos": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/workflowTaskInfoRef"
              },
              "description": "List of task instances that ran as part of this workflow execution.\n",
              "readOnly": true
            },
            "WorkflowDefinition": {
              "$ref": "#/definitions/workflowWorkflowDefinitionRef",
              "description": "The workflow definition that was used to launch this workflow execution instance.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "workflowWorkflowInfoList": {
      "properties": {
        "Count": {
          "description": "The number of workflowWorkflowInfos matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of workflowWorkflowInfos matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/workflowWorkflowInfo"
          }
        }
      }
    },
    "workflowWorkflowMetaRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowWorkflowMeta": {
      "title": "Workflow:Workflow Meta",
      "description": "Contains a workflow definition which is a sequence of tasks to execute.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseMo"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "type": "string",
              "description": "The description for the workflow. \n"
            },
            "InputParameters": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The workflow input parameters. \n"
            },
            "Name": {
              "type": "string",
              "description": "The name given to the workflow. \n"
            },
            "OutputParameters": {
              "type": "object",
              "description": "The workflow output parameters. \n"
            },
            "SchemaVersion": {
              "type": "integer",
              "format": "int64",
              "description": "The Conductor schema version that decides what attribute can be supported. \n"
            },
            "Src": {
              "type": "string",
              "description": "The src is workflow owner service. \n"
            },
            "Tasks": {
              "type": "object",
              "description": "The tasks contained inside of the workflow. \n"
            },
            "Type": {
              "type": "string",
              "enum": [
                "SystemDefined",
                "UserDefined",
                "Dynamic"
              ],
              "default": "SystemDefined",
              "description": "The type of workflow definition. \n"
            },
            "Version": {
              "type": "integer",
              "format": "int64",
              "description": "The version for the workflow so we can support multiple versions for the same workflow name. \n"
            },
            "WaitOnDuplicate": {
              "type": "boolean",
              "description": "Parameter decides if workflows will wait for a duplicate to finish before starting a new one.  \n",
              "x-nullable": true
            },
            "Organization": {
              "$ref": "#/definitions/organizationOrganizationRef",
              "description": "Relationship to the Organization that owns the Managed Object.\n",
              "x-createOnly": true
            }
          }
        }
      ]
    },
    "workflowWorkflowMetaList": {
      "properties": {
        "Count": {
          "description": "The number of workflowWorkflowMeta matching your request in total for all pages.",
          "type": "integer",
          "format": "int32"
        },
        "Results": {
          "description": "The array of workflowWorkflowMeta matching your request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/workflowWorkflowMeta"
          }
        }
      }
    },
    "workflowWorkflowTaskRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowWorkflowTask": {
      "title": "Workflow:Workflow Task",
      "description": "Task instance within the workflow to be executed.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Description": {
              "type": "string",
              "description": "The description of this task instance in the workflow. \n"
            },
            "Label": {
              "type": "string",
              "description": "A user defined label identifier of the workflow task used for UI display. \n"
            },
            "Name": {
              "type": "string",
              "description": "The name of the task within the workflow and it must be unique among all WorkflowTasks within a workflow definition. This name serves as the internal unique identifier for the task and is used to pick input and output parameters to feed into other tasks.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "workflowXmlApiRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "workflowXmlApi": {
      "title": "XML API",
      "description": "This models a single XML API request that can be sent to any Cisco UCS devices\nthat support Cisco UCS XML API interface.\n",
      "allOf": [
        {
          "$ref": "#/definitions/workflowApi"
        },
        {
          "type": "object"
        }
      ]
    },
    "x509CertificateRef": {
      "allOf": [
        {
          "$ref": "#/definitions/moMoRef"
        }
      ]
    },
    "x509Certificate": {
      "title": "X509:Certificate",
      "description": "The representation of an X.509 certificate.\n",
      "allOf": [
        {
          "$ref": "#/definitions/moBaseComplexType"
        },
        {
          "type": "object",
          "properties": {
            "Issuer": {
              "$ref": "#/definitions/pkixDistinguishedName",
              "readOnly": true,
              "description": "The X.509 distinguished name of the issuer of this certificate. \n"
            },
            "NotAfter": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "The date on which the certificate's validity period ends. \n"
            },
            "NotBefore": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "The date on which the certificate's validity period begins. \n"
            },
            "PemCertificate": {
              "type": "string",
              "description": "The base64 encoded certificate in PEM format. \n"
            },
            "Sha256Fingerprint": {
              "type": "string",
              "readOnly": true,
              "description": "The computed SHA-256 fingerprint of the certificate. Equivalent to 'openssl x509 -fingerprint -sha256'. \n"
            },
            "SignatureAlgorithm": {
              "type": "string",
              "readOnly": true,
              "description": "Signature algorithm, as specified in [RFC 5280](https://tools.ietf.org/html/rfc5280). \n"
            },
            "Subject": {
              "$ref": "#/definitions/pkixDistinguishedName",
              "readOnly": true,
              "description": "The X.509 distinguished name of the subject of this certificate.  \n"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "Error": {
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "messageId": {
          "type": "string",
          "description": "A language-independent identifier of the specific error."
        },
        "cause": {
          "description": "The cause of this error",
          "$ref": "#/definitions/Error"
        }
      }
    }
  }
}