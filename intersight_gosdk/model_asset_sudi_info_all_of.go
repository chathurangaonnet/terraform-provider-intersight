/*
 * Cisco Intersight
 *
 * Cisco Intersight is a management platform delivered as a service with embedded analytics for your Cisco and 3rd party IT infrastructure. This platform offers an intelligent level of management that enables IT organizations to analyze, simplify, and automate their environments in more advanced ways than the prior generations of tools. Cisco Intersight provides an integrated and intuitive management experience for resources in the traditional data center as well as at the edge. With flexible deployment options to address complex security needs, getting started with Intersight is quick and easy. Cisco Intersight has deep integration with Cisco UCS and HyperFlex systems allowing for remote deployment, configuration, and ongoing maintenance. The model-based deployment works for a single system in a remote location or hundreds of systems in a data center and enables rapid, standardized configuration and deployment. It also streamlines maintaining those systems whether you are working with small or very large configurations. The Intersight OpenAPI document defines the complete set of properties that are returned in the HTTP response. From that perspective, a client can expect that no additional properties are returned, unless these properties are explicitly defined in the OpenAPI document. However, when a client uses an older version of the Intersight OpenAPI document, the server may send additional properties because the software is more recent than the client. In that case, the client may receive properties that it does not know about. Some generated SDKs perform a strict validation of the HTTP response body against the OpenAPI document. This document was created on 2020-06-13T05:58:55-07:00.
 *
 * API version: 1.0.9-1855
 * Contact: intersight@cisco.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package intersight

import (
	"encoding/json"
)

// AssetSudiInfoAllOf Definition of the list of properties defined in 'asset.SudiInfo', excluding properties defined in parent classes.
type AssetSudiInfoAllOf struct {
	// The device model (PID) extracted from the X.509 SUDI Leaf Certificate.
	Pid *string `json:"Pid,omitempty"`
	// The device SerialNumber extracted from the X.509 SUDI Leaf Certiicate.
	SerialNumber *string `json:"SerialNumber,omitempty"`
	// The signature is obtained by taking the base64 encoding of the Serial Number + PID + Status, taking the SHA256 hash and then signing with the SUDI X.509 Leaf Certifiate.
	Signature *string `json:"Signature,omitempty"`
	// The validation status of the device.
	Status          *string          `json:"Status,omitempty"`
	SudiCertificate *X509Certificate `json:"SudiCertificate,omitempty"`
}

// NewAssetSudiInfoAllOf instantiates a new AssetSudiInfoAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetSudiInfoAllOf() *AssetSudiInfoAllOf {
	this := AssetSudiInfoAllOf{}
	var status string = "DeviceStatusUnknown"
	this.Status = &status
	return &this
}

// NewAssetSudiInfoAllOfWithDefaults instantiates a new AssetSudiInfoAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetSudiInfoAllOfWithDefaults() *AssetSudiInfoAllOf {
	this := AssetSudiInfoAllOf{}
	var status string = "DeviceStatusUnknown"
	this.Status = &status
	return &this
}

// GetPid returns the Pid field value if set, zero value otherwise.
func (o *AssetSudiInfoAllOf) GetPid() string {
	if o == nil || o.Pid == nil {
		var ret string
		return ret
	}
	return *o.Pid
}

// GetPidOk returns a tuple with the Pid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetSudiInfoAllOf) GetPidOk() (*string, bool) {
	if o == nil || o.Pid == nil {
		return nil, false
	}
	return o.Pid, true
}

// HasPid returns a boolean if a field has been set.
func (o *AssetSudiInfoAllOf) HasPid() bool {
	if o != nil && o.Pid != nil {
		return true
	}

	return false
}

// SetPid gets a reference to the given string and assigns it to the Pid field.
func (o *AssetSudiInfoAllOf) SetPid(v string) {
	o.Pid = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *AssetSudiInfoAllOf) GetSerialNumber() string {
	if o == nil || o.SerialNumber == nil {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetSudiInfoAllOf) GetSerialNumberOk() (*string, bool) {
	if o == nil || o.SerialNumber == nil {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *AssetSudiInfoAllOf) HasSerialNumber() bool {
	if o != nil && o.SerialNumber != nil {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *AssetSudiInfoAllOf) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetSignature returns the Signature field value if set, zero value otherwise.
func (o *AssetSudiInfoAllOf) GetSignature() string {
	if o == nil || o.Signature == nil {
		var ret string
		return ret
	}
	return *o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetSudiInfoAllOf) GetSignatureOk() (*string, bool) {
	if o == nil || o.Signature == nil {
		return nil, false
	}
	return o.Signature, true
}

// HasSignature returns a boolean if a field has been set.
func (o *AssetSudiInfoAllOf) HasSignature() bool {
	if o != nil && o.Signature != nil {
		return true
	}

	return false
}

// SetSignature gets a reference to the given string and assigns it to the Signature field.
func (o *AssetSudiInfoAllOf) SetSignature(v string) {
	o.Signature = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AssetSudiInfoAllOf) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetSudiInfoAllOf) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AssetSudiInfoAllOf) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AssetSudiInfoAllOf) SetStatus(v string) {
	o.Status = &v
}

// GetSudiCertificate returns the SudiCertificate field value if set, zero value otherwise.
func (o *AssetSudiInfoAllOf) GetSudiCertificate() X509Certificate {
	if o == nil || o.SudiCertificate == nil {
		var ret X509Certificate
		return ret
	}
	return *o.SudiCertificate
}

// GetSudiCertificateOk returns a tuple with the SudiCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetSudiInfoAllOf) GetSudiCertificateOk() (*X509Certificate, bool) {
	if o == nil || o.SudiCertificate == nil {
		return nil, false
	}
	return o.SudiCertificate, true
}

// HasSudiCertificate returns a boolean if a field has been set.
func (o *AssetSudiInfoAllOf) HasSudiCertificate() bool {
	if o != nil && o.SudiCertificate != nil {
		return true
	}

	return false
}

// SetSudiCertificate gets a reference to the given X509Certificate and assigns it to the SudiCertificate field.
func (o *AssetSudiInfoAllOf) SetSudiCertificate(v X509Certificate) {
	o.SudiCertificate = &v
}

func (o AssetSudiInfoAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Pid != nil {
		toSerialize["Pid"] = o.Pid
	}
	if o.SerialNumber != nil {
		toSerialize["SerialNumber"] = o.SerialNumber
	}
	if o.Signature != nil {
		toSerialize["Signature"] = o.Signature
	}
	if o.Status != nil {
		toSerialize["Status"] = o.Status
	}
	if o.SudiCertificate != nil {
		toSerialize["SudiCertificate"] = o.SudiCertificate
	}
	return json.Marshal(toSerialize)
}

type NullableAssetSudiInfoAllOf struct {
	value *AssetSudiInfoAllOf
	isSet bool
}

func (v NullableAssetSudiInfoAllOf) Get() *AssetSudiInfoAllOf {
	return v.value
}

func (v *NullableAssetSudiInfoAllOf) Set(val *AssetSudiInfoAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetSudiInfoAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetSudiInfoAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetSudiInfoAllOf(val *AssetSudiInfoAllOf) *NullableAssetSudiInfoAllOf {
	return &NullableAssetSudiInfoAllOf{value: val, isSet: true}
}

func (v NullableAssetSudiInfoAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetSudiInfoAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
