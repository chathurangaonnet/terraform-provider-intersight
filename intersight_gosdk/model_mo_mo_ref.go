/*
 * Cisco Intersight
 *
 * Cisco Intersight is a management platform delivered as a service with embedded analytics for your Cisco and 3rd party IT infrastructure. This platform offers an intelligent level of management that enables IT organizations to analyze, simplify, and automate their environments in more advanced ways than the prior generations of tools. Cisco Intersight provides an integrated and intuitive management experience for resources in the traditional data center as well as at the edge. With flexible deployment options to address complex security needs, getting started with Intersight is quick and easy. Cisco Intersight has deep integration with Cisco UCS and HyperFlex systems allowing for remote deployment, configuration, and ongoing maintenance. The model-based deployment works for a single system in a remote location or hundreds of systems in a data center and enables rapid, standardized configuration and deployment. It also streamlines maintaining those systems whether you are working with small or very large configurations. The Intersight OpenAPI document defines the complete set of properties that are returned in the HTTP response. From that perspective, a client can expect that no additional properties are returned, unless these properties are explicitly defined in the OpenAPI document. However, when a client uses an older version of the Intersight OpenAPI document, the server may send additional properties because the software is more recent than the client. In that case, the client may receive properties that it does not know about. Some generated SDKs perform a strict validation of the HTTP response body against the OpenAPI document. This document was created on 2020-04-12T21:47:47-07:00.
 *
 * API version: 1.0.9-1617
 * Contact: intersight@cisco.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package intersight

import (
	"encoding/json"
)

// MoMoRef A reference to a REST resource, uniquely identified by object type and Moid.
type MoMoRef struct {
	MoBaseComplexType
	// The Moid of the referenced REST resource.
	Moid *string `json:"Moid,omitempty"`
	// The Object Type of the referenced REST resource.
	ObjectType string `json:"ObjectType"`
	// An OData $filter expression which describes the REST resource to be referenced. This field may be set instead of 'moid' by clients. 1. If 'moid' is set this field is ignored. 1. If 'selector' is set and 'moid' is empty/absent from the request, Intersight determines the Moid of the resource matching the filter expression and populates it in the MoRef that is part of the object instance being inserted/updated to fulfill the REST request. An error is returned if the filter matches zero or more than one REST resource. An example filter string is: Serial eq '3AA8B7T11'.
	Selector *string `json:"Selector,omitempty"`
	// A URL to an instance of the 'mo.MoRef' class.
	Link *string `json:"link,omitempty"`
}

// NewMoMoRef instantiates a new MoMoRef object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMoMoRef(objectType string) *MoMoRef {
	this := MoMoRef{}
	this.ObjectType = objectType
	return &this
}

// NewMoMoRefWithDefaults instantiates a new MoMoRef object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMoMoRefWithDefaults() *MoMoRef {
	this := MoMoRef{}
	return &this
}

// GetMoid returns the Moid field value if set, zero value otherwise.
func (o *MoMoRef) GetMoid() string {
	if o == nil || o.Moid == nil {
		var ret string
		return ret
	}
	return *o.Moid
}

// GetMoidOk returns a tuple with the Moid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoMoRef) GetMoidOk() (*string, bool) {
	if o == nil || o.Moid == nil {
		return nil, false
	}
	return o.Moid, true
}

// HasMoid returns a boolean if a field has been set.
func (o *MoMoRef) HasMoid() bool {
	if o != nil && o.Moid != nil {
		return true
	}

	return false
}

// SetMoid gets a reference to the given string and assigns it to the Moid field.
func (o *MoMoRef) SetMoid(v string) {
	o.Moid = &v
}

// GetObjectType returns the ObjectType field value
func (o *MoMoRef) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *MoMoRef) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *MoMoRef) SetObjectType(v string) {
	o.ObjectType = v
}

// GetSelector returns the Selector field value if set, zero value otherwise.
func (o *MoMoRef) GetSelector() string {
	if o == nil || o.Selector == nil {
		var ret string
		return ret
	}
	return *o.Selector
}

// GetSelectorOk returns a tuple with the Selector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoMoRef) GetSelectorOk() (*string, bool) {
	if o == nil || o.Selector == nil {
		return nil, false
	}
	return o.Selector, true
}

// HasSelector returns a boolean if a field has been set.
func (o *MoMoRef) HasSelector() bool {
	if o != nil && o.Selector != nil {
		return true
	}

	return false
}

// SetSelector gets a reference to the given string and assigns it to the Selector field.
func (o *MoMoRef) SetSelector(v string) {
	o.Selector = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *MoMoRef) GetLink() string {
	if o == nil || o.Link == nil {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoMoRef) GetLinkOk() (*string, bool) {
	if o == nil || o.Link == nil {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *MoMoRef) HasLink() bool {
	if o != nil && o.Link != nil {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *MoMoRef) SetLink(v string) {
	o.Link = &v
}

func (o MoMoRef) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedMoBaseComplexType, errMoBaseComplexType := json.Marshal(o.MoBaseComplexType)
	if errMoBaseComplexType != nil {
		return []byte{}, errMoBaseComplexType
	}
	errMoBaseComplexType = json.Unmarshal([]byte(serializedMoBaseComplexType), &toSerialize)
	if errMoBaseComplexType != nil {
		return []byte{}, errMoBaseComplexType
	}
	if o.Moid != nil {
		toSerialize["Moid"] = o.Moid
	}
	if true {
		toSerialize["ObjectType"] = o.ObjectType
	}
	if o.Selector != nil {
		toSerialize["Selector"] = o.Selector
	}
	if o.Link != nil {
		toSerialize["link"] = o.Link
	}
	return json.Marshal(toSerialize)
}

// AsAdapterExtEthInterfaceRelationship wraps this instance of MoMoRef in AdapterExtEthInterfaceRelationship
func (s *MoMoRef) AsAdapterExtEthInterfaceRelationship() AdapterExtEthInterfaceRelationship {
	return AdapterExtEthInterfaceRelationship{AdapterExtEthInterfaceRelationshipInterface: s}
}

// AsAdapterHostEthInterfaceRelationship wraps this instance of MoMoRef in AdapterHostEthInterfaceRelationship
func (s *MoMoRef) AsAdapterHostEthInterfaceRelationship() AdapterHostEthInterfaceRelationship {
	return AdapterHostEthInterfaceRelationship{AdapterHostEthInterfaceRelationshipInterface: s}
}

// AsAdapterHostFcInterfaceRelationship wraps this instance of MoMoRef in AdapterHostFcInterfaceRelationship
func (s *MoMoRef) AsAdapterHostFcInterfaceRelationship() AdapterHostFcInterfaceRelationship {
	return AdapterHostFcInterfaceRelationship{AdapterHostFcInterfaceRelationshipInterface: s}
}

// AsAdapterHostIscsiInterfaceRelationship wraps this instance of MoMoRef in AdapterHostIscsiInterfaceRelationship
func (s *MoMoRef) AsAdapterHostIscsiInterfaceRelationship() AdapterHostIscsiInterfaceRelationship {
	return AdapterHostIscsiInterfaceRelationship{AdapterHostIscsiInterfaceRelationshipInterface: s}
}

// AsAdapterUnitRelationship wraps this instance of MoMoRef in AdapterUnitRelationship
func (s *MoMoRef) AsAdapterUnitRelationship() AdapterUnitRelationship {
	return AdapterUnitRelationship{AdapterUnitRelationshipInterface: s}
}

// AsApplianceDataExportPolicyRelationship wraps this instance of MoMoRef in ApplianceDataExportPolicyRelationship
func (s *MoMoRef) AsApplianceDataExportPolicyRelationship() ApplianceDataExportPolicyRelationship {
	return ApplianceDataExportPolicyRelationship{ApplianceDataExportPolicyRelationshipInterface: s}
}

// AsApplianceImageBundleRelationship wraps this instance of MoMoRef in ApplianceImageBundleRelationship
func (s *MoMoRef) AsApplianceImageBundleRelationship() ApplianceImageBundleRelationship {
	return ApplianceImageBundleRelationship{ApplianceImageBundleRelationshipInterface: s}
}

// AsAssetClusterMemberRelationship wraps this instance of MoMoRef in AssetClusterMemberRelationship
func (s *MoMoRef) AsAssetClusterMemberRelationship() AssetClusterMemberRelationship {
	return AssetClusterMemberRelationship{AssetClusterMemberRelationshipInterface: s}
}

// AsAssetDeviceClaimRelationship wraps this instance of MoMoRef in AssetDeviceClaimRelationship
func (s *MoMoRef) AsAssetDeviceClaimRelationship() AssetDeviceClaimRelationship {
	return AssetDeviceClaimRelationship{AssetDeviceClaimRelationshipInterface: s}
}

// AsAssetDeviceConfigurationRelationship wraps this instance of MoMoRef in AssetDeviceConfigurationRelationship
func (s *MoMoRef) AsAssetDeviceConfigurationRelationship() AssetDeviceConfigurationRelationship {
	return AssetDeviceConfigurationRelationship{AssetDeviceConfigurationRelationshipInterface: s}
}

// AsAssetDeviceConnectionRelationship wraps this instance of MoMoRef in AssetDeviceConnectionRelationship
func (s *MoMoRef) AsAssetDeviceConnectionRelationship() AssetDeviceConnectionRelationship {
	return AssetDeviceConnectionRelationship{AssetDeviceConnectionRelationshipInterface: s}
}

// AsAssetDeviceRegistrationRelationship wraps this instance of MoMoRef in AssetDeviceRegistrationRelationship
func (s *MoMoRef) AsAssetDeviceRegistrationRelationship() AssetDeviceRegistrationRelationship {
	return AssetDeviceRegistrationRelationship{AssetDeviceRegistrationRelationshipInterface: s}
}

// AsBiosBootModeRelationship wraps this instance of MoMoRef in BiosBootModeRelationship
func (s *MoMoRef) AsBiosBootModeRelationship() BiosBootModeRelationship {
	return BiosBootModeRelationship{BiosBootModeRelationshipInterface: s}
}

// AsBiosUnitRelationship wraps this instance of MoMoRef in BiosUnitRelationship
func (s *MoMoRef) AsBiosUnitRelationship() BiosUnitRelationship {
	return BiosUnitRelationship{BiosUnitRelationshipInterface: s}
}

// AsBootDeviceBootModeRelationship wraps this instance of MoMoRef in BootDeviceBootModeRelationship
func (s *MoMoRef) AsBootDeviceBootModeRelationship() BootDeviceBootModeRelationship {
	return BootDeviceBootModeRelationship{BootDeviceBootModeRelationshipInterface: s}
}

// AsComputeBladeRelationship wraps this instance of MoMoRef in ComputeBladeRelationship
func (s *MoMoRef) AsComputeBladeRelationship() ComputeBladeRelationship {
	return ComputeBladeRelationship{ComputeBladeRelationshipInterface: s}
}

// AsComputeBoardRelationship wraps this instance of MoMoRef in ComputeBoardRelationship
func (s *MoMoRef) AsComputeBoardRelationship() ComputeBoardRelationship {
	return ComputeBoardRelationship{ComputeBoardRelationshipInterface: s}
}

// AsComputePhysicalRelationship wraps this instance of MoMoRef in ComputePhysicalRelationship
func (s *MoMoRef) AsComputePhysicalRelationship() ComputePhysicalRelationship {
	return ComputePhysicalRelationship{ComputePhysicalRelationshipInterface: s}
}

// AsComputeRackUnitRelationship wraps this instance of MoMoRef in ComputeRackUnitRelationship
func (s *MoMoRef) AsComputeRackUnitRelationship() ComputeRackUnitRelationship {
	return ComputeRackUnitRelationship{ComputeRackUnitRelationshipInterface: s}
}

// AsCondHclStatusDetailRelationship wraps this instance of MoMoRef in CondHclStatusDetailRelationship
func (s *MoMoRef) AsCondHclStatusDetailRelationship() CondHclStatusDetailRelationship {
	return CondHclStatusDetailRelationship{CondHclStatusDetailRelationshipInterface: s}
}

// AsCondHclStatusRelationship wraps this instance of MoMoRef in CondHclStatusRelationship
func (s *MoMoRef) AsCondHclStatusRelationship() CondHclStatusRelationship {
	return CondHclStatusRelationship{CondHclStatusRelationshipInterface: s}
}

// AsEquipmentChassisRelationship wraps this instance of MoMoRef in EquipmentChassisRelationship
func (s *MoMoRef) AsEquipmentChassisRelationship() EquipmentChassisRelationship {
	return EquipmentChassisRelationship{EquipmentChassisRelationshipInterface: s}
}

// AsEquipmentFanModuleRelationship wraps this instance of MoMoRef in EquipmentFanModuleRelationship
func (s *MoMoRef) AsEquipmentFanModuleRelationship() EquipmentFanModuleRelationship {
	return EquipmentFanModuleRelationship{EquipmentFanModuleRelationshipInterface: s}
}

// AsEquipmentFanRelationship wraps this instance of MoMoRef in EquipmentFanRelationship
func (s *MoMoRef) AsEquipmentFanRelationship() EquipmentFanRelationship {
	return EquipmentFanRelationship{EquipmentFanRelationshipInterface: s}
}

// AsEquipmentIoCardRelationship wraps this instance of MoMoRef in EquipmentIoCardRelationship
func (s *MoMoRef) AsEquipmentIoCardRelationship() EquipmentIoCardRelationship {
	return EquipmentIoCardRelationship{EquipmentIoCardRelationshipInterface: s}
}

// AsEquipmentIoExpanderRelationship wraps this instance of MoMoRef in EquipmentIoExpanderRelationship
func (s *MoMoRef) AsEquipmentIoExpanderRelationship() EquipmentIoExpanderRelationship {
	return EquipmentIoExpanderRelationship{EquipmentIoExpanderRelationshipInterface: s}
}

// AsEquipmentLocatorLedRelationship wraps this instance of MoMoRef in EquipmentLocatorLedRelationship
func (s *MoMoRef) AsEquipmentLocatorLedRelationship() EquipmentLocatorLedRelationship {
	return EquipmentLocatorLedRelationship{EquipmentLocatorLedRelationshipInterface: s}
}

// AsEquipmentPsuRelationship wraps this instance of MoMoRef in EquipmentPsuRelationship
func (s *MoMoRef) AsEquipmentPsuRelationship() EquipmentPsuRelationship {
	return EquipmentPsuRelationship{EquipmentPsuRelationshipInterface: s}
}

// AsEquipmentRackEnclosureRelationship wraps this instance of MoMoRef in EquipmentRackEnclosureRelationship
func (s *MoMoRef) AsEquipmentRackEnclosureRelationship() EquipmentRackEnclosureRelationship {
	return EquipmentRackEnclosureRelationship{EquipmentRackEnclosureRelationshipInterface: s}
}

// AsEquipmentRackEnclosureSlotRelationship wraps this instance of MoMoRef in EquipmentRackEnclosureSlotRelationship
func (s *MoMoRef) AsEquipmentRackEnclosureSlotRelationship() EquipmentRackEnclosureSlotRelationship {
	return EquipmentRackEnclosureSlotRelationship{EquipmentRackEnclosureSlotRelationshipInterface: s}
}

// AsEquipmentSharedIoModuleRelationship wraps this instance of MoMoRef in EquipmentSharedIoModuleRelationship
func (s *MoMoRef) AsEquipmentSharedIoModuleRelationship() EquipmentSharedIoModuleRelationship {
	return EquipmentSharedIoModuleRelationship{EquipmentSharedIoModuleRelationshipInterface: s}
}

// AsEquipmentSwitchCardRelationship wraps this instance of MoMoRef in EquipmentSwitchCardRelationship
func (s *MoMoRef) AsEquipmentSwitchCardRelationship() EquipmentSwitchCardRelationship {
	return EquipmentSwitchCardRelationship{EquipmentSwitchCardRelationshipInterface: s}
}

// AsEquipmentSystemIoControllerRelationship wraps this instance of MoMoRef in EquipmentSystemIoControllerRelationship
func (s *MoMoRef) AsEquipmentSystemIoControllerRelationship() EquipmentSystemIoControllerRelationship {
	return EquipmentSystemIoControllerRelationship{EquipmentSystemIoControllerRelationshipInterface: s}
}

// AsEquipmentTpmRelationship wraps this instance of MoMoRef in EquipmentTpmRelationship
func (s *MoMoRef) AsEquipmentTpmRelationship() EquipmentTpmRelationship {
	return EquipmentTpmRelationship{EquipmentTpmRelationshipInterface: s}
}

// AsEtherPhysicalPortRelationship wraps this instance of MoMoRef in EtherPhysicalPortRelationship
func (s *MoMoRef) AsEtherPhysicalPortRelationship() EtherPhysicalPortRelationship {
	return EtherPhysicalPortRelationship{EtherPhysicalPortRelationshipInterface: s}
}

// AsFcPhysicalPortRelationship wraps this instance of MoMoRef in FcPhysicalPortRelationship
func (s *MoMoRef) AsFcPhysicalPortRelationship() FcPhysicalPortRelationship {
	return FcPhysicalPortRelationship{FcPhysicalPortRelationshipInterface: s}
}

// AsFirmwareDistributableRelationship wraps this instance of MoMoRef in FirmwareDistributableRelationship
func (s *MoMoRef) AsFirmwareDistributableRelationship() FirmwareDistributableRelationship {
	return FirmwareDistributableRelationship{FirmwareDistributableRelationshipInterface: s}
}

// AsFirmwareRunningFirmwareRelationship wraps this instance of MoMoRef in FirmwareRunningFirmwareRelationship
func (s *MoMoRef) AsFirmwareRunningFirmwareRelationship() FirmwareRunningFirmwareRelationship {
	return FirmwareRunningFirmwareRelationship{FirmwareRunningFirmwareRelationshipInterface: s}
}

// AsFirmwareServerConfigurationUtilityDistributableRelationship wraps this instance of MoMoRef in FirmwareServerConfigurationUtilityDistributableRelationship
func (s *MoMoRef) AsFirmwareServerConfigurationUtilityDistributableRelationship() FirmwareServerConfigurationUtilityDistributableRelationship {
	return FirmwareServerConfigurationUtilityDistributableRelationship{FirmwareServerConfigurationUtilityDistributableRelationshipInterface: s}
}

// AsFirmwareUpgradeRelationship wraps this instance of MoMoRef in FirmwareUpgradeRelationship
func (s *MoMoRef) AsFirmwareUpgradeRelationship() FirmwareUpgradeRelationship {
	return FirmwareUpgradeRelationship{FirmwareUpgradeRelationshipInterface: s}
}

// AsFirmwareUpgradeStatusRelationship wraps this instance of MoMoRef in FirmwareUpgradeStatusRelationship
func (s *MoMoRef) AsFirmwareUpgradeStatusRelationship() FirmwareUpgradeStatusRelationship {
	return FirmwareUpgradeStatusRelationship{FirmwareUpgradeStatusRelationshipInterface: s}
}

// AsForecastCatalogRelationship wraps this instance of MoMoRef in ForecastCatalogRelationship
func (s *MoMoRef) AsForecastCatalogRelationship() ForecastCatalogRelationship {
	return ForecastCatalogRelationship{ForecastCatalogRelationshipInterface: s}
}

// AsForecastDefinitionRelationship wraps this instance of MoMoRef in ForecastDefinitionRelationship
func (s *MoMoRef) AsForecastDefinitionRelationship() ForecastDefinitionRelationship {
	return ForecastDefinitionRelationship{ForecastDefinitionRelationshipInterface: s}
}

// AsGraphicsCardRelationship wraps this instance of MoMoRef in GraphicsCardRelationship
func (s *MoMoRef) AsGraphicsCardRelationship() GraphicsCardRelationship {
	return GraphicsCardRelationship{GraphicsCardRelationshipInterface: s}
}

// AsGraphicsControllerRelationship wraps this instance of MoMoRef in GraphicsControllerRelationship
func (s *MoMoRef) AsGraphicsControllerRelationship() GraphicsControllerRelationship {
	return GraphicsControllerRelationship{GraphicsControllerRelationshipInterface: s}
}

// AsHclHyperflexSoftwareCompatibilityInfoRelationship wraps this instance of MoMoRef in HclHyperflexSoftwareCompatibilityInfoRelationship
func (s *MoMoRef) AsHclHyperflexSoftwareCompatibilityInfoRelationship() HclHyperflexSoftwareCompatibilityInfoRelationship {
	return HclHyperflexSoftwareCompatibilityInfoRelationship{HclHyperflexSoftwareCompatibilityInfoRelationshipInterface: s}
}

// AsHclOperatingSystemRelationship wraps this instance of MoMoRef in HclOperatingSystemRelationship
func (s *MoMoRef) AsHclOperatingSystemRelationship() HclOperatingSystemRelationship {
	return HclOperatingSystemRelationship{HclOperatingSystemRelationshipInterface: s}
}

// AsHclOperatingSystemVendorRelationship wraps this instance of MoMoRef in HclOperatingSystemVendorRelationship
func (s *MoMoRef) AsHclOperatingSystemVendorRelationship() HclOperatingSystemVendorRelationship {
	return HclOperatingSystemVendorRelationship{HclOperatingSystemVendorRelationshipInterface: s}
}

// AsHyperflexAlarmRelationship wraps this instance of MoMoRef in HyperflexAlarmRelationship
func (s *MoMoRef) AsHyperflexAlarmRelationship() HyperflexAlarmRelationship {
	return HyperflexAlarmRelationship{HyperflexAlarmRelationshipInterface: s}
}

// AsHyperflexAppCatalogRelationship wraps this instance of MoMoRef in HyperflexAppCatalogRelationship
func (s *MoMoRef) AsHyperflexAppCatalogRelationship() HyperflexAppCatalogRelationship {
	return HyperflexAppCatalogRelationship{HyperflexAppCatalogRelationshipInterface: s}
}

// AsHyperflexAutoSupportPolicyRelationship wraps this instance of MoMoRef in HyperflexAutoSupportPolicyRelationship
func (s *MoMoRef) AsHyperflexAutoSupportPolicyRelationship() HyperflexAutoSupportPolicyRelationship {
	return HyperflexAutoSupportPolicyRelationship{HyperflexAutoSupportPolicyRelationshipInterface: s}
}

// AsHyperflexCapabilityInfoRelationship wraps this instance of MoMoRef in HyperflexCapabilityInfoRelationship
func (s *MoMoRef) AsHyperflexCapabilityInfoRelationship() HyperflexCapabilityInfoRelationship {
	return HyperflexCapabilityInfoRelationship{HyperflexCapabilityInfoRelationshipInterface: s}
}

// AsHyperflexClusterNetworkPolicyRelationship wraps this instance of MoMoRef in HyperflexClusterNetworkPolicyRelationship
func (s *MoMoRef) AsHyperflexClusterNetworkPolicyRelationship() HyperflexClusterNetworkPolicyRelationship {
	return HyperflexClusterNetworkPolicyRelationship{HyperflexClusterNetworkPolicyRelationshipInterface: s}
}

// AsHyperflexClusterProfileRelationship wraps this instance of MoMoRef in HyperflexClusterProfileRelationship
func (s *MoMoRef) AsHyperflexClusterProfileRelationship() HyperflexClusterProfileRelationship {
	return HyperflexClusterProfileRelationship{HyperflexClusterProfileRelationshipInterface: s}
}

// AsHyperflexClusterRelationship wraps this instance of MoMoRef in HyperflexClusterRelationship
func (s *MoMoRef) AsHyperflexClusterRelationship() HyperflexClusterRelationship {
	return HyperflexClusterRelationship{HyperflexClusterRelationshipInterface: s}
}

// AsHyperflexClusterStoragePolicyRelationship wraps this instance of MoMoRef in HyperflexClusterStoragePolicyRelationship
func (s *MoMoRef) AsHyperflexClusterStoragePolicyRelationship() HyperflexClusterStoragePolicyRelationship {
	return HyperflexClusterStoragePolicyRelationship{HyperflexClusterStoragePolicyRelationshipInterface: s}
}

// AsHyperflexConfigResultEntryRelationship wraps this instance of MoMoRef in HyperflexConfigResultEntryRelationship
func (s *MoMoRef) AsHyperflexConfigResultEntryRelationship() HyperflexConfigResultEntryRelationship {
	return HyperflexConfigResultEntryRelationship{HyperflexConfigResultEntryRelationshipInterface: s}
}

// AsHyperflexConfigResultRelationship wraps this instance of MoMoRef in HyperflexConfigResultRelationship
func (s *MoMoRef) AsHyperflexConfigResultRelationship() HyperflexConfigResultRelationship {
	return HyperflexConfigResultRelationship{HyperflexConfigResultRelationshipInterface: s}
}

// AsHyperflexExtFcStoragePolicyRelationship wraps this instance of MoMoRef in HyperflexExtFcStoragePolicyRelationship
func (s *MoMoRef) AsHyperflexExtFcStoragePolicyRelationship() HyperflexExtFcStoragePolicyRelationship {
	return HyperflexExtFcStoragePolicyRelationship{HyperflexExtFcStoragePolicyRelationshipInterface: s}
}

// AsHyperflexExtIscsiStoragePolicyRelationship wraps this instance of MoMoRef in HyperflexExtIscsiStoragePolicyRelationship
func (s *MoMoRef) AsHyperflexExtIscsiStoragePolicyRelationship() HyperflexExtIscsiStoragePolicyRelationship {
	return HyperflexExtIscsiStoragePolicyRelationship{HyperflexExtIscsiStoragePolicyRelationshipInterface: s}
}

// AsHyperflexFeatureLimitExternalRelationship wraps this instance of MoMoRef in HyperflexFeatureLimitExternalRelationship
func (s *MoMoRef) AsHyperflexFeatureLimitExternalRelationship() HyperflexFeatureLimitExternalRelationship {
	return HyperflexFeatureLimitExternalRelationship{HyperflexFeatureLimitExternalRelationshipInterface: s}
}

// AsHyperflexFeatureLimitInternalRelationship wraps this instance of MoMoRef in HyperflexFeatureLimitInternalRelationship
func (s *MoMoRef) AsHyperflexFeatureLimitInternalRelationship() HyperflexFeatureLimitInternalRelationship {
	return HyperflexFeatureLimitInternalRelationship{HyperflexFeatureLimitInternalRelationshipInterface: s}
}

// AsHyperflexHealthRelationship wraps this instance of MoMoRef in HyperflexHealthRelationship
func (s *MoMoRef) AsHyperflexHealthRelationship() HyperflexHealthRelationship {
	return HyperflexHealthRelationship{HyperflexHealthRelationshipInterface: s}
}

// AsHyperflexHxdpVersionRelationship wraps this instance of MoMoRef in HyperflexHxdpVersionRelationship
func (s *MoMoRef) AsHyperflexHxdpVersionRelationship() HyperflexHxdpVersionRelationship {
	return HyperflexHxdpVersionRelationship{HyperflexHxdpVersionRelationshipInterface: s}
}

// AsHyperflexLocalCredentialPolicyRelationship wraps this instance of MoMoRef in HyperflexLocalCredentialPolicyRelationship
func (s *MoMoRef) AsHyperflexLocalCredentialPolicyRelationship() HyperflexLocalCredentialPolicyRelationship {
	return HyperflexLocalCredentialPolicyRelationship{HyperflexLocalCredentialPolicyRelationshipInterface: s}
}

// AsHyperflexNodeConfigPolicyRelationship wraps this instance of MoMoRef in HyperflexNodeConfigPolicyRelationship
func (s *MoMoRef) AsHyperflexNodeConfigPolicyRelationship() HyperflexNodeConfigPolicyRelationship {
	return HyperflexNodeConfigPolicyRelationship{HyperflexNodeConfigPolicyRelationshipInterface: s}
}

// AsHyperflexNodeProfileRelationship wraps this instance of MoMoRef in HyperflexNodeProfileRelationship
func (s *MoMoRef) AsHyperflexNodeProfileRelationship() HyperflexNodeProfileRelationship {
	return HyperflexNodeProfileRelationship{HyperflexNodeProfileRelationshipInterface: s}
}

// AsHyperflexNodeRelationship wraps this instance of MoMoRef in HyperflexNodeRelationship
func (s *MoMoRef) AsHyperflexNodeRelationship() HyperflexNodeRelationship {
	return HyperflexNodeRelationship{HyperflexNodeRelationshipInterface: s}
}

// AsHyperflexProxySettingPolicyRelationship wraps this instance of MoMoRef in HyperflexProxySettingPolicyRelationship
func (s *MoMoRef) AsHyperflexProxySettingPolicyRelationship() HyperflexProxySettingPolicyRelationship {
	return HyperflexProxySettingPolicyRelationship{HyperflexProxySettingPolicyRelationshipInterface: s}
}

// AsHyperflexServerFirmwareVersionRelationship wraps this instance of MoMoRef in HyperflexServerFirmwareVersionRelationship
func (s *MoMoRef) AsHyperflexServerFirmwareVersionRelationship() HyperflexServerFirmwareVersionRelationship {
	return HyperflexServerFirmwareVersionRelationship{HyperflexServerFirmwareVersionRelationshipInterface: s}
}

// AsHyperflexServerModelRelationship wraps this instance of MoMoRef in HyperflexServerModelRelationship
func (s *MoMoRef) AsHyperflexServerModelRelationship() HyperflexServerModelRelationship {
	return HyperflexServerModelRelationship{HyperflexServerModelRelationshipInterface: s}
}

// AsHyperflexSoftwareVersionPolicyRelationship wraps this instance of MoMoRef in HyperflexSoftwareVersionPolicyRelationship
func (s *MoMoRef) AsHyperflexSoftwareVersionPolicyRelationship() HyperflexSoftwareVersionPolicyRelationship {
	return HyperflexSoftwareVersionPolicyRelationship{HyperflexSoftwareVersionPolicyRelationshipInterface: s}
}

// AsHyperflexSysConfigPolicyRelationship wraps this instance of MoMoRef in HyperflexSysConfigPolicyRelationship
func (s *MoMoRef) AsHyperflexSysConfigPolicyRelationship() HyperflexSysConfigPolicyRelationship {
	return HyperflexSysConfigPolicyRelationship{HyperflexSysConfigPolicyRelationshipInterface: s}
}

// AsHyperflexUcsmConfigPolicyRelationship wraps this instance of MoMoRef in HyperflexUcsmConfigPolicyRelationship
func (s *MoMoRef) AsHyperflexUcsmConfigPolicyRelationship() HyperflexUcsmConfigPolicyRelationship {
	return HyperflexUcsmConfigPolicyRelationship{HyperflexUcsmConfigPolicyRelationshipInterface: s}
}

// AsHyperflexVcenterConfigPolicyRelationship wraps this instance of MoMoRef in HyperflexVcenterConfigPolicyRelationship
func (s *MoMoRef) AsHyperflexVcenterConfigPolicyRelationship() HyperflexVcenterConfigPolicyRelationship {
	return HyperflexVcenterConfigPolicyRelationship{HyperflexVcenterConfigPolicyRelationshipInterface: s}
}

// AsIaasConnectorPackRelationship wraps this instance of MoMoRef in IaasConnectorPackRelationship
func (s *MoMoRef) AsIaasConnectorPackRelationship() IaasConnectorPackRelationship {
	return IaasConnectorPackRelationship{IaasConnectorPackRelationshipInterface: s}
}

// AsIaasDeviceStatusRelationship wraps this instance of MoMoRef in IaasDeviceStatusRelationship
func (s *MoMoRef) AsIaasDeviceStatusRelationship() IaasDeviceStatusRelationship {
	return IaasDeviceStatusRelationship{IaasDeviceStatusRelationshipInterface: s}
}

// AsIaasLicenseInfoRelationship wraps this instance of MoMoRef in IaasLicenseInfoRelationship
func (s *MoMoRef) AsIaasLicenseInfoRelationship() IaasLicenseInfoRelationship {
	return IaasLicenseInfoRelationship{IaasLicenseInfoRelationshipInterface: s}
}

// AsIaasMostRunTasksRelationship wraps this instance of MoMoRef in IaasMostRunTasksRelationship
func (s *MoMoRef) AsIaasMostRunTasksRelationship() IaasMostRunTasksRelationship {
	return IaasMostRunTasksRelationship{IaasMostRunTasksRelationshipInterface: s}
}

// AsIaasUcsdInfoRelationship wraps this instance of MoMoRef in IaasUcsdInfoRelationship
func (s *MoMoRef) AsIaasUcsdInfoRelationship() IaasUcsdInfoRelationship {
	return IaasUcsdInfoRelationship{IaasUcsdInfoRelationshipInterface: s}
}

// AsIaasUcsdManagedInfraRelationship wraps this instance of MoMoRef in IaasUcsdManagedInfraRelationship
func (s *MoMoRef) AsIaasUcsdManagedInfraRelationship() IaasUcsdManagedInfraRelationship {
	return IaasUcsdManagedInfraRelationship{IaasUcsdManagedInfraRelationshipInterface: s}
}

// AsIamAccountRelationship wraps this instance of MoMoRef in IamAccountRelationship
func (s *MoMoRef) AsIamAccountRelationship() IamAccountRelationship {
	return IamAccountRelationship{IamAccountRelationshipInterface: s}
}

// AsIamApiKeyRelationship wraps this instance of MoMoRef in IamApiKeyRelationship
func (s *MoMoRef) AsIamApiKeyRelationship() IamApiKeyRelationship {
	return IamApiKeyRelationship{IamApiKeyRelationshipInterface: s}
}

// AsIamAppRegistrationRelationship wraps this instance of MoMoRef in IamAppRegistrationRelationship
func (s *MoMoRef) AsIamAppRegistrationRelationship() IamAppRegistrationRelationship {
	return IamAppRegistrationRelationship{IamAppRegistrationRelationshipInterface: s}
}

// AsIamCertificateRelationship wraps this instance of MoMoRef in IamCertificateRelationship
func (s *MoMoRef) AsIamCertificateRelationship() IamCertificateRelationship {
	return IamCertificateRelationship{IamCertificateRelationshipInterface: s}
}

// AsIamCertificateRequestRelationship wraps this instance of MoMoRef in IamCertificateRequestRelationship
func (s *MoMoRef) AsIamCertificateRequestRelationship() IamCertificateRequestRelationship {
	return IamCertificateRequestRelationship{IamCertificateRequestRelationshipInterface: s}
}

// AsIamDomainGroupRelationship wraps this instance of MoMoRef in IamDomainGroupRelationship
func (s *MoMoRef) AsIamDomainGroupRelationship() IamDomainGroupRelationship {
	return IamDomainGroupRelationship{IamDomainGroupRelationshipInterface: s}
}

// AsIamEndPointPrivilegeRelationship wraps this instance of MoMoRef in IamEndPointPrivilegeRelationship
func (s *MoMoRef) AsIamEndPointPrivilegeRelationship() IamEndPointPrivilegeRelationship {
	return IamEndPointPrivilegeRelationship{IamEndPointPrivilegeRelationshipInterface: s}
}

// AsIamEndPointRoleRelationship wraps this instance of MoMoRef in IamEndPointRoleRelationship
func (s *MoMoRef) AsIamEndPointRoleRelationship() IamEndPointRoleRelationship {
	return IamEndPointRoleRelationship{IamEndPointRoleRelationshipInterface: s}
}

// AsIamEndPointUserPolicyRelationship wraps this instance of MoMoRef in IamEndPointUserPolicyRelationship
func (s *MoMoRef) AsIamEndPointUserPolicyRelationship() IamEndPointUserPolicyRelationship {
	return IamEndPointUserPolicyRelationship{IamEndPointUserPolicyRelationshipInterface: s}
}

// AsIamEndPointUserRelationship wraps this instance of MoMoRef in IamEndPointUserRelationship
func (s *MoMoRef) AsIamEndPointUserRelationship() IamEndPointUserRelationship {
	return IamEndPointUserRelationship{IamEndPointUserRelationshipInterface: s}
}

// AsIamEndPointUserRoleRelationship wraps this instance of MoMoRef in IamEndPointUserRoleRelationship
func (s *MoMoRef) AsIamEndPointUserRoleRelationship() IamEndPointUserRoleRelationship {
	return IamEndPointUserRoleRelationship{IamEndPointUserRoleRelationshipInterface: s}
}

// AsIamIdpReferenceRelationship wraps this instance of MoMoRef in IamIdpReferenceRelationship
func (s *MoMoRef) AsIamIdpReferenceRelationship() IamIdpReferenceRelationship {
	return IamIdpReferenceRelationship{IamIdpReferenceRelationshipInterface: s}
}

// AsIamIdpRelationship wraps this instance of MoMoRef in IamIdpRelationship
func (s *MoMoRef) AsIamIdpRelationship() IamIdpRelationship {
	return IamIdpRelationship{IamIdpRelationshipInterface: s}
}

// AsIamLdapGroupRelationship wraps this instance of MoMoRef in IamLdapGroupRelationship
func (s *MoMoRef) AsIamLdapGroupRelationship() IamLdapGroupRelationship {
	return IamLdapGroupRelationship{IamLdapGroupRelationshipInterface: s}
}

// AsIamLdapPolicyRelationship wraps this instance of MoMoRef in IamLdapPolicyRelationship
func (s *MoMoRef) AsIamLdapPolicyRelationship() IamLdapPolicyRelationship {
	return IamLdapPolicyRelationship{IamLdapPolicyRelationshipInterface: s}
}

// AsIamLdapProviderRelationship wraps this instance of MoMoRef in IamLdapProviderRelationship
func (s *MoMoRef) AsIamLdapProviderRelationship() IamLdapProviderRelationship {
	return IamLdapProviderRelationship{IamLdapProviderRelationshipInterface: s}
}

// AsIamLocalUserPasswordRelationship wraps this instance of MoMoRef in IamLocalUserPasswordRelationship
func (s *MoMoRef) AsIamLocalUserPasswordRelationship() IamLocalUserPasswordRelationship {
	return IamLocalUserPasswordRelationship{IamLocalUserPasswordRelationshipInterface: s}
}

// AsIamOAuthTokenRelationship wraps this instance of MoMoRef in IamOAuthTokenRelationship
func (s *MoMoRef) AsIamOAuthTokenRelationship() IamOAuthTokenRelationship {
	return IamOAuthTokenRelationship{IamOAuthTokenRelationshipInterface: s}
}

// AsIamPermissionRelationship wraps this instance of MoMoRef in IamPermissionRelationship
func (s *MoMoRef) AsIamPermissionRelationship() IamPermissionRelationship {
	return IamPermissionRelationship{IamPermissionRelationshipInterface: s}
}

// AsIamPrivateKeySpecRelationship wraps this instance of MoMoRef in IamPrivateKeySpecRelationship
func (s *MoMoRef) AsIamPrivateKeySpecRelationship() IamPrivateKeySpecRelationship {
	return IamPrivateKeySpecRelationship{IamPrivateKeySpecRelationshipInterface: s}
}

// AsIamPrivilegeRelationship wraps this instance of MoMoRef in IamPrivilegeRelationship
func (s *MoMoRef) AsIamPrivilegeRelationship() IamPrivilegeRelationship {
	return IamPrivilegeRelationship{IamPrivilegeRelationshipInterface: s}
}

// AsIamPrivilegeSetRelationship wraps this instance of MoMoRef in IamPrivilegeSetRelationship
func (s *MoMoRef) AsIamPrivilegeSetRelationship() IamPrivilegeSetRelationship {
	return IamPrivilegeSetRelationship{IamPrivilegeSetRelationshipInterface: s}
}

// AsIamQualifierRelationship wraps this instance of MoMoRef in IamQualifierRelationship
func (s *MoMoRef) AsIamQualifierRelationship() IamQualifierRelationship {
	return IamQualifierRelationship{IamQualifierRelationshipInterface: s}
}

// AsIamResourceLimitsRelationship wraps this instance of MoMoRef in IamResourceLimitsRelationship
func (s *MoMoRef) AsIamResourceLimitsRelationship() IamResourceLimitsRelationship {
	return IamResourceLimitsRelationship{IamResourceLimitsRelationshipInterface: s}
}

// AsIamResourcePermissionRelationship wraps this instance of MoMoRef in IamResourcePermissionRelationship
func (s *MoMoRef) AsIamResourcePermissionRelationship() IamResourcePermissionRelationship {
	return IamResourcePermissionRelationship{IamResourcePermissionRelationshipInterface: s}
}

// AsIamResourceRolesRelationship wraps this instance of MoMoRef in IamResourceRolesRelationship
func (s *MoMoRef) AsIamResourceRolesRelationship() IamResourceRolesRelationship {
	return IamResourceRolesRelationship{IamResourceRolesRelationshipInterface: s}
}

// AsIamRoleRelationship wraps this instance of MoMoRef in IamRoleRelationship
func (s *MoMoRef) AsIamRoleRelationship() IamRoleRelationship {
	return IamRoleRelationship{IamRoleRelationshipInterface: s}
}

// AsIamSecurityHolderRelationship wraps this instance of MoMoRef in IamSecurityHolderRelationship
func (s *MoMoRef) AsIamSecurityHolderRelationship() IamSecurityHolderRelationship {
	return IamSecurityHolderRelationship{IamSecurityHolderRelationshipInterface: s}
}

// AsIamServiceProviderRelationship wraps this instance of MoMoRef in IamServiceProviderRelationship
func (s *MoMoRef) AsIamServiceProviderRelationship() IamServiceProviderRelationship {
	return IamServiceProviderRelationship{IamServiceProviderRelationshipInterface: s}
}

// AsIamSessionLimitsRelationship wraps this instance of MoMoRef in IamSessionLimitsRelationship
func (s *MoMoRef) AsIamSessionLimitsRelationship() IamSessionLimitsRelationship {
	return IamSessionLimitsRelationship{IamSessionLimitsRelationshipInterface: s}
}

// AsIamSessionRelationship wraps this instance of MoMoRef in IamSessionRelationship
func (s *MoMoRef) AsIamSessionRelationship() IamSessionRelationship {
	return IamSessionRelationship{IamSessionRelationshipInterface: s}
}

// AsIamSystemRelationship wraps this instance of MoMoRef in IamSystemRelationship
func (s *MoMoRef) AsIamSystemRelationship() IamSystemRelationship {
	return IamSystemRelationship{IamSystemRelationshipInterface: s}
}

// AsIamUserGroupRelationship wraps this instance of MoMoRef in IamUserGroupRelationship
func (s *MoMoRef) AsIamUserGroupRelationship() IamUserGroupRelationship {
	return IamUserGroupRelationship{IamUserGroupRelationshipInterface: s}
}

// AsIamUserPreferenceRelationship wraps this instance of MoMoRef in IamUserPreferenceRelationship
func (s *MoMoRef) AsIamUserPreferenceRelationship() IamUserPreferenceRelationship {
	return IamUserPreferenceRelationship{IamUserPreferenceRelationshipInterface: s}
}

// AsIamUserRelationship wraps this instance of MoMoRef in IamUserRelationship
func (s *MoMoRef) AsIamUserRelationship() IamUserRelationship {
	return IamUserRelationship{IamUserRelationshipInterface: s}
}

// AsInventoryBaseRelationship wraps this instance of MoMoRef in InventoryBaseRelationship
func (s *MoMoRef) AsInventoryBaseRelationship() InventoryBaseRelationship {
	return InventoryBaseRelationship{InventoryBaseRelationshipInterface: s}
}

// AsInventoryGenericInventoryHolderRelationship wraps this instance of MoMoRef in InventoryGenericInventoryHolderRelationship
func (s *MoMoRef) AsInventoryGenericInventoryHolderRelationship() InventoryGenericInventoryHolderRelationship {
	return InventoryGenericInventoryHolderRelationship{InventoryGenericInventoryHolderRelationshipInterface: s}
}

// AsInventoryGenericInventoryRelationship wraps this instance of MoMoRef in InventoryGenericInventoryRelationship
func (s *MoMoRef) AsInventoryGenericInventoryRelationship() InventoryGenericInventoryRelationship {
	return InventoryGenericInventoryRelationship{InventoryGenericInventoryRelationshipInterface: s}
}

// AsLicenseAccountLicenseDataRelationship wraps this instance of MoMoRef in LicenseAccountLicenseDataRelationship
func (s *MoMoRef) AsLicenseAccountLicenseDataRelationship() LicenseAccountLicenseDataRelationship {
	return LicenseAccountLicenseDataRelationship{LicenseAccountLicenseDataRelationshipInterface: s}
}

// AsLicenseCustomerOpRelationship wraps this instance of MoMoRef in LicenseCustomerOpRelationship
func (s *MoMoRef) AsLicenseCustomerOpRelationship() LicenseCustomerOpRelationship {
	return LicenseCustomerOpRelationship{LicenseCustomerOpRelationshipInterface: s}
}

// AsLicenseLicenseInfoRelationship wraps this instance of MoMoRef in LicenseLicenseInfoRelationship
func (s *MoMoRef) AsLicenseLicenseInfoRelationship() LicenseLicenseInfoRelationship {
	return LicenseLicenseInfoRelationship{LicenseLicenseInfoRelationshipInterface: s}
}

// AsLicenseSmartlicenseTokenRelationship wraps this instance of MoMoRef in LicenseSmartlicenseTokenRelationship
func (s *MoMoRef) AsLicenseSmartlicenseTokenRelationship() LicenseSmartlicenseTokenRelationship {
	return LicenseSmartlicenseTokenRelationship{LicenseSmartlicenseTokenRelationshipInterface: s}
}

// AsManagementControllerRelationship wraps this instance of MoMoRef in ManagementControllerRelationship
func (s *MoMoRef) AsManagementControllerRelationship() ManagementControllerRelationship {
	return ManagementControllerRelationship{ManagementControllerRelationshipInterface: s}
}

// AsManagementEntityRelationship wraps this instance of MoMoRef in ManagementEntityRelationship
func (s *MoMoRef) AsManagementEntityRelationship() ManagementEntityRelationship {
	return ManagementEntityRelationship{ManagementEntityRelationshipInterface: s}
}

// AsManagementInterfaceRelationship wraps this instance of MoMoRef in ManagementInterfaceRelationship
func (s *MoMoRef) AsManagementInterfaceRelationship() ManagementInterfaceRelationship {
	return ManagementInterfaceRelationship{ManagementInterfaceRelationshipInterface: s}
}

// AsMemoryArrayRelationship wraps this instance of MoMoRef in MemoryArrayRelationship
func (s *MoMoRef) AsMemoryArrayRelationship() MemoryArrayRelationship {
	return MemoryArrayRelationship{MemoryArrayRelationshipInterface: s}
}

// AsMemoryPersistentMemoryConfigResultRelationship wraps this instance of MoMoRef in MemoryPersistentMemoryConfigResultRelationship
func (s *MoMoRef) AsMemoryPersistentMemoryConfigResultRelationship() MemoryPersistentMemoryConfigResultRelationship {
	return MemoryPersistentMemoryConfigResultRelationship{MemoryPersistentMemoryConfigResultRelationshipInterface: s}
}

// AsMemoryPersistentMemoryConfigurationRelationship wraps this instance of MoMoRef in MemoryPersistentMemoryConfigurationRelationship
func (s *MoMoRef) AsMemoryPersistentMemoryConfigurationRelationship() MemoryPersistentMemoryConfigurationRelationship {
	return MemoryPersistentMemoryConfigurationRelationship{MemoryPersistentMemoryConfigurationRelationshipInterface: s}
}

// AsMemoryPersistentMemoryNamespaceConfigResultRelationship wraps this instance of MoMoRef in MemoryPersistentMemoryNamespaceConfigResultRelationship
func (s *MoMoRef) AsMemoryPersistentMemoryNamespaceConfigResultRelationship() MemoryPersistentMemoryNamespaceConfigResultRelationship {
	return MemoryPersistentMemoryNamespaceConfigResultRelationship{MemoryPersistentMemoryNamespaceConfigResultRelationshipInterface: s}
}

// AsMemoryPersistentMemoryNamespaceRelationship wraps this instance of MoMoRef in MemoryPersistentMemoryNamespaceRelationship
func (s *MoMoRef) AsMemoryPersistentMemoryNamespaceRelationship() MemoryPersistentMemoryNamespaceRelationship {
	return MemoryPersistentMemoryNamespaceRelationship{MemoryPersistentMemoryNamespaceRelationshipInterface: s}
}

// AsMemoryPersistentMemoryRegionRelationship wraps this instance of MoMoRef in MemoryPersistentMemoryRegionRelationship
func (s *MoMoRef) AsMemoryPersistentMemoryRegionRelationship() MemoryPersistentMemoryRegionRelationship {
	return MemoryPersistentMemoryRegionRelationship{MemoryPersistentMemoryRegionRelationshipInterface: s}
}

// AsMemoryPersistentMemoryUnitRelationship wraps this instance of MoMoRef in MemoryPersistentMemoryUnitRelationship
func (s *MoMoRef) AsMemoryPersistentMemoryUnitRelationship() MemoryPersistentMemoryUnitRelationship {
	return MemoryPersistentMemoryUnitRelationship{MemoryPersistentMemoryUnitRelationshipInterface: s}
}

// AsMemoryUnitRelationship wraps this instance of MoMoRef in MemoryUnitRelationship
func (s *MoMoRef) AsMemoryUnitRelationship() MemoryUnitRelationship {
	return MemoryUnitRelationship{MemoryUnitRelationshipInterface: s}
}

// AsMoBaseMoRelationship wraps this instance of MoMoRef in MoBaseMoRelationship
func (s *MoMoRef) AsMoBaseMoRelationship() MoBaseMoRelationship {
	return MoBaseMoRelationship{MoBaseMoRelationshipInterface: s}
}

// AsNetworkElementRelationship wraps this instance of MoMoRef in NetworkElementRelationship
func (s *MoMoRef) AsNetworkElementRelationship() NetworkElementRelationship {
	return NetworkElementRelationship{NetworkElementRelationshipInterface: s}
}

// AsNiatelemetryNiaInventoryRelationship wraps this instance of MoMoRef in NiatelemetryNiaInventoryRelationship
func (s *MoMoRef) AsNiatelemetryNiaInventoryRelationship() NiatelemetryNiaInventoryRelationship {
	return NiatelemetryNiaInventoryRelationship{NiatelemetryNiaInventoryRelationshipInterface: s}
}

// AsNiatelemetryNiaLicenseStateRelationship wraps this instance of MoMoRef in NiatelemetryNiaLicenseStateRelationship
func (s *MoMoRef) AsNiatelemetryNiaLicenseStateRelationship() NiatelemetryNiaLicenseStateRelationship {
	return NiatelemetryNiaLicenseStateRelationship{NiatelemetryNiaLicenseStateRelationshipInterface: s}
}

// AsOrganizationOrganizationRelationship wraps this instance of MoMoRef in OrganizationOrganizationRelationship
func (s *MoMoRef) AsOrganizationOrganizationRelationship() OrganizationOrganizationRelationship {
	return OrganizationOrganizationRelationship{OrganizationOrganizationRelationshipInterface: s}
}

// AsOsCatalogRelationship wraps this instance of MoMoRef in OsCatalogRelationship
func (s *MoMoRef) AsOsCatalogRelationship() OsCatalogRelationship {
	return OsCatalogRelationship{OsCatalogRelationshipInterface: s}
}

// AsOsConfigurationFileRelationship wraps this instance of MoMoRef in OsConfigurationFileRelationship
func (s *MoMoRef) AsOsConfigurationFileRelationship() OsConfigurationFileRelationship {
	return OsConfigurationFileRelationship{OsConfigurationFileRelationshipInterface: s}
}

// AsPciCoprocessorCardRelationship wraps this instance of MoMoRef in PciCoprocessorCardRelationship
func (s *MoMoRef) AsPciCoprocessorCardRelationship() PciCoprocessorCardRelationship {
	return PciCoprocessorCardRelationship{PciCoprocessorCardRelationshipInterface: s}
}

// AsPciDeviceRelationship wraps this instance of MoMoRef in PciDeviceRelationship
func (s *MoMoRef) AsPciDeviceRelationship() PciDeviceRelationship {
	return PciDeviceRelationship{PciDeviceRelationshipInterface: s}
}

// AsPciLinkRelationship wraps this instance of MoMoRef in PciLinkRelationship
func (s *MoMoRef) AsPciLinkRelationship() PciLinkRelationship {
	return PciLinkRelationship{PciLinkRelationshipInterface: s}
}

// AsPciSwitchRelationship wraps this instance of MoMoRef in PciSwitchRelationship
func (s *MoMoRef) AsPciSwitchRelationship() PciSwitchRelationship {
	return PciSwitchRelationship{PciSwitchRelationshipInterface: s}
}

// AsPolicyAbstractConfigProfileRelationship wraps this instance of MoMoRef in PolicyAbstractConfigProfileRelationship
func (s *MoMoRef) AsPolicyAbstractConfigProfileRelationship() PolicyAbstractConfigProfileRelationship {
	return PolicyAbstractConfigProfileRelationship{PolicyAbstractConfigProfileRelationshipInterface: s}
}

// AsPolicyAbstractProfileRelationship wraps this instance of MoMoRef in PolicyAbstractProfileRelationship
func (s *MoMoRef) AsPolicyAbstractProfileRelationship() PolicyAbstractProfileRelationship {
	return PolicyAbstractProfileRelationship{PolicyAbstractProfileRelationshipInterface: s}
}

// AsPortGroupRelationship wraps this instance of MoMoRef in PortGroupRelationship
func (s *MoMoRef) AsPortGroupRelationship() PortGroupRelationship {
	return PortGroupRelationship{PortGroupRelationshipInterface: s}
}

// AsPortSubGroupRelationship wraps this instance of MoMoRef in PortSubGroupRelationship
func (s *MoMoRef) AsPortSubGroupRelationship() PortSubGroupRelationship {
	return PortSubGroupRelationship{PortSubGroupRelationshipInterface: s}
}

// AsProcessorUnitRelationship wraps this instance of MoMoRef in ProcessorUnitRelationship
func (s *MoMoRef) AsProcessorUnitRelationship() ProcessorUnitRelationship {
	return ProcessorUnitRelationship{ProcessorUnitRelationshipInterface: s}
}

// AsRecoveryAbstractBackupInfoRelationship wraps this instance of MoMoRef in RecoveryAbstractBackupInfoRelationship
func (s *MoMoRef) AsRecoveryAbstractBackupInfoRelationship() RecoveryAbstractBackupInfoRelationship {
	return RecoveryAbstractBackupInfoRelationship{RecoveryAbstractBackupInfoRelationshipInterface: s}
}

// AsRecoveryBackupConfigPolicyRelationship wraps this instance of MoMoRef in RecoveryBackupConfigPolicyRelationship
func (s *MoMoRef) AsRecoveryBackupConfigPolicyRelationship() RecoveryBackupConfigPolicyRelationship {
	return RecoveryBackupConfigPolicyRelationship{RecoveryBackupConfigPolicyRelationshipInterface: s}
}

// AsRecoveryBackupProfileRelationship wraps this instance of MoMoRef in RecoveryBackupProfileRelationship
func (s *MoMoRef) AsRecoveryBackupProfileRelationship() RecoveryBackupProfileRelationship {
	return RecoveryBackupProfileRelationship{RecoveryBackupProfileRelationshipInterface: s}
}

// AsRecoveryConfigResultEntryRelationship wraps this instance of MoMoRef in RecoveryConfigResultEntryRelationship
func (s *MoMoRef) AsRecoveryConfigResultEntryRelationship() RecoveryConfigResultEntryRelationship {
	return RecoveryConfigResultEntryRelationship{RecoveryConfigResultEntryRelationshipInterface: s}
}

// AsRecoveryConfigResultRelationship wraps this instance of MoMoRef in RecoveryConfigResultRelationship
func (s *MoMoRef) AsRecoveryConfigResultRelationship() RecoveryConfigResultRelationship {
	return RecoveryConfigResultRelationship{RecoveryConfigResultRelationshipInterface: s}
}

// AsRecoveryOnDemandBackupRelationship wraps this instance of MoMoRef in RecoveryOnDemandBackupRelationship
func (s *MoMoRef) AsRecoveryOnDemandBackupRelationship() RecoveryOnDemandBackupRelationship {
	return RecoveryOnDemandBackupRelationship{RecoveryOnDemandBackupRelationshipInterface: s}
}

// AsRecoveryScheduleConfigPolicyRelationship wraps this instance of MoMoRef in RecoveryScheduleConfigPolicyRelationship
func (s *MoMoRef) AsRecoveryScheduleConfigPolicyRelationship() RecoveryScheduleConfigPolicyRelationship {
	return RecoveryScheduleConfigPolicyRelationship{RecoveryScheduleConfigPolicyRelationshipInterface: s}
}

// AsResourceGroupRelationship wraps this instance of MoMoRef in ResourceGroupRelationship
func (s *MoMoRef) AsResourceGroupRelationship() ResourceGroupRelationship {
	return ResourceGroupRelationship{ResourceGroupRelationshipInterface: s}
}

// AsResourceMembershipHolderRelationship wraps this instance of MoMoRef in ResourceMembershipHolderRelationship
func (s *MoMoRef) AsResourceMembershipHolderRelationship() ResourceMembershipHolderRelationship {
	return ResourceMembershipHolderRelationship{ResourceMembershipHolderRelationshipInterface: s}
}

// AsResourceMembershipRelationship wraps this instance of MoMoRef in ResourceMembershipRelationship
func (s *MoMoRef) AsResourceMembershipRelationship() ResourceMembershipRelationship {
	return ResourceMembershipRelationship{ResourceMembershipRelationshipInterface: s}
}

// AsSdwanProfileRelationship wraps this instance of MoMoRef in SdwanProfileRelationship
func (s *MoMoRef) AsSdwanProfileRelationship() SdwanProfileRelationship {
	return SdwanProfileRelationship{SdwanProfileRelationshipInterface: s}
}

// AsSdwanRouterNodeRelationship wraps this instance of MoMoRef in SdwanRouterNodeRelationship
func (s *MoMoRef) AsSdwanRouterNodeRelationship() SdwanRouterNodeRelationship {
	return SdwanRouterNodeRelationship{SdwanRouterNodeRelationshipInterface: s}
}

// AsSdwanRouterPolicyRelationship wraps this instance of MoMoRef in SdwanRouterPolicyRelationship
func (s *MoMoRef) AsSdwanRouterPolicyRelationship() SdwanRouterPolicyRelationship {
	return SdwanRouterPolicyRelationship{SdwanRouterPolicyRelationshipInterface: s}
}

// AsSdwanVmanageAccountPolicyRelationship wraps this instance of MoMoRef in SdwanVmanageAccountPolicyRelationship
func (s *MoMoRef) AsSdwanVmanageAccountPolicyRelationship() SdwanVmanageAccountPolicyRelationship {
	return SdwanVmanageAccountPolicyRelationship{SdwanVmanageAccountPolicyRelationshipInterface: s}
}

// AsSecurityUnitRelationship wraps this instance of MoMoRef in SecurityUnitRelationship
func (s *MoMoRef) AsSecurityUnitRelationship() SecurityUnitRelationship {
	return SecurityUnitRelationship{SecurityUnitRelationshipInterface: s}
}

// AsServerConfigChangeDetailRelationship wraps this instance of MoMoRef in ServerConfigChangeDetailRelationship
func (s *MoMoRef) AsServerConfigChangeDetailRelationship() ServerConfigChangeDetailRelationship {
	return ServerConfigChangeDetailRelationship{ServerConfigChangeDetailRelationshipInterface: s}
}

// AsServerConfigResultEntryRelationship wraps this instance of MoMoRef in ServerConfigResultEntryRelationship
func (s *MoMoRef) AsServerConfigResultEntryRelationship() ServerConfigResultEntryRelationship {
	return ServerConfigResultEntryRelationship{ServerConfigResultEntryRelationshipInterface: s}
}

// AsServerConfigResultRelationship wraps this instance of MoMoRef in ServerConfigResultRelationship
func (s *MoMoRef) AsServerConfigResultRelationship() ServerConfigResultRelationship {
	return ServerConfigResultRelationship{ServerConfigResultRelationshipInterface: s}
}

// AsServerProfileRelationship wraps this instance of MoMoRef in ServerProfileRelationship
func (s *MoMoRef) AsServerProfileRelationship() ServerProfileRelationship {
	return ServerProfileRelationship{ServerProfileRelationshipInterface: s}
}

// AsSoftwareHyperflexDistributableRelationship wraps this instance of MoMoRef in SoftwareHyperflexDistributableRelationship
func (s *MoMoRef) AsSoftwareHyperflexDistributableRelationship() SoftwareHyperflexDistributableRelationship {
	return SoftwareHyperflexDistributableRelationship{SoftwareHyperflexDistributableRelationshipInterface: s}
}

// AsSoftwareSolutionDistributableRelationship wraps this instance of MoMoRef in SoftwareSolutionDistributableRelationship
func (s *MoMoRef) AsSoftwareSolutionDistributableRelationship() SoftwareSolutionDistributableRelationship {
	return SoftwareSolutionDistributableRelationship{SoftwareSolutionDistributableRelationshipInterface: s}
}

// AsSoftwarerepositoryCatalogRelationship wraps this instance of MoMoRef in SoftwarerepositoryCatalogRelationship
func (s *MoMoRef) AsSoftwarerepositoryCatalogRelationship() SoftwarerepositoryCatalogRelationship {
	return SoftwarerepositoryCatalogRelationship{SoftwarerepositoryCatalogRelationshipInterface: s}
}

// AsSoftwarerepositoryOperatingSystemFileRelationship wraps this instance of MoMoRef in SoftwarerepositoryOperatingSystemFileRelationship
func (s *MoMoRef) AsSoftwarerepositoryOperatingSystemFileRelationship() SoftwarerepositoryOperatingSystemFileRelationship {
	return SoftwarerepositoryOperatingSystemFileRelationship{SoftwarerepositoryOperatingSystemFileRelationshipInterface: s}
}

// AsStorageArrayControllerRelationship wraps this instance of MoMoRef in StorageArrayControllerRelationship
func (s *MoMoRef) AsStorageArrayControllerRelationship() StorageArrayControllerRelationship {
	return StorageArrayControllerRelationship{StorageArrayControllerRelationshipInterface: s}
}

// AsStorageControllerRelationship wraps this instance of MoMoRef in StorageControllerRelationship
func (s *MoMoRef) AsStorageControllerRelationship() StorageControllerRelationship {
	return StorageControllerRelationship{StorageControllerRelationshipInterface: s}
}

// AsStorageDiskGroupPolicyRelationship wraps this instance of MoMoRef in StorageDiskGroupPolicyRelationship
func (s *MoMoRef) AsStorageDiskGroupPolicyRelationship() StorageDiskGroupPolicyRelationship {
	return StorageDiskGroupPolicyRelationship{StorageDiskGroupPolicyRelationshipInterface: s}
}

// AsStorageEnclosureDiskRelationship wraps this instance of MoMoRef in StorageEnclosureDiskRelationship
func (s *MoMoRef) AsStorageEnclosureDiskRelationship() StorageEnclosureDiskRelationship {
	return StorageEnclosureDiskRelationship{StorageEnclosureDiskRelationshipInterface: s}
}

// AsStorageEnclosureDiskSlotEpRelationship wraps this instance of MoMoRef in StorageEnclosureDiskSlotEpRelationship
func (s *MoMoRef) AsStorageEnclosureDiskSlotEpRelationship() StorageEnclosureDiskSlotEpRelationship {
	return StorageEnclosureDiskSlotEpRelationship{StorageEnclosureDiskSlotEpRelationshipInterface: s}
}

// AsStorageEnclosureRelationship wraps this instance of MoMoRef in StorageEnclosureRelationship
func (s *MoMoRef) AsStorageEnclosureRelationship() StorageEnclosureRelationship {
	return StorageEnclosureRelationship{StorageEnclosureRelationshipInterface: s}
}

// AsStorageFlexFlashControllerPropsRelationship wraps this instance of MoMoRef in StorageFlexFlashControllerPropsRelationship
func (s *MoMoRef) AsStorageFlexFlashControllerPropsRelationship() StorageFlexFlashControllerPropsRelationship {
	return StorageFlexFlashControllerPropsRelationship{StorageFlexFlashControllerPropsRelationshipInterface: s}
}

// AsStorageFlexFlashControllerRelationship wraps this instance of MoMoRef in StorageFlexFlashControllerRelationship
func (s *MoMoRef) AsStorageFlexFlashControllerRelationship() StorageFlexFlashControllerRelationship {
	return StorageFlexFlashControllerRelationship{StorageFlexFlashControllerRelationshipInterface: s}
}

// AsStorageFlexFlashPhysicalDriveRelationship wraps this instance of MoMoRef in StorageFlexFlashPhysicalDriveRelationship
func (s *MoMoRef) AsStorageFlexFlashPhysicalDriveRelationship() StorageFlexFlashPhysicalDriveRelationship {
	return StorageFlexFlashPhysicalDriveRelationship{StorageFlexFlashPhysicalDriveRelationshipInterface: s}
}

// AsStorageFlexFlashVirtualDriveRelationship wraps this instance of MoMoRef in StorageFlexFlashVirtualDriveRelationship
func (s *MoMoRef) AsStorageFlexFlashVirtualDriveRelationship() StorageFlexFlashVirtualDriveRelationship {
	return StorageFlexFlashVirtualDriveRelationship{StorageFlexFlashVirtualDriveRelationshipInterface: s}
}

// AsStorageFlexUtilControllerRelationship wraps this instance of MoMoRef in StorageFlexUtilControllerRelationship
func (s *MoMoRef) AsStorageFlexUtilControllerRelationship() StorageFlexUtilControllerRelationship {
	return StorageFlexUtilControllerRelationship{StorageFlexUtilControllerRelationshipInterface: s}
}

// AsStorageFlexUtilPhysicalDriveRelationship wraps this instance of MoMoRef in StorageFlexUtilPhysicalDriveRelationship
func (s *MoMoRef) AsStorageFlexUtilPhysicalDriveRelationship() StorageFlexUtilPhysicalDriveRelationship {
	return StorageFlexUtilPhysicalDriveRelationship{StorageFlexUtilPhysicalDriveRelationshipInterface: s}
}

// AsStorageFlexUtilVirtualDriveRelationship wraps this instance of MoMoRef in StorageFlexUtilVirtualDriveRelationship
func (s *MoMoRef) AsStorageFlexUtilVirtualDriveRelationship() StorageFlexUtilVirtualDriveRelationship {
	return StorageFlexUtilVirtualDriveRelationship{StorageFlexUtilVirtualDriveRelationshipInterface: s}
}

// AsStorageGenericArrayRelationship wraps this instance of MoMoRef in StorageGenericArrayRelationship
func (s *MoMoRef) AsStorageGenericArrayRelationship() StorageGenericArrayRelationship {
	return StorageGenericArrayRelationship{StorageGenericArrayRelationshipInterface: s}
}

// AsStorageHostRelationship wraps this instance of MoMoRef in StorageHostRelationship
func (s *MoMoRef) AsStorageHostRelationship() StorageHostRelationship {
	return StorageHostRelationship{StorageHostRelationshipInterface: s}
}

// AsStoragePhysicalDiskExtensionRelationship wraps this instance of MoMoRef in StoragePhysicalDiskExtensionRelationship
func (s *MoMoRef) AsStoragePhysicalDiskExtensionRelationship() StoragePhysicalDiskExtensionRelationship {
	return StoragePhysicalDiskExtensionRelationship{StoragePhysicalDiskExtensionRelationshipInterface: s}
}

// AsStoragePhysicalDiskRelationship wraps this instance of MoMoRef in StoragePhysicalDiskRelationship
func (s *MoMoRef) AsStoragePhysicalDiskRelationship() StoragePhysicalDiskRelationship {
	return StoragePhysicalDiskRelationship{StoragePhysicalDiskRelationshipInterface: s}
}

// AsStoragePhysicalDiskUsageRelationship wraps this instance of MoMoRef in StoragePhysicalDiskUsageRelationship
func (s *MoMoRef) AsStoragePhysicalDiskUsageRelationship() StoragePhysicalDiskUsageRelationship {
	return StoragePhysicalDiskUsageRelationship{StoragePhysicalDiskUsageRelationshipInterface: s}
}

// AsStorageProtectionGroupRelationship wraps this instance of MoMoRef in StorageProtectionGroupRelationship
func (s *MoMoRef) AsStorageProtectionGroupRelationship() StorageProtectionGroupRelationship {
	return StorageProtectionGroupRelationship{StorageProtectionGroupRelationshipInterface: s}
}

// AsStorageProtectionGroupSnapshotRelationship wraps this instance of MoMoRef in StorageProtectionGroupSnapshotRelationship
func (s *MoMoRef) AsStorageProtectionGroupSnapshotRelationship() StorageProtectionGroupSnapshotRelationship {
	return StorageProtectionGroupSnapshotRelationship{StorageProtectionGroupSnapshotRelationshipInterface: s}
}

// AsStoragePureHostGroupRelationship wraps this instance of MoMoRef in StoragePureHostGroupRelationship
func (s *MoMoRef) AsStoragePureHostGroupRelationship() StoragePureHostGroupRelationship {
	return StoragePureHostGroupRelationship{StoragePureHostGroupRelationshipInterface: s}
}

// AsStoragePureHostRelationship wraps this instance of MoMoRef in StoragePureHostRelationship
func (s *MoMoRef) AsStoragePureHostRelationship() StoragePureHostRelationship {
	return StoragePureHostRelationship{StoragePureHostRelationshipInterface: s}
}

// AsStoragePureProtectionGroupRelationship wraps this instance of MoMoRef in StoragePureProtectionGroupRelationship
func (s *MoMoRef) AsStoragePureProtectionGroupRelationship() StoragePureProtectionGroupRelationship {
	return StoragePureProtectionGroupRelationship{StoragePureProtectionGroupRelationshipInterface: s}
}

// AsStoragePureVolumeRelationship wraps this instance of MoMoRef in StoragePureVolumeRelationship
func (s *MoMoRef) AsStoragePureVolumeRelationship() StoragePureVolumeRelationship {
	return StoragePureVolumeRelationship{StoragePureVolumeRelationshipInterface: s}
}

// AsStorageSasExpanderRelationship wraps this instance of MoMoRef in StorageSasExpanderRelationship
func (s *MoMoRef) AsStorageSasExpanderRelationship() StorageSasExpanderRelationship {
	return StorageSasExpanderRelationship{StorageSasExpanderRelationshipInterface: s}
}

// AsStorageSasPortRelationship wraps this instance of MoMoRef in StorageSasPortRelationship
func (s *MoMoRef) AsStorageSasPortRelationship() StorageSasPortRelationship {
	return StorageSasPortRelationship{StorageSasPortRelationshipInterface: s}
}

// AsStorageStoragePolicyRelationship wraps this instance of MoMoRef in StorageStoragePolicyRelationship
func (s *MoMoRef) AsStorageStoragePolicyRelationship() StorageStoragePolicyRelationship {
	return StorageStoragePolicyRelationship{StorageStoragePolicyRelationshipInterface: s}
}

// AsStorageVdMemberEpRelationship wraps this instance of MoMoRef in StorageVdMemberEpRelationship
func (s *MoMoRef) AsStorageVdMemberEpRelationship() StorageVdMemberEpRelationship {
	return StorageVdMemberEpRelationship{StorageVdMemberEpRelationshipInterface: s}
}

// AsStorageVirtualDriveExtensionRelationship wraps this instance of MoMoRef in StorageVirtualDriveExtensionRelationship
func (s *MoMoRef) AsStorageVirtualDriveExtensionRelationship() StorageVirtualDriveExtensionRelationship {
	return StorageVirtualDriveExtensionRelationship{StorageVirtualDriveExtensionRelationshipInterface: s}
}

// AsStorageVirtualDriveRelationship wraps this instance of MoMoRef in StorageVirtualDriveRelationship
func (s *MoMoRef) AsStorageVirtualDriveRelationship() StorageVirtualDriveRelationship {
	return StorageVirtualDriveRelationship{StorageVirtualDriveRelationshipInterface: s}
}

// AsStorageVolumeRelationship wraps this instance of MoMoRef in StorageVolumeRelationship
func (s *MoMoRef) AsStorageVolumeRelationship() StorageVolumeRelationship {
	return StorageVolumeRelationship{StorageVolumeRelationshipInterface: s}
}

// AsTamAdvisoryRelationship wraps this instance of MoMoRef in TamAdvisoryRelationship
func (s *MoMoRef) AsTamAdvisoryRelationship() TamAdvisoryRelationship {
	return TamAdvisoryRelationship{TamAdvisoryRelationshipInterface: s}
}

// AsTopSystemRelationship wraps this instance of MoMoRef in TopSystemRelationship
func (s *MoMoRef) AsTopSystemRelationship() TopSystemRelationship {
	return TopSystemRelationship{TopSystemRelationshipInterface: s}
}

// AsVirtualizationVmwareClusterRelationship wraps this instance of MoMoRef in VirtualizationVmwareClusterRelationship
func (s *MoMoRef) AsVirtualizationVmwareClusterRelationship() VirtualizationVmwareClusterRelationship {
	return VirtualizationVmwareClusterRelationship{VirtualizationVmwareClusterRelationshipInterface: s}
}

// AsVirtualizationVmwareDatacenterRelationship wraps this instance of MoMoRef in VirtualizationVmwareDatacenterRelationship
func (s *MoMoRef) AsVirtualizationVmwareDatacenterRelationship() VirtualizationVmwareDatacenterRelationship {
	return VirtualizationVmwareDatacenterRelationship{VirtualizationVmwareDatacenterRelationshipInterface: s}
}

// AsVirtualizationVmwareDatastoreRelationship wraps this instance of MoMoRef in VirtualizationVmwareDatastoreRelationship
func (s *MoMoRef) AsVirtualizationVmwareDatastoreRelationship() VirtualizationVmwareDatastoreRelationship {
	return VirtualizationVmwareDatastoreRelationship{VirtualizationVmwareDatastoreRelationshipInterface: s}
}

// AsVirtualizationVmwareHostRelationship wraps this instance of MoMoRef in VirtualizationVmwareHostRelationship
func (s *MoMoRef) AsVirtualizationVmwareHostRelationship() VirtualizationVmwareHostRelationship {
	return VirtualizationVmwareHostRelationship{VirtualizationVmwareHostRelationshipInterface: s}
}

// AsVirtualizationVmwareVcenterRelationship wraps this instance of MoMoRef in VirtualizationVmwareVcenterRelationship
func (s *MoMoRef) AsVirtualizationVmwareVcenterRelationship() VirtualizationVmwareVcenterRelationship {
	return VirtualizationVmwareVcenterRelationship{VirtualizationVmwareVcenterRelationshipInterface: s}
}

// AsVnicEthAdapterPolicyRelationship wraps this instance of MoMoRef in VnicEthAdapterPolicyRelationship
func (s *MoMoRef) AsVnicEthAdapterPolicyRelationship() VnicEthAdapterPolicyRelationship {
	return VnicEthAdapterPolicyRelationship{VnicEthAdapterPolicyRelationshipInterface: s}
}

// AsVnicEthIfRelationship wraps this instance of MoMoRef in VnicEthIfRelationship
func (s *MoMoRef) AsVnicEthIfRelationship() VnicEthIfRelationship {
	return VnicEthIfRelationship{VnicEthIfRelationshipInterface: s}
}

// AsVnicEthNetworkPolicyRelationship wraps this instance of MoMoRef in VnicEthNetworkPolicyRelationship
func (s *MoMoRef) AsVnicEthNetworkPolicyRelationship() VnicEthNetworkPolicyRelationship {
	return VnicEthNetworkPolicyRelationship{VnicEthNetworkPolicyRelationshipInterface: s}
}

// AsVnicEthQosPolicyRelationship wraps this instance of MoMoRef in VnicEthQosPolicyRelationship
func (s *MoMoRef) AsVnicEthQosPolicyRelationship() VnicEthQosPolicyRelationship {
	return VnicEthQosPolicyRelationship{VnicEthQosPolicyRelationshipInterface: s}
}

// AsVnicFcAdapterPolicyRelationship wraps this instance of MoMoRef in VnicFcAdapterPolicyRelationship
func (s *MoMoRef) AsVnicFcAdapterPolicyRelationship() VnicFcAdapterPolicyRelationship {
	return VnicFcAdapterPolicyRelationship{VnicFcAdapterPolicyRelationshipInterface: s}
}

// AsVnicFcIfRelationship wraps this instance of MoMoRef in VnicFcIfRelationship
func (s *MoMoRef) AsVnicFcIfRelationship() VnicFcIfRelationship {
	return VnicFcIfRelationship{VnicFcIfRelationshipInterface: s}
}

// AsVnicFcNetworkPolicyRelationship wraps this instance of MoMoRef in VnicFcNetworkPolicyRelationship
func (s *MoMoRef) AsVnicFcNetworkPolicyRelationship() VnicFcNetworkPolicyRelationship {
	return VnicFcNetworkPolicyRelationship{VnicFcNetworkPolicyRelationshipInterface: s}
}

// AsVnicFcQosPolicyRelationship wraps this instance of MoMoRef in VnicFcQosPolicyRelationship
func (s *MoMoRef) AsVnicFcQosPolicyRelationship() VnicFcQosPolicyRelationship {
	return VnicFcQosPolicyRelationship{VnicFcQosPolicyRelationshipInterface: s}
}

// AsVnicLanConnectivityPolicyRelationship wraps this instance of MoMoRef in VnicLanConnectivityPolicyRelationship
func (s *MoMoRef) AsVnicLanConnectivityPolicyRelationship() VnicLanConnectivityPolicyRelationship {
	return VnicLanConnectivityPolicyRelationship{VnicLanConnectivityPolicyRelationshipInterface: s}
}

// AsVnicSanConnectivityPolicyRelationship wraps this instance of MoMoRef in VnicSanConnectivityPolicyRelationship
func (s *MoMoRef) AsVnicSanConnectivityPolicyRelationship() VnicSanConnectivityPolicyRelationship {
	return VnicSanConnectivityPolicyRelationship{VnicSanConnectivityPolicyRelationshipInterface: s}
}

// AsWorkflowCatalogRelationship wraps this instance of MoMoRef in WorkflowCatalogRelationship
func (s *MoMoRef) AsWorkflowCatalogRelationship() WorkflowCatalogRelationship {
	return WorkflowCatalogRelationship{WorkflowCatalogRelationshipInterface: s}
}

// AsWorkflowPendingDynamicWorkflowInfoRelationship wraps this instance of MoMoRef in WorkflowPendingDynamicWorkflowInfoRelationship
func (s *MoMoRef) AsWorkflowPendingDynamicWorkflowInfoRelationship() WorkflowPendingDynamicWorkflowInfoRelationship {
	return WorkflowPendingDynamicWorkflowInfoRelationship{WorkflowPendingDynamicWorkflowInfoRelationshipInterface: s}
}

// AsWorkflowTaskDefinitionRelationship wraps this instance of MoMoRef in WorkflowTaskDefinitionRelationship
func (s *MoMoRef) AsWorkflowTaskDefinitionRelationship() WorkflowTaskDefinitionRelationship {
	return WorkflowTaskDefinitionRelationship{WorkflowTaskDefinitionRelationshipInterface: s}
}

// AsWorkflowTaskInfoRelationship wraps this instance of MoMoRef in WorkflowTaskInfoRelationship
func (s *MoMoRef) AsWorkflowTaskInfoRelationship() WorkflowTaskInfoRelationship {
	return WorkflowTaskInfoRelationship{WorkflowTaskInfoRelationshipInterface: s}
}

// AsWorkflowWorkflowDefinitionRelationship wraps this instance of MoMoRef in WorkflowWorkflowDefinitionRelationship
func (s *MoMoRef) AsWorkflowWorkflowDefinitionRelationship() WorkflowWorkflowDefinitionRelationship {
	return WorkflowWorkflowDefinitionRelationship{WorkflowWorkflowDefinitionRelationshipInterface: s}
}

// AsWorkflowWorkflowInfoRelationship wraps this instance of MoMoRef in WorkflowWorkflowInfoRelationship
func (s *MoMoRef) AsWorkflowWorkflowInfoRelationship() WorkflowWorkflowInfoRelationship {
	return WorkflowWorkflowInfoRelationship{WorkflowWorkflowInfoRelationshipInterface: s}
}

type NullableMoMoRef struct {
	value *MoMoRef
	isSet bool
}

func (v NullableMoMoRef) Get() *MoMoRef {
	return v.value
}

func (v *NullableMoMoRef) Set(val *MoMoRef) {
	v.value = val
	v.isSet = true
}

func (v NullableMoMoRef) IsSet() bool {
	return v.isSet
}

func (v *NullableMoMoRef) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMoMoRef(val *MoMoRef) *NullableMoMoRef {
	return &NullableMoMoRef{value: val, isSet: true}
}

func (v NullableMoMoRef) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMoMoRef) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
