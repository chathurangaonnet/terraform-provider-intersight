/*
 * Cisco Intersight
 *
 * Cisco Intersight is a management platform delivered as a service with embedded analytics for your Cisco and 3rd party IT infrastructure. This platform offers an intelligent level of management that enables IT organizations to analyze, simplify, and automate their environments in more advanced ways than the prior generations of tools. Cisco Intersight provides an integrated and intuitive management experience for resources in the traditional data center as well as at the edge. With flexible deployment options to address complex security needs, getting started with Intersight is quick and easy. Cisco Intersight has deep integration with Cisco UCS and HyperFlex systems allowing for remote deployment, configuration, and ongoing maintenance. The model-based deployment works for a single system in a remote location or hundreds of systems in a data center and enables rapid, standardized configuration and deployment. It also streamlines maintaining those systems whether you are working with small or very large configurations. The Intersight OpenAPI document defines the complete set of properties that are returned in the HTTP response. From that perspective, a client can expect that no additional properties are returned, unless these properties are explicitly defined in the OpenAPI document. However, when a client uses an older version of the Intersight OpenAPI document, the server may send additional properties because the software is more recent than the client. In that case, the client may receive properties that it does not know about. Some generated SDKs perform a strict validation of the HTTP response body against the OpenAPI document. This document was created on 2020-04-12T21:47:47-07:00.
 *
 * API version: 1.0.9-1617
 * Contact: intersight@cisco.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package intersight

import (
	"encoding/json"
)

// NetworkElementSummaryAllOf Definition of the list of properties defined in 'network.ElementSummary', excluding properties defined in parent classes.
type NetworkElementSummaryAllOf struct {
	// The administrative state of the network Element inband management interface.
	AdminInbandInterfaceState *string `json:"AdminInbandInterfaceState,omitempty"`
	DeviceMoId                *string `json:"DeviceMoId,omitempty"`
	// The Distinguished Name unambiguously identifies an object in the system.
	Dn           *string `json:"Dn,omitempty"`
	FaultSummary *int64  `json:"FaultSummary,omitempty"`
	// Running firmware information.
	Firmware *string `json:"Firmware,omitempty"`
	// The IP address of the network Element inband management interface.
	InbandIpAddress *string `json:"InbandIpAddress,omitempty"`
	// The default gateway of the network Element inband management interface.
	InbandIpGateway *string `json:"InbandIpGateway,omitempty"`
	// The network mask of the network Element inband management interface.
	InbandIpMask *string `json:"InbandIpMask,omitempty"`
	// The VLAN ID of the network Element inband management interface.
	InbandVlan *int64 `json:"InbandVlan,omitempty"`
	// IP version 4 address is saved in this property.
	Ipv4Address *string `json:"Ipv4Address,omitempty"`
	// This field identifies the model of the given component.
	Model *string `json:"Model,omitempty"`
	// Name of the ElementSummary object is saved in this property.
	Name *string `json:"Name,omitempty"`
	// Total number of Ethernet ports.
	NumEtherPorts *int64 `json:"NumEtherPorts,omitempty"`
	// Total number of configured Ethernet ports.
	NumEtherPortsConfigured *int64 `json:"NumEtherPortsConfigured,omitempty"`
	// Total number of Ethernet ports which are UP.
	NumEtherPortsLinkUp *int64 `json:"NumEtherPortsLinkUp,omitempty"`
	// Total number of expansion modules.
	NumExpansionModules *int64 `json:"NumExpansionModules,omitempty"`
	// Total number of FC ports.
	NumFcPorts *int64 `json:"NumFcPorts,omitempty"`
	// Total number of configured FC ports.
	NumFcPortsConfigured *int64 `json:"NumFcPortsConfigured,omitempty"`
	// Total number of FC ports which are UP.
	NumFcPortsLinkUp *int64 `json:"NumFcPortsLinkUp,omitempty"`
	// The IP address of the network Element out-of-band management interface.
	OutOfBandIpAddress *string `json:"OutOfBandIpAddress,omitempty"`
	// The default gateway of the network Element out-of-band management interface.
	OutOfBandIpGateway *string `json:"OutOfBandIpGateway,omitempty"`
	// The network mask of the network Element out-of-band management interface.
	OutOfBandIpMask *string `json:"OutOfBandIpMask,omitempty"`
	// The IPv4 address of the network Element out-of-band management interface.
	OutOfBandIpv4Address *string `json:"OutOfBandIpv4Address,omitempty"`
	// The default IPv4 gateway of the network Element out-of-band management interface.
	OutOfBandIpv4Gateway *string `json:"OutOfBandIpv4Gateway,omitempty"`
	// The network mask of the network Element out-of-band management interface.
	OutOfBandIpv4Mask *string `json:"OutOfBandIpv4Mask,omitempty"`
	// The IPv6 address of the network Element out-of-band management interface.
	OutOfBandIpv6Address *string `json:"OutOfBandIpv6Address,omitempty"`
	// The default IPv6 gateway of the network Element out-of-band management interface.
	OutOfBandIpv6Gateway *string `json:"OutOfBandIpv6Gateway,omitempty"`
	// The network mask of the network Element out-of-band management interface.
	OutOfBandIpv6Prefix *string `json:"OutOfBandIpv6Prefix,omitempty"`
	// The MAC address of the network Element out-of-band management interface.
	OutOfBandMac *string `json:"OutOfBandMac,omitempty"`
	Revision     *string `json:"Revision,omitempty"`
	// The Relative Name uniquely identifies an object within a given context.
	Rn *string `json:"Rn,omitempty"`
	// This field identifies the serial of the given component.
	Serial *string `json:"Serial,omitempty"`
	// The source object type of this view MO.
	SourceObjectType *string `json:"SourceObjectType,omitempty"`
	// The Switch Id of the network Element.
	SwitchId *string `json:"SwitchId,omitempty"`
	// This field identifies the vendor of the given component.
	Vendor *string `json:"Vendor,omitempty"`
	// Version holds the firmware version related information.
	Version          *string                              `json:"Version,omitempty"`
	RegisteredDevice *AssetDeviceRegistrationRelationship `json:"RegisteredDevice,omitempty"`
}

// NewNetworkElementSummaryAllOf instantiates a new NetworkElementSummaryAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkElementSummaryAllOf() *NetworkElementSummaryAllOf {
	this := NetworkElementSummaryAllOf{}
	return &this
}

// NewNetworkElementSummaryAllOfWithDefaults instantiates a new NetworkElementSummaryAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkElementSummaryAllOfWithDefaults() *NetworkElementSummaryAllOf {
	this := NetworkElementSummaryAllOf{}
	return &this
}

// GetAdminInbandInterfaceState returns the AdminInbandInterfaceState field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetAdminInbandInterfaceState() string {
	if o == nil || o.AdminInbandInterfaceState == nil {
		var ret string
		return ret
	}
	return *o.AdminInbandInterfaceState
}

// GetAdminInbandInterfaceStateOk returns a tuple with the AdminInbandInterfaceState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetAdminInbandInterfaceStateOk() (*string, bool) {
	if o == nil || o.AdminInbandInterfaceState == nil {
		return nil, false
	}
	return o.AdminInbandInterfaceState, true
}

// HasAdminInbandInterfaceState returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasAdminInbandInterfaceState() bool {
	if o != nil && o.AdminInbandInterfaceState != nil {
		return true
	}

	return false
}

// SetAdminInbandInterfaceState gets a reference to the given string and assigns it to the AdminInbandInterfaceState field.
func (o *NetworkElementSummaryAllOf) SetAdminInbandInterfaceState(v string) {
	o.AdminInbandInterfaceState = &v
}

// GetDeviceMoId returns the DeviceMoId field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetDeviceMoId() string {
	if o == nil || o.DeviceMoId == nil {
		var ret string
		return ret
	}
	return *o.DeviceMoId
}

// GetDeviceMoIdOk returns a tuple with the DeviceMoId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetDeviceMoIdOk() (*string, bool) {
	if o == nil || o.DeviceMoId == nil {
		return nil, false
	}
	return o.DeviceMoId, true
}

// HasDeviceMoId returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasDeviceMoId() bool {
	if o != nil && o.DeviceMoId != nil {
		return true
	}

	return false
}

// SetDeviceMoId gets a reference to the given string and assigns it to the DeviceMoId field.
func (o *NetworkElementSummaryAllOf) SetDeviceMoId(v string) {
	o.DeviceMoId = &v
}

// GetDn returns the Dn field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetDn() string {
	if o == nil || o.Dn == nil {
		var ret string
		return ret
	}
	return *o.Dn
}

// GetDnOk returns a tuple with the Dn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetDnOk() (*string, bool) {
	if o == nil || o.Dn == nil {
		return nil, false
	}
	return o.Dn, true
}

// HasDn returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasDn() bool {
	if o != nil && o.Dn != nil {
		return true
	}

	return false
}

// SetDn gets a reference to the given string and assigns it to the Dn field.
func (o *NetworkElementSummaryAllOf) SetDn(v string) {
	o.Dn = &v
}

// GetFaultSummary returns the FaultSummary field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetFaultSummary() int64 {
	if o == nil || o.FaultSummary == nil {
		var ret int64
		return ret
	}
	return *o.FaultSummary
}

// GetFaultSummaryOk returns a tuple with the FaultSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetFaultSummaryOk() (*int64, bool) {
	if o == nil || o.FaultSummary == nil {
		return nil, false
	}
	return o.FaultSummary, true
}

// HasFaultSummary returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasFaultSummary() bool {
	if o != nil && o.FaultSummary != nil {
		return true
	}

	return false
}

// SetFaultSummary gets a reference to the given int64 and assigns it to the FaultSummary field.
func (o *NetworkElementSummaryAllOf) SetFaultSummary(v int64) {
	o.FaultSummary = &v
}

// GetFirmware returns the Firmware field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetFirmware() string {
	if o == nil || o.Firmware == nil {
		var ret string
		return ret
	}
	return *o.Firmware
}

// GetFirmwareOk returns a tuple with the Firmware field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetFirmwareOk() (*string, bool) {
	if o == nil || o.Firmware == nil {
		return nil, false
	}
	return o.Firmware, true
}

// HasFirmware returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasFirmware() bool {
	if o != nil && o.Firmware != nil {
		return true
	}

	return false
}

// SetFirmware gets a reference to the given string and assigns it to the Firmware field.
func (o *NetworkElementSummaryAllOf) SetFirmware(v string) {
	o.Firmware = &v
}

// GetInbandIpAddress returns the InbandIpAddress field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetInbandIpAddress() string {
	if o == nil || o.InbandIpAddress == nil {
		var ret string
		return ret
	}
	return *o.InbandIpAddress
}

// GetInbandIpAddressOk returns a tuple with the InbandIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetInbandIpAddressOk() (*string, bool) {
	if o == nil || o.InbandIpAddress == nil {
		return nil, false
	}
	return o.InbandIpAddress, true
}

// HasInbandIpAddress returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasInbandIpAddress() bool {
	if o != nil && o.InbandIpAddress != nil {
		return true
	}

	return false
}

// SetInbandIpAddress gets a reference to the given string and assigns it to the InbandIpAddress field.
func (o *NetworkElementSummaryAllOf) SetInbandIpAddress(v string) {
	o.InbandIpAddress = &v
}

// GetInbandIpGateway returns the InbandIpGateway field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetInbandIpGateway() string {
	if o == nil || o.InbandIpGateway == nil {
		var ret string
		return ret
	}
	return *o.InbandIpGateway
}

// GetInbandIpGatewayOk returns a tuple with the InbandIpGateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetInbandIpGatewayOk() (*string, bool) {
	if o == nil || o.InbandIpGateway == nil {
		return nil, false
	}
	return o.InbandIpGateway, true
}

// HasInbandIpGateway returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasInbandIpGateway() bool {
	if o != nil && o.InbandIpGateway != nil {
		return true
	}

	return false
}

// SetInbandIpGateway gets a reference to the given string and assigns it to the InbandIpGateway field.
func (o *NetworkElementSummaryAllOf) SetInbandIpGateway(v string) {
	o.InbandIpGateway = &v
}

// GetInbandIpMask returns the InbandIpMask field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetInbandIpMask() string {
	if o == nil || o.InbandIpMask == nil {
		var ret string
		return ret
	}
	return *o.InbandIpMask
}

// GetInbandIpMaskOk returns a tuple with the InbandIpMask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetInbandIpMaskOk() (*string, bool) {
	if o == nil || o.InbandIpMask == nil {
		return nil, false
	}
	return o.InbandIpMask, true
}

// HasInbandIpMask returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasInbandIpMask() bool {
	if o != nil && o.InbandIpMask != nil {
		return true
	}

	return false
}

// SetInbandIpMask gets a reference to the given string and assigns it to the InbandIpMask field.
func (o *NetworkElementSummaryAllOf) SetInbandIpMask(v string) {
	o.InbandIpMask = &v
}

// GetInbandVlan returns the InbandVlan field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetInbandVlan() int64 {
	if o == nil || o.InbandVlan == nil {
		var ret int64
		return ret
	}
	return *o.InbandVlan
}

// GetInbandVlanOk returns a tuple with the InbandVlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetInbandVlanOk() (*int64, bool) {
	if o == nil || o.InbandVlan == nil {
		return nil, false
	}
	return o.InbandVlan, true
}

// HasInbandVlan returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasInbandVlan() bool {
	if o != nil && o.InbandVlan != nil {
		return true
	}

	return false
}

// SetInbandVlan gets a reference to the given int64 and assigns it to the InbandVlan field.
func (o *NetworkElementSummaryAllOf) SetInbandVlan(v int64) {
	o.InbandVlan = &v
}

// GetIpv4Address returns the Ipv4Address field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetIpv4Address() string {
	if o == nil || o.Ipv4Address == nil {
		var ret string
		return ret
	}
	return *o.Ipv4Address
}

// GetIpv4AddressOk returns a tuple with the Ipv4Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetIpv4AddressOk() (*string, bool) {
	if o == nil || o.Ipv4Address == nil {
		return nil, false
	}
	return o.Ipv4Address, true
}

// HasIpv4Address returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasIpv4Address() bool {
	if o != nil && o.Ipv4Address != nil {
		return true
	}

	return false
}

// SetIpv4Address gets a reference to the given string and assigns it to the Ipv4Address field.
func (o *NetworkElementSummaryAllOf) SetIpv4Address(v string) {
	o.Ipv4Address = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetModel() string {
	if o == nil || o.Model == nil {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetModelOk() (*string, bool) {
	if o == nil || o.Model == nil {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasModel() bool {
	if o != nil && o.Model != nil {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *NetworkElementSummaryAllOf) SetModel(v string) {
	o.Model = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *NetworkElementSummaryAllOf) SetName(v string) {
	o.Name = &v
}

// GetNumEtherPorts returns the NumEtherPorts field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetNumEtherPorts() int64 {
	if o == nil || o.NumEtherPorts == nil {
		var ret int64
		return ret
	}
	return *o.NumEtherPorts
}

// GetNumEtherPortsOk returns a tuple with the NumEtherPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetNumEtherPortsOk() (*int64, bool) {
	if o == nil || o.NumEtherPorts == nil {
		return nil, false
	}
	return o.NumEtherPorts, true
}

// HasNumEtherPorts returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasNumEtherPorts() bool {
	if o != nil && o.NumEtherPorts != nil {
		return true
	}

	return false
}

// SetNumEtherPorts gets a reference to the given int64 and assigns it to the NumEtherPorts field.
func (o *NetworkElementSummaryAllOf) SetNumEtherPorts(v int64) {
	o.NumEtherPorts = &v
}

// GetNumEtherPortsConfigured returns the NumEtherPortsConfigured field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetNumEtherPortsConfigured() int64 {
	if o == nil || o.NumEtherPortsConfigured == nil {
		var ret int64
		return ret
	}
	return *o.NumEtherPortsConfigured
}

// GetNumEtherPortsConfiguredOk returns a tuple with the NumEtherPortsConfigured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetNumEtherPortsConfiguredOk() (*int64, bool) {
	if o == nil || o.NumEtherPortsConfigured == nil {
		return nil, false
	}
	return o.NumEtherPortsConfigured, true
}

// HasNumEtherPortsConfigured returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasNumEtherPortsConfigured() bool {
	if o != nil && o.NumEtherPortsConfigured != nil {
		return true
	}

	return false
}

// SetNumEtherPortsConfigured gets a reference to the given int64 and assigns it to the NumEtherPortsConfigured field.
func (o *NetworkElementSummaryAllOf) SetNumEtherPortsConfigured(v int64) {
	o.NumEtherPortsConfigured = &v
}

// GetNumEtherPortsLinkUp returns the NumEtherPortsLinkUp field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetNumEtherPortsLinkUp() int64 {
	if o == nil || o.NumEtherPortsLinkUp == nil {
		var ret int64
		return ret
	}
	return *o.NumEtherPortsLinkUp
}

// GetNumEtherPortsLinkUpOk returns a tuple with the NumEtherPortsLinkUp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetNumEtherPortsLinkUpOk() (*int64, bool) {
	if o == nil || o.NumEtherPortsLinkUp == nil {
		return nil, false
	}
	return o.NumEtherPortsLinkUp, true
}

// HasNumEtherPortsLinkUp returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasNumEtherPortsLinkUp() bool {
	if o != nil && o.NumEtherPortsLinkUp != nil {
		return true
	}

	return false
}

// SetNumEtherPortsLinkUp gets a reference to the given int64 and assigns it to the NumEtherPortsLinkUp field.
func (o *NetworkElementSummaryAllOf) SetNumEtherPortsLinkUp(v int64) {
	o.NumEtherPortsLinkUp = &v
}

// GetNumExpansionModules returns the NumExpansionModules field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetNumExpansionModules() int64 {
	if o == nil || o.NumExpansionModules == nil {
		var ret int64
		return ret
	}
	return *o.NumExpansionModules
}

// GetNumExpansionModulesOk returns a tuple with the NumExpansionModules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetNumExpansionModulesOk() (*int64, bool) {
	if o == nil || o.NumExpansionModules == nil {
		return nil, false
	}
	return o.NumExpansionModules, true
}

// HasNumExpansionModules returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasNumExpansionModules() bool {
	if o != nil && o.NumExpansionModules != nil {
		return true
	}

	return false
}

// SetNumExpansionModules gets a reference to the given int64 and assigns it to the NumExpansionModules field.
func (o *NetworkElementSummaryAllOf) SetNumExpansionModules(v int64) {
	o.NumExpansionModules = &v
}

// GetNumFcPorts returns the NumFcPorts field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetNumFcPorts() int64 {
	if o == nil || o.NumFcPorts == nil {
		var ret int64
		return ret
	}
	return *o.NumFcPorts
}

// GetNumFcPortsOk returns a tuple with the NumFcPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetNumFcPortsOk() (*int64, bool) {
	if o == nil || o.NumFcPorts == nil {
		return nil, false
	}
	return o.NumFcPorts, true
}

// HasNumFcPorts returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasNumFcPorts() bool {
	if o != nil && o.NumFcPorts != nil {
		return true
	}

	return false
}

// SetNumFcPorts gets a reference to the given int64 and assigns it to the NumFcPorts field.
func (o *NetworkElementSummaryAllOf) SetNumFcPorts(v int64) {
	o.NumFcPorts = &v
}

// GetNumFcPortsConfigured returns the NumFcPortsConfigured field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetNumFcPortsConfigured() int64 {
	if o == nil || o.NumFcPortsConfigured == nil {
		var ret int64
		return ret
	}
	return *o.NumFcPortsConfigured
}

// GetNumFcPortsConfiguredOk returns a tuple with the NumFcPortsConfigured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetNumFcPortsConfiguredOk() (*int64, bool) {
	if o == nil || o.NumFcPortsConfigured == nil {
		return nil, false
	}
	return o.NumFcPortsConfigured, true
}

// HasNumFcPortsConfigured returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasNumFcPortsConfigured() bool {
	if o != nil && o.NumFcPortsConfigured != nil {
		return true
	}

	return false
}

// SetNumFcPortsConfigured gets a reference to the given int64 and assigns it to the NumFcPortsConfigured field.
func (o *NetworkElementSummaryAllOf) SetNumFcPortsConfigured(v int64) {
	o.NumFcPortsConfigured = &v
}

// GetNumFcPortsLinkUp returns the NumFcPortsLinkUp field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetNumFcPortsLinkUp() int64 {
	if o == nil || o.NumFcPortsLinkUp == nil {
		var ret int64
		return ret
	}
	return *o.NumFcPortsLinkUp
}

// GetNumFcPortsLinkUpOk returns a tuple with the NumFcPortsLinkUp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetNumFcPortsLinkUpOk() (*int64, bool) {
	if o == nil || o.NumFcPortsLinkUp == nil {
		return nil, false
	}
	return o.NumFcPortsLinkUp, true
}

// HasNumFcPortsLinkUp returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasNumFcPortsLinkUp() bool {
	if o != nil && o.NumFcPortsLinkUp != nil {
		return true
	}

	return false
}

// SetNumFcPortsLinkUp gets a reference to the given int64 and assigns it to the NumFcPortsLinkUp field.
func (o *NetworkElementSummaryAllOf) SetNumFcPortsLinkUp(v int64) {
	o.NumFcPortsLinkUp = &v
}

// GetOutOfBandIpAddress returns the OutOfBandIpAddress field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetOutOfBandIpAddress() string {
	if o == nil || o.OutOfBandIpAddress == nil {
		var ret string
		return ret
	}
	return *o.OutOfBandIpAddress
}

// GetOutOfBandIpAddressOk returns a tuple with the OutOfBandIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetOutOfBandIpAddressOk() (*string, bool) {
	if o == nil || o.OutOfBandIpAddress == nil {
		return nil, false
	}
	return o.OutOfBandIpAddress, true
}

// HasOutOfBandIpAddress returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasOutOfBandIpAddress() bool {
	if o != nil && o.OutOfBandIpAddress != nil {
		return true
	}

	return false
}

// SetOutOfBandIpAddress gets a reference to the given string and assigns it to the OutOfBandIpAddress field.
func (o *NetworkElementSummaryAllOf) SetOutOfBandIpAddress(v string) {
	o.OutOfBandIpAddress = &v
}

// GetOutOfBandIpGateway returns the OutOfBandIpGateway field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetOutOfBandIpGateway() string {
	if o == nil || o.OutOfBandIpGateway == nil {
		var ret string
		return ret
	}
	return *o.OutOfBandIpGateway
}

// GetOutOfBandIpGatewayOk returns a tuple with the OutOfBandIpGateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetOutOfBandIpGatewayOk() (*string, bool) {
	if o == nil || o.OutOfBandIpGateway == nil {
		return nil, false
	}
	return o.OutOfBandIpGateway, true
}

// HasOutOfBandIpGateway returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasOutOfBandIpGateway() bool {
	if o != nil && o.OutOfBandIpGateway != nil {
		return true
	}

	return false
}

// SetOutOfBandIpGateway gets a reference to the given string and assigns it to the OutOfBandIpGateway field.
func (o *NetworkElementSummaryAllOf) SetOutOfBandIpGateway(v string) {
	o.OutOfBandIpGateway = &v
}

// GetOutOfBandIpMask returns the OutOfBandIpMask field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetOutOfBandIpMask() string {
	if o == nil || o.OutOfBandIpMask == nil {
		var ret string
		return ret
	}
	return *o.OutOfBandIpMask
}

// GetOutOfBandIpMaskOk returns a tuple with the OutOfBandIpMask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetOutOfBandIpMaskOk() (*string, bool) {
	if o == nil || o.OutOfBandIpMask == nil {
		return nil, false
	}
	return o.OutOfBandIpMask, true
}

// HasOutOfBandIpMask returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasOutOfBandIpMask() bool {
	if o != nil && o.OutOfBandIpMask != nil {
		return true
	}

	return false
}

// SetOutOfBandIpMask gets a reference to the given string and assigns it to the OutOfBandIpMask field.
func (o *NetworkElementSummaryAllOf) SetOutOfBandIpMask(v string) {
	o.OutOfBandIpMask = &v
}

// GetOutOfBandIpv4Address returns the OutOfBandIpv4Address field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetOutOfBandIpv4Address() string {
	if o == nil || o.OutOfBandIpv4Address == nil {
		var ret string
		return ret
	}
	return *o.OutOfBandIpv4Address
}

// GetOutOfBandIpv4AddressOk returns a tuple with the OutOfBandIpv4Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetOutOfBandIpv4AddressOk() (*string, bool) {
	if o == nil || o.OutOfBandIpv4Address == nil {
		return nil, false
	}
	return o.OutOfBandIpv4Address, true
}

// HasOutOfBandIpv4Address returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasOutOfBandIpv4Address() bool {
	if o != nil && o.OutOfBandIpv4Address != nil {
		return true
	}

	return false
}

// SetOutOfBandIpv4Address gets a reference to the given string and assigns it to the OutOfBandIpv4Address field.
func (o *NetworkElementSummaryAllOf) SetOutOfBandIpv4Address(v string) {
	o.OutOfBandIpv4Address = &v
}

// GetOutOfBandIpv4Gateway returns the OutOfBandIpv4Gateway field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetOutOfBandIpv4Gateway() string {
	if o == nil || o.OutOfBandIpv4Gateway == nil {
		var ret string
		return ret
	}
	return *o.OutOfBandIpv4Gateway
}

// GetOutOfBandIpv4GatewayOk returns a tuple with the OutOfBandIpv4Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetOutOfBandIpv4GatewayOk() (*string, bool) {
	if o == nil || o.OutOfBandIpv4Gateway == nil {
		return nil, false
	}
	return o.OutOfBandIpv4Gateway, true
}

// HasOutOfBandIpv4Gateway returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasOutOfBandIpv4Gateway() bool {
	if o != nil && o.OutOfBandIpv4Gateway != nil {
		return true
	}

	return false
}

// SetOutOfBandIpv4Gateway gets a reference to the given string and assigns it to the OutOfBandIpv4Gateway field.
func (o *NetworkElementSummaryAllOf) SetOutOfBandIpv4Gateway(v string) {
	o.OutOfBandIpv4Gateway = &v
}

// GetOutOfBandIpv4Mask returns the OutOfBandIpv4Mask field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetOutOfBandIpv4Mask() string {
	if o == nil || o.OutOfBandIpv4Mask == nil {
		var ret string
		return ret
	}
	return *o.OutOfBandIpv4Mask
}

// GetOutOfBandIpv4MaskOk returns a tuple with the OutOfBandIpv4Mask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetOutOfBandIpv4MaskOk() (*string, bool) {
	if o == nil || o.OutOfBandIpv4Mask == nil {
		return nil, false
	}
	return o.OutOfBandIpv4Mask, true
}

// HasOutOfBandIpv4Mask returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasOutOfBandIpv4Mask() bool {
	if o != nil && o.OutOfBandIpv4Mask != nil {
		return true
	}

	return false
}

// SetOutOfBandIpv4Mask gets a reference to the given string and assigns it to the OutOfBandIpv4Mask field.
func (o *NetworkElementSummaryAllOf) SetOutOfBandIpv4Mask(v string) {
	o.OutOfBandIpv4Mask = &v
}

// GetOutOfBandIpv6Address returns the OutOfBandIpv6Address field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetOutOfBandIpv6Address() string {
	if o == nil || o.OutOfBandIpv6Address == nil {
		var ret string
		return ret
	}
	return *o.OutOfBandIpv6Address
}

// GetOutOfBandIpv6AddressOk returns a tuple with the OutOfBandIpv6Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetOutOfBandIpv6AddressOk() (*string, bool) {
	if o == nil || o.OutOfBandIpv6Address == nil {
		return nil, false
	}
	return o.OutOfBandIpv6Address, true
}

// HasOutOfBandIpv6Address returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasOutOfBandIpv6Address() bool {
	if o != nil && o.OutOfBandIpv6Address != nil {
		return true
	}

	return false
}

// SetOutOfBandIpv6Address gets a reference to the given string and assigns it to the OutOfBandIpv6Address field.
func (o *NetworkElementSummaryAllOf) SetOutOfBandIpv6Address(v string) {
	o.OutOfBandIpv6Address = &v
}

// GetOutOfBandIpv6Gateway returns the OutOfBandIpv6Gateway field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetOutOfBandIpv6Gateway() string {
	if o == nil || o.OutOfBandIpv6Gateway == nil {
		var ret string
		return ret
	}
	return *o.OutOfBandIpv6Gateway
}

// GetOutOfBandIpv6GatewayOk returns a tuple with the OutOfBandIpv6Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetOutOfBandIpv6GatewayOk() (*string, bool) {
	if o == nil || o.OutOfBandIpv6Gateway == nil {
		return nil, false
	}
	return o.OutOfBandIpv6Gateway, true
}

// HasOutOfBandIpv6Gateway returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasOutOfBandIpv6Gateway() bool {
	if o != nil && o.OutOfBandIpv6Gateway != nil {
		return true
	}

	return false
}

// SetOutOfBandIpv6Gateway gets a reference to the given string and assigns it to the OutOfBandIpv6Gateway field.
func (o *NetworkElementSummaryAllOf) SetOutOfBandIpv6Gateway(v string) {
	o.OutOfBandIpv6Gateway = &v
}

// GetOutOfBandIpv6Prefix returns the OutOfBandIpv6Prefix field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetOutOfBandIpv6Prefix() string {
	if o == nil || o.OutOfBandIpv6Prefix == nil {
		var ret string
		return ret
	}
	return *o.OutOfBandIpv6Prefix
}

// GetOutOfBandIpv6PrefixOk returns a tuple with the OutOfBandIpv6Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetOutOfBandIpv6PrefixOk() (*string, bool) {
	if o == nil || o.OutOfBandIpv6Prefix == nil {
		return nil, false
	}
	return o.OutOfBandIpv6Prefix, true
}

// HasOutOfBandIpv6Prefix returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasOutOfBandIpv6Prefix() bool {
	if o != nil && o.OutOfBandIpv6Prefix != nil {
		return true
	}

	return false
}

// SetOutOfBandIpv6Prefix gets a reference to the given string and assigns it to the OutOfBandIpv6Prefix field.
func (o *NetworkElementSummaryAllOf) SetOutOfBandIpv6Prefix(v string) {
	o.OutOfBandIpv6Prefix = &v
}

// GetOutOfBandMac returns the OutOfBandMac field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetOutOfBandMac() string {
	if o == nil || o.OutOfBandMac == nil {
		var ret string
		return ret
	}
	return *o.OutOfBandMac
}

// GetOutOfBandMacOk returns a tuple with the OutOfBandMac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetOutOfBandMacOk() (*string, bool) {
	if o == nil || o.OutOfBandMac == nil {
		return nil, false
	}
	return o.OutOfBandMac, true
}

// HasOutOfBandMac returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasOutOfBandMac() bool {
	if o != nil && o.OutOfBandMac != nil {
		return true
	}

	return false
}

// SetOutOfBandMac gets a reference to the given string and assigns it to the OutOfBandMac field.
func (o *NetworkElementSummaryAllOf) SetOutOfBandMac(v string) {
	o.OutOfBandMac = &v
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetRevision() string {
	if o == nil || o.Revision == nil {
		var ret string
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetRevisionOk() (*string, bool) {
	if o == nil || o.Revision == nil {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasRevision() bool {
	if o != nil && o.Revision != nil {
		return true
	}

	return false
}

// SetRevision gets a reference to the given string and assigns it to the Revision field.
func (o *NetworkElementSummaryAllOf) SetRevision(v string) {
	o.Revision = &v
}

// GetRn returns the Rn field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetRn() string {
	if o == nil || o.Rn == nil {
		var ret string
		return ret
	}
	return *o.Rn
}

// GetRnOk returns a tuple with the Rn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetRnOk() (*string, bool) {
	if o == nil || o.Rn == nil {
		return nil, false
	}
	return o.Rn, true
}

// HasRn returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasRn() bool {
	if o != nil && o.Rn != nil {
		return true
	}

	return false
}

// SetRn gets a reference to the given string and assigns it to the Rn field.
func (o *NetworkElementSummaryAllOf) SetRn(v string) {
	o.Rn = &v
}

// GetSerial returns the Serial field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetSerial() string {
	if o == nil || o.Serial == nil {
		var ret string
		return ret
	}
	return *o.Serial
}

// GetSerialOk returns a tuple with the Serial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetSerialOk() (*string, bool) {
	if o == nil || o.Serial == nil {
		return nil, false
	}
	return o.Serial, true
}

// HasSerial returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasSerial() bool {
	if o != nil && o.Serial != nil {
		return true
	}

	return false
}

// SetSerial gets a reference to the given string and assigns it to the Serial field.
func (o *NetworkElementSummaryAllOf) SetSerial(v string) {
	o.Serial = &v
}

// GetSourceObjectType returns the SourceObjectType field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetSourceObjectType() string {
	if o == nil || o.SourceObjectType == nil {
		var ret string
		return ret
	}
	return *o.SourceObjectType
}

// GetSourceObjectTypeOk returns a tuple with the SourceObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetSourceObjectTypeOk() (*string, bool) {
	if o == nil || o.SourceObjectType == nil {
		return nil, false
	}
	return o.SourceObjectType, true
}

// HasSourceObjectType returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasSourceObjectType() bool {
	if o != nil && o.SourceObjectType != nil {
		return true
	}

	return false
}

// SetSourceObjectType gets a reference to the given string and assigns it to the SourceObjectType field.
func (o *NetworkElementSummaryAllOf) SetSourceObjectType(v string) {
	o.SourceObjectType = &v
}

// GetSwitchId returns the SwitchId field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetSwitchId() string {
	if o == nil || o.SwitchId == nil {
		var ret string
		return ret
	}
	return *o.SwitchId
}

// GetSwitchIdOk returns a tuple with the SwitchId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetSwitchIdOk() (*string, bool) {
	if o == nil || o.SwitchId == nil {
		return nil, false
	}
	return o.SwitchId, true
}

// HasSwitchId returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasSwitchId() bool {
	if o != nil && o.SwitchId != nil {
		return true
	}

	return false
}

// SetSwitchId gets a reference to the given string and assigns it to the SwitchId field.
func (o *NetworkElementSummaryAllOf) SetSwitchId(v string) {
	o.SwitchId = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetVendor() string {
	if o == nil || o.Vendor == nil {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetVendorOk() (*string, bool) {
	if o == nil || o.Vendor == nil {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasVendor() bool {
	if o != nil && o.Vendor != nil {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *NetworkElementSummaryAllOf) SetVendor(v string) {
	o.Vendor = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *NetworkElementSummaryAllOf) SetVersion(v string) {
	o.Version = &v
}

// GetRegisteredDevice returns the RegisteredDevice field value if set, zero value otherwise.
func (o *NetworkElementSummaryAllOf) GetRegisteredDevice() AssetDeviceRegistrationRelationship {
	if o == nil || o.RegisteredDevice == nil {
		var ret AssetDeviceRegistrationRelationship
		return ret
	}
	return *o.RegisteredDevice
}

// GetRegisteredDeviceOk returns a tuple with the RegisteredDevice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkElementSummaryAllOf) GetRegisteredDeviceOk() (*AssetDeviceRegistrationRelationship, bool) {
	if o == nil || o.RegisteredDevice == nil {
		return nil, false
	}
	return o.RegisteredDevice, true
}

// HasRegisteredDevice returns a boolean if a field has been set.
func (o *NetworkElementSummaryAllOf) HasRegisteredDevice() bool {
	if o != nil && o.RegisteredDevice != nil {
		return true
	}

	return false
}

// SetRegisteredDevice gets a reference to the given AssetDeviceRegistrationRelationship and assigns it to the RegisteredDevice field.
func (o *NetworkElementSummaryAllOf) SetRegisteredDevice(v AssetDeviceRegistrationRelationship) {
	o.RegisteredDevice = &v
}

func (o NetworkElementSummaryAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdminInbandInterfaceState != nil {
		toSerialize["AdminInbandInterfaceState"] = o.AdminInbandInterfaceState
	}
	if o.DeviceMoId != nil {
		toSerialize["DeviceMoId"] = o.DeviceMoId
	}
	if o.Dn != nil {
		toSerialize["Dn"] = o.Dn
	}
	if o.FaultSummary != nil {
		toSerialize["FaultSummary"] = o.FaultSummary
	}
	if o.Firmware != nil {
		toSerialize["Firmware"] = o.Firmware
	}
	if o.InbandIpAddress != nil {
		toSerialize["InbandIpAddress"] = o.InbandIpAddress
	}
	if o.InbandIpGateway != nil {
		toSerialize["InbandIpGateway"] = o.InbandIpGateway
	}
	if o.InbandIpMask != nil {
		toSerialize["InbandIpMask"] = o.InbandIpMask
	}
	if o.InbandVlan != nil {
		toSerialize["InbandVlan"] = o.InbandVlan
	}
	if o.Ipv4Address != nil {
		toSerialize["Ipv4Address"] = o.Ipv4Address
	}
	if o.Model != nil {
		toSerialize["Model"] = o.Model
	}
	if o.Name != nil {
		toSerialize["Name"] = o.Name
	}
	if o.NumEtherPorts != nil {
		toSerialize["NumEtherPorts"] = o.NumEtherPorts
	}
	if o.NumEtherPortsConfigured != nil {
		toSerialize["NumEtherPortsConfigured"] = o.NumEtherPortsConfigured
	}
	if o.NumEtherPortsLinkUp != nil {
		toSerialize["NumEtherPortsLinkUp"] = o.NumEtherPortsLinkUp
	}
	if o.NumExpansionModules != nil {
		toSerialize["NumExpansionModules"] = o.NumExpansionModules
	}
	if o.NumFcPorts != nil {
		toSerialize["NumFcPorts"] = o.NumFcPorts
	}
	if o.NumFcPortsConfigured != nil {
		toSerialize["NumFcPortsConfigured"] = o.NumFcPortsConfigured
	}
	if o.NumFcPortsLinkUp != nil {
		toSerialize["NumFcPortsLinkUp"] = o.NumFcPortsLinkUp
	}
	if o.OutOfBandIpAddress != nil {
		toSerialize["OutOfBandIpAddress"] = o.OutOfBandIpAddress
	}
	if o.OutOfBandIpGateway != nil {
		toSerialize["OutOfBandIpGateway"] = o.OutOfBandIpGateway
	}
	if o.OutOfBandIpMask != nil {
		toSerialize["OutOfBandIpMask"] = o.OutOfBandIpMask
	}
	if o.OutOfBandIpv4Address != nil {
		toSerialize["OutOfBandIpv4Address"] = o.OutOfBandIpv4Address
	}
	if o.OutOfBandIpv4Gateway != nil {
		toSerialize["OutOfBandIpv4Gateway"] = o.OutOfBandIpv4Gateway
	}
	if o.OutOfBandIpv4Mask != nil {
		toSerialize["OutOfBandIpv4Mask"] = o.OutOfBandIpv4Mask
	}
	if o.OutOfBandIpv6Address != nil {
		toSerialize["OutOfBandIpv6Address"] = o.OutOfBandIpv6Address
	}
	if o.OutOfBandIpv6Gateway != nil {
		toSerialize["OutOfBandIpv6Gateway"] = o.OutOfBandIpv6Gateway
	}
	if o.OutOfBandIpv6Prefix != nil {
		toSerialize["OutOfBandIpv6Prefix"] = o.OutOfBandIpv6Prefix
	}
	if o.OutOfBandMac != nil {
		toSerialize["OutOfBandMac"] = o.OutOfBandMac
	}
	if o.Revision != nil {
		toSerialize["Revision"] = o.Revision
	}
	if o.Rn != nil {
		toSerialize["Rn"] = o.Rn
	}
	if o.Serial != nil {
		toSerialize["Serial"] = o.Serial
	}
	if o.SourceObjectType != nil {
		toSerialize["SourceObjectType"] = o.SourceObjectType
	}
	if o.SwitchId != nil {
		toSerialize["SwitchId"] = o.SwitchId
	}
	if o.Vendor != nil {
		toSerialize["Vendor"] = o.Vendor
	}
	if o.Version != nil {
		toSerialize["Version"] = o.Version
	}
	if o.RegisteredDevice != nil {
		toSerialize["RegisteredDevice"] = o.RegisteredDevice
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkElementSummaryAllOf struct {
	value *NetworkElementSummaryAllOf
	isSet bool
}

func (v NullableNetworkElementSummaryAllOf) Get() *NetworkElementSummaryAllOf {
	return v.value
}

func (v *NullableNetworkElementSummaryAllOf) Set(val *NetworkElementSummaryAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkElementSummaryAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkElementSummaryAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkElementSummaryAllOf(val *NetworkElementSummaryAllOf) *NullableNetworkElementSummaryAllOf {
	return &NullableNetworkElementSummaryAllOf{value: val, isSet: true}
}

func (v NullableNetworkElementSummaryAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkElementSummaryAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
