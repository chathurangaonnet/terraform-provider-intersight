/*
 * Cisco Intersight
 *
 * Cisco Intersight is a management platform delivered as a service with embedded analytics for your Cisco and 3rd party IT infrastructure. This platform offers an intelligent level of management that enables IT organizations to analyze, simplify, and automate their environments in more advanced ways than the prior generations of tools. Cisco Intersight provides an integrated and intuitive management experience for resources in the traditional data center as well as at the edge. With flexible deployment options to address complex security needs, getting started with Intersight is quick and easy. Cisco Intersight has deep integration with Cisco UCS and HyperFlex systems allowing for remote deployment, configuration, and ongoing maintenance. The model-based deployment works for a single system in a remote location or hundreds of systems in a data center and enables rapid, standardized configuration and deployment. It also streamlines maintaining those systems whether you are working with small or very large configurations. The Intersight OpenAPI document defines the complete set of properties that are returned in the HTTP response. From that perspective, a client can expect that no additional properties are returned, unless these properties are explicitly defined in the OpenAPI document. However, when a client uses an older version of the Intersight OpenAPI document, the server may send additional properties because the software is more recent than the client. In that case, the client may receive properties that it does not know about. Some generated SDKs perform a strict validation of the HTTP response body against the OpenAPI document. This document was created on 2020-04-12T21:47:47-07:00.
 *
 * API version: 1.0.9-1617
 * Contact: intersight@cisco.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package intersight

import (
	"encoding/json"
)

// ComputePhysicalSummary Consolidated view of Blades and RackUnits.
type ComputePhysicalSummary struct {
	ViewsView
	// Desired power state of the server.
	AdminPowerState *string `json:"AdminPowerState,omitempty"`
	AssetTag        *string `json:"AssetTag,omitempty"`
	// The actual amount of memory currently available to the server.
	AvailableMemory *int64 `json:"AvailableMemory,omitempty"`
	// The id of the chassis that the blade is located in.
	ChassisId *string `json:"ChassisId,omitempty"`
	// CPU Capacity = Number of CPU Sockets x Enabled Cores x Speed (GHz).
	CpuCapacity *float32 `json:"CpuCapacity,omitempty"`
	DeviceMoId  *string  `json:"DeviceMoId,omitempty"`
	// The Distinguished Name unambiguously identifies an object in the system.
	Dn           *string `json:"Dn,omitempty"`
	FaultSummary *int64  `json:"FaultSummary,omitempty"`
	// The firmware version of the Cisco Integrated Management Controller (CIMC) for this server.
	Firmware *string `json:"Firmware,omitempty"`
	// The IPv4 address configured on the management interface of the Integrated Management Controller.
	Ipv4Address    *string             `json:"Ipv4Address,omitempty"`
	KvmIpAddresses *[]ComputeIpAddress `json:"KvmIpAddresses,omitempty"`
	// The memory speed, in megahertz.
	MemorySpeed *string `json:"MemorySpeed,omitempty"`
	// Management address of the server.
	MgmtIpAddress *string `json:"MgmtIpAddress,omitempty"`
	// This field identifies the model of the given component.
	Model *string `json:"Model,omitempty"`
	// The name of the UCS Fabric Interconnect cluster or Cisco Integrated Management Controller (CIMC). When this server is attached to a UCS Fabric Interconnect, the value of this property is the name of the UCS Fabric Interconnect. When this server configured in standalone mode, the value of this property is the name of the Cisco Integrated Management Controller.
	Name *string `json:"Name,omitempty"`
	// Total number of Adaptors available.
	NumAdaptors *int64 `json:"NumAdaptors,omitempty"`
	// Total number of CPU cores available.
	NumCpuCores *int64 `json:"NumCpuCores,omitempty"`
	// Number of CPU cores enabled.
	NumCpuCoresEnabled *int64 `json:"NumCpuCoresEnabled,omitempty"`
	// Total number of CPU's available.
	NumCpus *int64 `json:"NumCpus,omitempty"`
	// Number of Ethernet Host Interfaces.
	NumEthHostInterfaces *int64 `json:"NumEthHostInterfaces,omitempty"`
	// Number of Fibre channel Host Interfaces.
	NumFcHostInterfaces *int64 `json:"NumFcHostInterfaces,omitempty"`
	// Number of threads enabled.
	NumThreads *int64 `json:"NumThreads,omitempty"`
	// Current power state of the server.
	OperPowerState *string `json:"OperPowerState,omitempty"`
	OperState      *string `json:"OperState,omitempty"`
	Operability    *string `json:"Operability,omitempty"`
	// Platform type of the device.
	PlatformType *string `json:"PlatformType,omitempty"`
	Presence     *string `json:"Presence,omitempty"`
	Revision     *string `json:"Revision,omitempty"`
	// The Relative Name uniquely identifies an object within a given context.
	Rn         *string `json:"Rn,omitempty"`
	ScaledMode *string `json:"ScaledMode,omitempty"`
	// This field identifies the serial of the given component.
	Serial *string `json:"Serial,omitempty"`
	// The server id of the Rack server.
	ServerId *int64 `json:"ServerId,omitempty"`
	// The service profile assigned.
	ServiceProfile *string `json:"ServiceProfile,omitempty"`
	SlotId         *int64  `json:"SlotId,omitempty"`
	// The source object type of this view MO.
	SourceObjectType *string `json:"SourceObjectType,omitempty"`
	TotalMemory      *int64  `json:"TotalMemory,omitempty"`
	UserLabel        *string `json:"UserLabel,omitempty"`
	Uuid             *string `json:"Uuid,omitempty"`
	// This field identifies the vendor of the given component.
	Vendor           *string                              `json:"Vendor,omitempty"`
	RegisteredDevice *AssetDeviceRegistrationRelationship `json:"RegisteredDevice,omitempty"`
}

// NewComputePhysicalSummary instantiates a new ComputePhysicalSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComputePhysicalSummary() *ComputePhysicalSummary {
	this := ComputePhysicalSummary{}
	return &this
}

// NewComputePhysicalSummaryWithDefaults instantiates a new ComputePhysicalSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComputePhysicalSummaryWithDefaults() *ComputePhysicalSummary {
	this := ComputePhysicalSummary{}
	return &this
}

// GetAdminPowerState returns the AdminPowerState field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetAdminPowerState() string {
	if o == nil || o.AdminPowerState == nil {
		var ret string
		return ret
	}
	return *o.AdminPowerState
}

// GetAdminPowerStateOk returns a tuple with the AdminPowerState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetAdminPowerStateOk() (*string, bool) {
	if o == nil || o.AdminPowerState == nil {
		return nil, false
	}
	return o.AdminPowerState, true
}

// HasAdminPowerState returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasAdminPowerState() bool {
	if o != nil && o.AdminPowerState != nil {
		return true
	}

	return false
}

// SetAdminPowerState gets a reference to the given string and assigns it to the AdminPowerState field.
func (o *ComputePhysicalSummary) SetAdminPowerState(v string) {
	o.AdminPowerState = &v
}

// GetAssetTag returns the AssetTag field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetAssetTag() string {
	if o == nil || o.AssetTag == nil {
		var ret string
		return ret
	}
	return *o.AssetTag
}

// GetAssetTagOk returns a tuple with the AssetTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetAssetTagOk() (*string, bool) {
	if o == nil || o.AssetTag == nil {
		return nil, false
	}
	return o.AssetTag, true
}

// HasAssetTag returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasAssetTag() bool {
	if o != nil && o.AssetTag != nil {
		return true
	}

	return false
}

// SetAssetTag gets a reference to the given string and assigns it to the AssetTag field.
func (o *ComputePhysicalSummary) SetAssetTag(v string) {
	o.AssetTag = &v
}

// GetAvailableMemory returns the AvailableMemory field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetAvailableMemory() int64 {
	if o == nil || o.AvailableMemory == nil {
		var ret int64
		return ret
	}
	return *o.AvailableMemory
}

// GetAvailableMemoryOk returns a tuple with the AvailableMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetAvailableMemoryOk() (*int64, bool) {
	if o == nil || o.AvailableMemory == nil {
		return nil, false
	}
	return o.AvailableMemory, true
}

// HasAvailableMemory returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasAvailableMemory() bool {
	if o != nil && o.AvailableMemory != nil {
		return true
	}

	return false
}

// SetAvailableMemory gets a reference to the given int64 and assigns it to the AvailableMemory field.
func (o *ComputePhysicalSummary) SetAvailableMemory(v int64) {
	o.AvailableMemory = &v
}

// GetChassisId returns the ChassisId field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetChassisId() string {
	if o == nil || o.ChassisId == nil {
		var ret string
		return ret
	}
	return *o.ChassisId
}

// GetChassisIdOk returns a tuple with the ChassisId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetChassisIdOk() (*string, bool) {
	if o == nil || o.ChassisId == nil {
		return nil, false
	}
	return o.ChassisId, true
}

// HasChassisId returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasChassisId() bool {
	if o != nil && o.ChassisId != nil {
		return true
	}

	return false
}

// SetChassisId gets a reference to the given string and assigns it to the ChassisId field.
func (o *ComputePhysicalSummary) SetChassisId(v string) {
	o.ChassisId = &v
}

// GetCpuCapacity returns the CpuCapacity field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetCpuCapacity() float32 {
	if o == nil || o.CpuCapacity == nil {
		var ret float32
		return ret
	}
	return *o.CpuCapacity
}

// GetCpuCapacityOk returns a tuple with the CpuCapacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetCpuCapacityOk() (*float32, bool) {
	if o == nil || o.CpuCapacity == nil {
		return nil, false
	}
	return o.CpuCapacity, true
}

// HasCpuCapacity returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasCpuCapacity() bool {
	if o != nil && o.CpuCapacity != nil {
		return true
	}

	return false
}

// SetCpuCapacity gets a reference to the given float32 and assigns it to the CpuCapacity field.
func (o *ComputePhysicalSummary) SetCpuCapacity(v float32) {
	o.CpuCapacity = &v
}

// GetDeviceMoId returns the DeviceMoId field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetDeviceMoId() string {
	if o == nil || o.DeviceMoId == nil {
		var ret string
		return ret
	}
	return *o.DeviceMoId
}

// GetDeviceMoIdOk returns a tuple with the DeviceMoId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetDeviceMoIdOk() (*string, bool) {
	if o == nil || o.DeviceMoId == nil {
		return nil, false
	}
	return o.DeviceMoId, true
}

// HasDeviceMoId returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasDeviceMoId() bool {
	if o != nil && o.DeviceMoId != nil {
		return true
	}

	return false
}

// SetDeviceMoId gets a reference to the given string and assigns it to the DeviceMoId field.
func (o *ComputePhysicalSummary) SetDeviceMoId(v string) {
	o.DeviceMoId = &v
}

// GetDn returns the Dn field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetDn() string {
	if o == nil || o.Dn == nil {
		var ret string
		return ret
	}
	return *o.Dn
}

// GetDnOk returns a tuple with the Dn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetDnOk() (*string, bool) {
	if o == nil || o.Dn == nil {
		return nil, false
	}
	return o.Dn, true
}

// HasDn returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasDn() bool {
	if o != nil && o.Dn != nil {
		return true
	}

	return false
}

// SetDn gets a reference to the given string and assigns it to the Dn field.
func (o *ComputePhysicalSummary) SetDn(v string) {
	o.Dn = &v
}

// GetFaultSummary returns the FaultSummary field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetFaultSummary() int64 {
	if o == nil || o.FaultSummary == nil {
		var ret int64
		return ret
	}
	return *o.FaultSummary
}

// GetFaultSummaryOk returns a tuple with the FaultSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetFaultSummaryOk() (*int64, bool) {
	if o == nil || o.FaultSummary == nil {
		return nil, false
	}
	return o.FaultSummary, true
}

// HasFaultSummary returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasFaultSummary() bool {
	if o != nil && o.FaultSummary != nil {
		return true
	}

	return false
}

// SetFaultSummary gets a reference to the given int64 and assigns it to the FaultSummary field.
func (o *ComputePhysicalSummary) SetFaultSummary(v int64) {
	o.FaultSummary = &v
}

// GetFirmware returns the Firmware field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetFirmware() string {
	if o == nil || o.Firmware == nil {
		var ret string
		return ret
	}
	return *o.Firmware
}

// GetFirmwareOk returns a tuple with the Firmware field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetFirmwareOk() (*string, bool) {
	if o == nil || o.Firmware == nil {
		return nil, false
	}
	return o.Firmware, true
}

// HasFirmware returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasFirmware() bool {
	if o != nil && o.Firmware != nil {
		return true
	}

	return false
}

// SetFirmware gets a reference to the given string and assigns it to the Firmware field.
func (o *ComputePhysicalSummary) SetFirmware(v string) {
	o.Firmware = &v
}

// GetIpv4Address returns the Ipv4Address field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetIpv4Address() string {
	if o == nil || o.Ipv4Address == nil {
		var ret string
		return ret
	}
	return *o.Ipv4Address
}

// GetIpv4AddressOk returns a tuple with the Ipv4Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetIpv4AddressOk() (*string, bool) {
	if o == nil || o.Ipv4Address == nil {
		return nil, false
	}
	return o.Ipv4Address, true
}

// HasIpv4Address returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasIpv4Address() bool {
	if o != nil && o.Ipv4Address != nil {
		return true
	}

	return false
}

// SetIpv4Address gets a reference to the given string and assigns it to the Ipv4Address field.
func (o *ComputePhysicalSummary) SetIpv4Address(v string) {
	o.Ipv4Address = &v
}

// GetKvmIpAddresses returns the KvmIpAddresses field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetKvmIpAddresses() []ComputeIpAddress {
	if o == nil || o.KvmIpAddresses == nil {
		var ret []ComputeIpAddress
		return ret
	}
	return *o.KvmIpAddresses
}

// GetKvmIpAddressesOk returns a tuple with the KvmIpAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetKvmIpAddressesOk() (*[]ComputeIpAddress, bool) {
	if o == nil || o.KvmIpAddresses == nil {
		return nil, false
	}
	return o.KvmIpAddresses, true
}

// HasKvmIpAddresses returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasKvmIpAddresses() bool {
	if o != nil && o.KvmIpAddresses != nil {
		return true
	}

	return false
}

// SetKvmIpAddresses gets a reference to the given []ComputeIpAddress and assigns it to the KvmIpAddresses field.
func (o *ComputePhysicalSummary) SetKvmIpAddresses(v []ComputeIpAddress) {
	o.KvmIpAddresses = &v
}

// GetMemorySpeed returns the MemorySpeed field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetMemorySpeed() string {
	if o == nil || o.MemorySpeed == nil {
		var ret string
		return ret
	}
	return *o.MemorySpeed
}

// GetMemorySpeedOk returns a tuple with the MemorySpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetMemorySpeedOk() (*string, bool) {
	if o == nil || o.MemorySpeed == nil {
		return nil, false
	}
	return o.MemorySpeed, true
}

// HasMemorySpeed returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasMemorySpeed() bool {
	if o != nil && o.MemorySpeed != nil {
		return true
	}

	return false
}

// SetMemorySpeed gets a reference to the given string and assigns it to the MemorySpeed field.
func (o *ComputePhysicalSummary) SetMemorySpeed(v string) {
	o.MemorySpeed = &v
}

// GetMgmtIpAddress returns the MgmtIpAddress field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetMgmtIpAddress() string {
	if o == nil || o.MgmtIpAddress == nil {
		var ret string
		return ret
	}
	return *o.MgmtIpAddress
}

// GetMgmtIpAddressOk returns a tuple with the MgmtIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetMgmtIpAddressOk() (*string, bool) {
	if o == nil || o.MgmtIpAddress == nil {
		return nil, false
	}
	return o.MgmtIpAddress, true
}

// HasMgmtIpAddress returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasMgmtIpAddress() bool {
	if o != nil && o.MgmtIpAddress != nil {
		return true
	}

	return false
}

// SetMgmtIpAddress gets a reference to the given string and assigns it to the MgmtIpAddress field.
func (o *ComputePhysicalSummary) SetMgmtIpAddress(v string) {
	o.MgmtIpAddress = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetModel() string {
	if o == nil || o.Model == nil {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetModelOk() (*string, bool) {
	if o == nil || o.Model == nil {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasModel() bool {
	if o != nil && o.Model != nil {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *ComputePhysicalSummary) SetModel(v string) {
	o.Model = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ComputePhysicalSummary) SetName(v string) {
	o.Name = &v
}

// GetNumAdaptors returns the NumAdaptors field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetNumAdaptors() int64 {
	if o == nil || o.NumAdaptors == nil {
		var ret int64
		return ret
	}
	return *o.NumAdaptors
}

// GetNumAdaptorsOk returns a tuple with the NumAdaptors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetNumAdaptorsOk() (*int64, bool) {
	if o == nil || o.NumAdaptors == nil {
		return nil, false
	}
	return o.NumAdaptors, true
}

// HasNumAdaptors returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasNumAdaptors() bool {
	if o != nil && o.NumAdaptors != nil {
		return true
	}

	return false
}

// SetNumAdaptors gets a reference to the given int64 and assigns it to the NumAdaptors field.
func (o *ComputePhysicalSummary) SetNumAdaptors(v int64) {
	o.NumAdaptors = &v
}

// GetNumCpuCores returns the NumCpuCores field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetNumCpuCores() int64 {
	if o == nil || o.NumCpuCores == nil {
		var ret int64
		return ret
	}
	return *o.NumCpuCores
}

// GetNumCpuCoresOk returns a tuple with the NumCpuCores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetNumCpuCoresOk() (*int64, bool) {
	if o == nil || o.NumCpuCores == nil {
		return nil, false
	}
	return o.NumCpuCores, true
}

// HasNumCpuCores returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasNumCpuCores() bool {
	if o != nil && o.NumCpuCores != nil {
		return true
	}

	return false
}

// SetNumCpuCores gets a reference to the given int64 and assigns it to the NumCpuCores field.
func (o *ComputePhysicalSummary) SetNumCpuCores(v int64) {
	o.NumCpuCores = &v
}

// GetNumCpuCoresEnabled returns the NumCpuCoresEnabled field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetNumCpuCoresEnabled() int64 {
	if o == nil || o.NumCpuCoresEnabled == nil {
		var ret int64
		return ret
	}
	return *o.NumCpuCoresEnabled
}

// GetNumCpuCoresEnabledOk returns a tuple with the NumCpuCoresEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetNumCpuCoresEnabledOk() (*int64, bool) {
	if o == nil || o.NumCpuCoresEnabled == nil {
		return nil, false
	}
	return o.NumCpuCoresEnabled, true
}

// HasNumCpuCoresEnabled returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasNumCpuCoresEnabled() bool {
	if o != nil && o.NumCpuCoresEnabled != nil {
		return true
	}

	return false
}

// SetNumCpuCoresEnabled gets a reference to the given int64 and assigns it to the NumCpuCoresEnabled field.
func (o *ComputePhysicalSummary) SetNumCpuCoresEnabled(v int64) {
	o.NumCpuCoresEnabled = &v
}

// GetNumCpus returns the NumCpus field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetNumCpus() int64 {
	if o == nil || o.NumCpus == nil {
		var ret int64
		return ret
	}
	return *o.NumCpus
}

// GetNumCpusOk returns a tuple with the NumCpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetNumCpusOk() (*int64, bool) {
	if o == nil || o.NumCpus == nil {
		return nil, false
	}
	return o.NumCpus, true
}

// HasNumCpus returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasNumCpus() bool {
	if o != nil && o.NumCpus != nil {
		return true
	}

	return false
}

// SetNumCpus gets a reference to the given int64 and assigns it to the NumCpus field.
func (o *ComputePhysicalSummary) SetNumCpus(v int64) {
	o.NumCpus = &v
}

// GetNumEthHostInterfaces returns the NumEthHostInterfaces field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetNumEthHostInterfaces() int64 {
	if o == nil || o.NumEthHostInterfaces == nil {
		var ret int64
		return ret
	}
	return *o.NumEthHostInterfaces
}

// GetNumEthHostInterfacesOk returns a tuple with the NumEthHostInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetNumEthHostInterfacesOk() (*int64, bool) {
	if o == nil || o.NumEthHostInterfaces == nil {
		return nil, false
	}
	return o.NumEthHostInterfaces, true
}

// HasNumEthHostInterfaces returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasNumEthHostInterfaces() bool {
	if o != nil && o.NumEthHostInterfaces != nil {
		return true
	}

	return false
}

// SetNumEthHostInterfaces gets a reference to the given int64 and assigns it to the NumEthHostInterfaces field.
func (o *ComputePhysicalSummary) SetNumEthHostInterfaces(v int64) {
	o.NumEthHostInterfaces = &v
}

// GetNumFcHostInterfaces returns the NumFcHostInterfaces field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetNumFcHostInterfaces() int64 {
	if o == nil || o.NumFcHostInterfaces == nil {
		var ret int64
		return ret
	}
	return *o.NumFcHostInterfaces
}

// GetNumFcHostInterfacesOk returns a tuple with the NumFcHostInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetNumFcHostInterfacesOk() (*int64, bool) {
	if o == nil || o.NumFcHostInterfaces == nil {
		return nil, false
	}
	return o.NumFcHostInterfaces, true
}

// HasNumFcHostInterfaces returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasNumFcHostInterfaces() bool {
	if o != nil && o.NumFcHostInterfaces != nil {
		return true
	}

	return false
}

// SetNumFcHostInterfaces gets a reference to the given int64 and assigns it to the NumFcHostInterfaces field.
func (o *ComputePhysicalSummary) SetNumFcHostInterfaces(v int64) {
	o.NumFcHostInterfaces = &v
}

// GetNumThreads returns the NumThreads field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetNumThreads() int64 {
	if o == nil || o.NumThreads == nil {
		var ret int64
		return ret
	}
	return *o.NumThreads
}

// GetNumThreadsOk returns a tuple with the NumThreads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetNumThreadsOk() (*int64, bool) {
	if o == nil || o.NumThreads == nil {
		return nil, false
	}
	return o.NumThreads, true
}

// HasNumThreads returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasNumThreads() bool {
	if o != nil && o.NumThreads != nil {
		return true
	}

	return false
}

// SetNumThreads gets a reference to the given int64 and assigns it to the NumThreads field.
func (o *ComputePhysicalSummary) SetNumThreads(v int64) {
	o.NumThreads = &v
}

// GetOperPowerState returns the OperPowerState field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetOperPowerState() string {
	if o == nil || o.OperPowerState == nil {
		var ret string
		return ret
	}
	return *o.OperPowerState
}

// GetOperPowerStateOk returns a tuple with the OperPowerState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetOperPowerStateOk() (*string, bool) {
	if o == nil || o.OperPowerState == nil {
		return nil, false
	}
	return o.OperPowerState, true
}

// HasOperPowerState returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasOperPowerState() bool {
	if o != nil && o.OperPowerState != nil {
		return true
	}

	return false
}

// SetOperPowerState gets a reference to the given string and assigns it to the OperPowerState field.
func (o *ComputePhysicalSummary) SetOperPowerState(v string) {
	o.OperPowerState = &v
}

// GetOperState returns the OperState field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetOperState() string {
	if o == nil || o.OperState == nil {
		var ret string
		return ret
	}
	return *o.OperState
}

// GetOperStateOk returns a tuple with the OperState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetOperStateOk() (*string, bool) {
	if o == nil || o.OperState == nil {
		return nil, false
	}
	return o.OperState, true
}

// HasOperState returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasOperState() bool {
	if o != nil && o.OperState != nil {
		return true
	}

	return false
}

// SetOperState gets a reference to the given string and assigns it to the OperState field.
func (o *ComputePhysicalSummary) SetOperState(v string) {
	o.OperState = &v
}

// GetOperability returns the Operability field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetOperability() string {
	if o == nil || o.Operability == nil {
		var ret string
		return ret
	}
	return *o.Operability
}

// GetOperabilityOk returns a tuple with the Operability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetOperabilityOk() (*string, bool) {
	if o == nil || o.Operability == nil {
		return nil, false
	}
	return o.Operability, true
}

// HasOperability returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasOperability() bool {
	if o != nil && o.Operability != nil {
		return true
	}

	return false
}

// SetOperability gets a reference to the given string and assigns it to the Operability field.
func (o *ComputePhysicalSummary) SetOperability(v string) {
	o.Operability = &v
}

// GetPlatformType returns the PlatformType field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetPlatformType() string {
	if o == nil || o.PlatformType == nil {
		var ret string
		return ret
	}
	return *o.PlatformType
}

// GetPlatformTypeOk returns a tuple with the PlatformType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetPlatformTypeOk() (*string, bool) {
	if o == nil || o.PlatformType == nil {
		return nil, false
	}
	return o.PlatformType, true
}

// HasPlatformType returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasPlatformType() bool {
	if o != nil && o.PlatformType != nil {
		return true
	}

	return false
}

// SetPlatformType gets a reference to the given string and assigns it to the PlatformType field.
func (o *ComputePhysicalSummary) SetPlatformType(v string) {
	o.PlatformType = &v
}

// GetPresence returns the Presence field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetPresence() string {
	if o == nil || o.Presence == nil {
		var ret string
		return ret
	}
	return *o.Presence
}

// GetPresenceOk returns a tuple with the Presence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetPresenceOk() (*string, bool) {
	if o == nil || o.Presence == nil {
		return nil, false
	}
	return o.Presence, true
}

// HasPresence returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasPresence() bool {
	if o != nil && o.Presence != nil {
		return true
	}

	return false
}

// SetPresence gets a reference to the given string and assigns it to the Presence field.
func (o *ComputePhysicalSummary) SetPresence(v string) {
	o.Presence = &v
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetRevision() string {
	if o == nil || o.Revision == nil {
		var ret string
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetRevisionOk() (*string, bool) {
	if o == nil || o.Revision == nil {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasRevision() bool {
	if o != nil && o.Revision != nil {
		return true
	}

	return false
}

// SetRevision gets a reference to the given string and assigns it to the Revision field.
func (o *ComputePhysicalSummary) SetRevision(v string) {
	o.Revision = &v
}

// GetRn returns the Rn field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetRn() string {
	if o == nil || o.Rn == nil {
		var ret string
		return ret
	}
	return *o.Rn
}

// GetRnOk returns a tuple with the Rn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetRnOk() (*string, bool) {
	if o == nil || o.Rn == nil {
		return nil, false
	}
	return o.Rn, true
}

// HasRn returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasRn() bool {
	if o != nil && o.Rn != nil {
		return true
	}

	return false
}

// SetRn gets a reference to the given string and assigns it to the Rn field.
func (o *ComputePhysicalSummary) SetRn(v string) {
	o.Rn = &v
}

// GetScaledMode returns the ScaledMode field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetScaledMode() string {
	if o == nil || o.ScaledMode == nil {
		var ret string
		return ret
	}
	return *o.ScaledMode
}

// GetScaledModeOk returns a tuple with the ScaledMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetScaledModeOk() (*string, bool) {
	if o == nil || o.ScaledMode == nil {
		return nil, false
	}
	return o.ScaledMode, true
}

// HasScaledMode returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasScaledMode() bool {
	if o != nil && o.ScaledMode != nil {
		return true
	}

	return false
}

// SetScaledMode gets a reference to the given string and assigns it to the ScaledMode field.
func (o *ComputePhysicalSummary) SetScaledMode(v string) {
	o.ScaledMode = &v
}

// GetSerial returns the Serial field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetSerial() string {
	if o == nil || o.Serial == nil {
		var ret string
		return ret
	}
	return *o.Serial
}

// GetSerialOk returns a tuple with the Serial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetSerialOk() (*string, bool) {
	if o == nil || o.Serial == nil {
		return nil, false
	}
	return o.Serial, true
}

// HasSerial returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasSerial() bool {
	if o != nil && o.Serial != nil {
		return true
	}

	return false
}

// SetSerial gets a reference to the given string and assigns it to the Serial field.
func (o *ComputePhysicalSummary) SetSerial(v string) {
	o.Serial = &v
}

// GetServerId returns the ServerId field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetServerId() int64 {
	if o == nil || o.ServerId == nil {
		var ret int64
		return ret
	}
	return *o.ServerId
}

// GetServerIdOk returns a tuple with the ServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetServerIdOk() (*int64, bool) {
	if o == nil || o.ServerId == nil {
		return nil, false
	}
	return o.ServerId, true
}

// HasServerId returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasServerId() bool {
	if o != nil && o.ServerId != nil {
		return true
	}

	return false
}

// SetServerId gets a reference to the given int64 and assigns it to the ServerId field.
func (o *ComputePhysicalSummary) SetServerId(v int64) {
	o.ServerId = &v
}

// GetServiceProfile returns the ServiceProfile field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetServiceProfile() string {
	if o == nil || o.ServiceProfile == nil {
		var ret string
		return ret
	}
	return *o.ServiceProfile
}

// GetServiceProfileOk returns a tuple with the ServiceProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetServiceProfileOk() (*string, bool) {
	if o == nil || o.ServiceProfile == nil {
		return nil, false
	}
	return o.ServiceProfile, true
}

// HasServiceProfile returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasServiceProfile() bool {
	if o != nil && o.ServiceProfile != nil {
		return true
	}

	return false
}

// SetServiceProfile gets a reference to the given string and assigns it to the ServiceProfile field.
func (o *ComputePhysicalSummary) SetServiceProfile(v string) {
	o.ServiceProfile = &v
}

// GetSlotId returns the SlotId field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetSlotId() int64 {
	if o == nil || o.SlotId == nil {
		var ret int64
		return ret
	}
	return *o.SlotId
}

// GetSlotIdOk returns a tuple with the SlotId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetSlotIdOk() (*int64, bool) {
	if o == nil || o.SlotId == nil {
		return nil, false
	}
	return o.SlotId, true
}

// HasSlotId returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasSlotId() bool {
	if o != nil && o.SlotId != nil {
		return true
	}

	return false
}

// SetSlotId gets a reference to the given int64 and assigns it to the SlotId field.
func (o *ComputePhysicalSummary) SetSlotId(v int64) {
	o.SlotId = &v
}

// GetSourceObjectType returns the SourceObjectType field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetSourceObjectType() string {
	if o == nil || o.SourceObjectType == nil {
		var ret string
		return ret
	}
	return *o.SourceObjectType
}

// GetSourceObjectTypeOk returns a tuple with the SourceObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetSourceObjectTypeOk() (*string, bool) {
	if o == nil || o.SourceObjectType == nil {
		return nil, false
	}
	return o.SourceObjectType, true
}

// HasSourceObjectType returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasSourceObjectType() bool {
	if o != nil && o.SourceObjectType != nil {
		return true
	}

	return false
}

// SetSourceObjectType gets a reference to the given string and assigns it to the SourceObjectType field.
func (o *ComputePhysicalSummary) SetSourceObjectType(v string) {
	o.SourceObjectType = &v
}

// GetTotalMemory returns the TotalMemory field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetTotalMemory() int64 {
	if o == nil || o.TotalMemory == nil {
		var ret int64
		return ret
	}
	return *o.TotalMemory
}

// GetTotalMemoryOk returns a tuple with the TotalMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetTotalMemoryOk() (*int64, bool) {
	if o == nil || o.TotalMemory == nil {
		return nil, false
	}
	return o.TotalMemory, true
}

// HasTotalMemory returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasTotalMemory() bool {
	if o != nil && o.TotalMemory != nil {
		return true
	}

	return false
}

// SetTotalMemory gets a reference to the given int64 and assigns it to the TotalMemory field.
func (o *ComputePhysicalSummary) SetTotalMemory(v int64) {
	o.TotalMemory = &v
}

// GetUserLabel returns the UserLabel field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetUserLabel() string {
	if o == nil || o.UserLabel == nil {
		var ret string
		return ret
	}
	return *o.UserLabel
}

// GetUserLabelOk returns a tuple with the UserLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetUserLabelOk() (*string, bool) {
	if o == nil || o.UserLabel == nil {
		return nil, false
	}
	return o.UserLabel, true
}

// HasUserLabel returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasUserLabel() bool {
	if o != nil && o.UserLabel != nil {
		return true
	}

	return false
}

// SetUserLabel gets a reference to the given string and assigns it to the UserLabel field.
func (o *ComputePhysicalSummary) SetUserLabel(v string) {
	o.UserLabel = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *ComputePhysicalSummary) SetUuid(v string) {
	o.Uuid = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetVendor() string {
	if o == nil || o.Vendor == nil {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetVendorOk() (*string, bool) {
	if o == nil || o.Vendor == nil {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasVendor() bool {
	if o != nil && o.Vendor != nil {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *ComputePhysicalSummary) SetVendor(v string) {
	o.Vendor = &v
}

// GetRegisteredDevice returns the RegisteredDevice field value if set, zero value otherwise.
func (o *ComputePhysicalSummary) GetRegisteredDevice() AssetDeviceRegistrationRelationship {
	if o == nil || o.RegisteredDevice == nil {
		var ret AssetDeviceRegistrationRelationship
		return ret
	}
	return *o.RegisteredDevice
}

// GetRegisteredDeviceOk returns a tuple with the RegisteredDevice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputePhysicalSummary) GetRegisteredDeviceOk() (*AssetDeviceRegistrationRelationship, bool) {
	if o == nil || o.RegisteredDevice == nil {
		return nil, false
	}
	return o.RegisteredDevice, true
}

// HasRegisteredDevice returns a boolean if a field has been set.
func (o *ComputePhysicalSummary) HasRegisteredDevice() bool {
	if o != nil && o.RegisteredDevice != nil {
		return true
	}

	return false
}

// SetRegisteredDevice gets a reference to the given AssetDeviceRegistrationRelationship and assigns it to the RegisteredDevice field.
func (o *ComputePhysicalSummary) SetRegisteredDevice(v AssetDeviceRegistrationRelationship) {
	o.RegisteredDevice = &v
}

func (o ComputePhysicalSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedViewsView, errViewsView := json.Marshal(o.ViewsView)
	if errViewsView != nil {
		return []byte{}, errViewsView
	}
	errViewsView = json.Unmarshal([]byte(serializedViewsView), &toSerialize)
	if errViewsView != nil {
		return []byte{}, errViewsView
	}
	if o.AdminPowerState != nil {
		toSerialize["AdminPowerState"] = o.AdminPowerState
	}
	if o.AssetTag != nil {
		toSerialize["AssetTag"] = o.AssetTag
	}
	if o.AvailableMemory != nil {
		toSerialize["AvailableMemory"] = o.AvailableMemory
	}
	if o.ChassisId != nil {
		toSerialize["ChassisId"] = o.ChassisId
	}
	if o.CpuCapacity != nil {
		toSerialize["CpuCapacity"] = o.CpuCapacity
	}
	if o.DeviceMoId != nil {
		toSerialize["DeviceMoId"] = o.DeviceMoId
	}
	if o.Dn != nil {
		toSerialize["Dn"] = o.Dn
	}
	if o.FaultSummary != nil {
		toSerialize["FaultSummary"] = o.FaultSummary
	}
	if o.Firmware != nil {
		toSerialize["Firmware"] = o.Firmware
	}
	if o.Ipv4Address != nil {
		toSerialize["Ipv4Address"] = o.Ipv4Address
	}
	if o.KvmIpAddresses != nil {
		toSerialize["KvmIpAddresses"] = o.KvmIpAddresses
	}
	if o.MemorySpeed != nil {
		toSerialize["MemorySpeed"] = o.MemorySpeed
	}
	if o.MgmtIpAddress != nil {
		toSerialize["MgmtIpAddress"] = o.MgmtIpAddress
	}
	if o.Model != nil {
		toSerialize["Model"] = o.Model
	}
	if o.Name != nil {
		toSerialize["Name"] = o.Name
	}
	if o.NumAdaptors != nil {
		toSerialize["NumAdaptors"] = o.NumAdaptors
	}
	if o.NumCpuCores != nil {
		toSerialize["NumCpuCores"] = o.NumCpuCores
	}
	if o.NumCpuCoresEnabled != nil {
		toSerialize["NumCpuCoresEnabled"] = o.NumCpuCoresEnabled
	}
	if o.NumCpus != nil {
		toSerialize["NumCpus"] = o.NumCpus
	}
	if o.NumEthHostInterfaces != nil {
		toSerialize["NumEthHostInterfaces"] = o.NumEthHostInterfaces
	}
	if o.NumFcHostInterfaces != nil {
		toSerialize["NumFcHostInterfaces"] = o.NumFcHostInterfaces
	}
	if o.NumThreads != nil {
		toSerialize["NumThreads"] = o.NumThreads
	}
	if o.OperPowerState != nil {
		toSerialize["OperPowerState"] = o.OperPowerState
	}
	if o.OperState != nil {
		toSerialize["OperState"] = o.OperState
	}
	if o.Operability != nil {
		toSerialize["Operability"] = o.Operability
	}
	if o.PlatformType != nil {
		toSerialize["PlatformType"] = o.PlatformType
	}
	if o.Presence != nil {
		toSerialize["Presence"] = o.Presence
	}
	if o.Revision != nil {
		toSerialize["Revision"] = o.Revision
	}
	if o.Rn != nil {
		toSerialize["Rn"] = o.Rn
	}
	if o.ScaledMode != nil {
		toSerialize["ScaledMode"] = o.ScaledMode
	}
	if o.Serial != nil {
		toSerialize["Serial"] = o.Serial
	}
	if o.ServerId != nil {
		toSerialize["ServerId"] = o.ServerId
	}
	if o.ServiceProfile != nil {
		toSerialize["ServiceProfile"] = o.ServiceProfile
	}
	if o.SlotId != nil {
		toSerialize["SlotId"] = o.SlotId
	}
	if o.SourceObjectType != nil {
		toSerialize["SourceObjectType"] = o.SourceObjectType
	}
	if o.TotalMemory != nil {
		toSerialize["TotalMemory"] = o.TotalMemory
	}
	if o.UserLabel != nil {
		toSerialize["UserLabel"] = o.UserLabel
	}
	if o.Uuid != nil {
		toSerialize["Uuid"] = o.Uuid
	}
	if o.Vendor != nil {
		toSerialize["Vendor"] = o.Vendor
	}
	if o.RegisteredDevice != nil {
		toSerialize["RegisteredDevice"] = o.RegisteredDevice
	}
	return json.Marshal(toSerialize)
}

type NullableComputePhysicalSummary struct {
	value *ComputePhysicalSummary
	isSet bool
}

func (v NullableComputePhysicalSummary) Get() *ComputePhysicalSummary {
	return v.value
}

func (v *NullableComputePhysicalSummary) Set(val *ComputePhysicalSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableComputePhysicalSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableComputePhysicalSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComputePhysicalSummary(val *ComputePhysicalSummary) *NullableComputePhysicalSummary {
	return &NullableComputePhysicalSummary{value: val, isSet: true}
}

func (v NullableComputePhysicalSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComputePhysicalSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
